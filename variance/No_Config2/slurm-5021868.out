Registered Datasets: ['satellite_Train', 'satellite_Val']
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/HP743_12S_500x.png
	num_instances: 31
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S06_03_SE1_500X75.png
	num_instances: 96
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/HP743_2S_500x.png
	num_instances: 47
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S08_03_SE1_1000X03.png
	num_instances: 88
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S06_01_SE1_500X67.png
	num_instances: 54
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S04_02_SE1_1000X50.png
	num_instances: 45
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S03_03_SE1_1250X41.png
	num_instances: 111
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S02_01_SE1_300X14.png
	num_instances: 98
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/HP743_2S_250x.png
	num_instances: 49
Weights not found, weights will be downloaded from source: https://dl.fbaipublicfiles.com/detectron2/COCO-InstanceSegmentation/mask_rcnn_R_50_FPN_3x/137849600/model_final_f10217.pkl
[32m[11/14 10:58:44 d2.engine.defaults]: [0mModel:
GeneralizedRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): StandardROIHeads(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): FastRCNNConvFCHead(
      (flatten): Flatten(start_dim=1, end_dim=-1)
      (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      (fc_relu1): ReLU()
      (fc2): Linear(in_features=1024, out_features=1024, bias=True)
      (fc_relu2): ReLU()
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=1024, out_features=2, bias=True)
      (bbox_pred): Linear(in_features=1024, out_features=4, bias=True)
    )
    (mask_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(14, 14), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(14, 14), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (mask_head): MaskRCNNConvUpsampleHead(
      (mask_fcn1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn2): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn3): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn4): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
      (deconv_relu): ReLU()
      (predictor): Conv2d(256, 1, kernel_size=(1, 1), stride=(1, 1))
    )
  )
)
[32m[11/14 10:58:44 d2.data.build]: [0mRemoved 0 images with no usable annotations. 20 images left.
[32m[11/14 10:58:44 d2.data.build]: [0mDistribution of instances among all 1 categories:
[36m|  category  | #instances   |
|:----------:|:-------------|
| satellite  | 1412         |
|            |              |[0m
[32m[11/14 10:58:44 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[32m[11/14 10:58:44 d2.data.build]: [0mUsing training sampler TrainingSampler
[32m[11/14 10:58:44 d2.data.common]: [0mSerializing 20 elements to byte tensors and concatenating them all ...
[32m[11/14 10:58:44 d2.data.common]: [0mSerialized dataset takes 0.46 MiB
[5m[31mWARNING[0m [32m[11/14 10:58:44 d2.solver.build]: [0mSOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[32m[11/14 10:58:44 d2.checkpoint.c2_model_loading]: [0mRenaming Caffe2 weights ......
[32m[11/14 10:58:44 d2.checkpoint.c2_model_loading]: [0mFollowing weights matched with submodule backbone.bottom_up:
| Names in Model    | Names in Checkpoint      | Shapes                                          |
|:------------------|:-------------------------|:------------------------------------------------|
| res2.0.conv1.*    | res2_0_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,1,1)             |
| res2.0.conv2.*    | res2_0_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.0.conv3.*    | res2_0_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.0.shortcut.* | res2_0_branch1_{bn_*,w}  | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.1.conv1.*    | res2_1_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,256,1,1)            |
| res2.1.conv2.*    | res2_1_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.1.conv3.*    | res2_1_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.2.conv1.*    | res2_2_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,256,1,1)            |
| res2.2.conv2.*    | res2_2_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.2.conv3.*    | res2_2_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res3.0.conv1.*    | res3_0_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,256,1,1)       |
| res3.0.conv2.*    | res3_0_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.0.conv3.*    | res3_0_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.0.shortcut.* | res3_0_branch1_{bn_*,w}  | (512,) (512,) (512,) (512,) (512,256,1,1)       |
| res3.1.conv1.*    | res3_1_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.1.conv2.*    | res3_1_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.1.conv3.*    | res3_1_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.2.conv1.*    | res3_2_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.2.conv2.*    | res3_2_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.2.conv3.*    | res3_2_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.3.conv1.*    | res3_3_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.3.conv2.*    | res3_3_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.3.conv3.*    | res3_3_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res4.0.conv1.*    | res4_0_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,512,1,1)       |
| res4.0.conv2.*    | res4_0_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.0.conv3.*    | res4_0_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.0.shortcut.* | res4_0_branch1_{bn_*,w}  | (1024,) (1024,) (1024,) (1024,) (1024,512,1,1)  |
| res4.1.conv1.*    | res4_1_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.1.conv2.*    | res4_1_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.1.conv3.*    | res4_1_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.2.conv1.*    | res4_2_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.2.conv2.*    | res4_2_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.2.conv3.*    | res4_2_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.3.conv1.*    | res4_3_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.3.conv2.*    | res4_3_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.3.conv3.*    | res4_3_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.4.conv1.*    | res4_4_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.4.conv2.*    | res4_4_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.4.conv3.*    | res4_4_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.5.conv1.*    | res4_5_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.5.conv2.*    | res4_5_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.5.conv3.*    | res4_5_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res5.0.conv1.*    | res5_0_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,1024,1,1)      |
| res5.0.conv2.*    | res5_0_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.0.conv3.*    | res5_0_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| res5.0.shortcut.* | res5_0_branch1_{bn_*,w}  | (2048,) (2048,) (2048,) (2048,) (2048,1024,1,1) |
| res5.1.conv1.*    | res5_1_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,2048,1,1)      |
| res5.1.conv2.*    | res5_1_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.1.conv3.*    | res5_1_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| res5.2.conv1.*    | res5_2_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,2048,1,1)      |
| res5.2.conv2.*    | res5_2_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.2.conv3.*    | res5_2_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| stem.conv1.norm.* | res_conv1_bn_*           | (64,) (64,) (64,) (64,)                         |
| stem.conv1.weight | conv1_w                  | (64, 3, 7, 7)                                   |
[32m[11/14 10:58:44 d2.engine.train_loop]: [0mStarting training from iteration 0
[32m[11/14 10:58:47 d2.utils.events]: [0m eta: 0:18:06  iter: 19  total_loss: 3.319  loss_cls: 0.5771  loss_box_reg: 0.05277  loss_mask: 0.6686  loss_rpn_cls: 0.6933  loss_rpn_loc: 1.253  time: 0.1084  data_time: 0.0268  lr: 0.00019981  max_mem: 1824M
[32m[11/14 10:58:49 d2.utils.events]: [0m eta: 0:17:41  iter: 39  total_loss: 2.299  loss_cls: 0.3058  loss_box_reg: 0.02931  loss_mask: 0.5939  loss_rpn_cls: 0.6208  loss_rpn_loc: 0.7337  time: 0.1138  data_time: 0.0017  lr: 0.00039961  max_mem: 1824M
[32m[11/14 10:58:51 d2.utils.events]: [0m eta: 0:17:23  iter: 59  total_loss: 2.003  loss_cls: 0.1692  loss_box_reg: 0.03733  loss_mask: 0.5961  loss_rpn_cls: 0.5941  loss_rpn_loc: 0.5827  time: 0.1103  data_time: 0.0018  lr: 0.00059941  max_mem: 1824M
[32m[11/14 10:58:54 d2.utils.events]: [0m eta: 0:17:25  iter: 79  total_loss: 1.994  loss_cls: 0.1802  loss_box_reg: 0.1445  loss_mask: 0.5542  loss_rpn_cls: 0.5442  loss_rpn_loc: 0.5243  time: 0.1093  data_time: 0.0019  lr: 0.00079921  max_mem: 1824M
[32m[11/14 10:58:56 d2.utils.events]: [0m eta: 0:17:44  iter: 99  total_loss: 2.221  loss_cls: 0.3245  loss_box_reg: 0.3851  loss_mask: 0.5543  loss_rpn_cls: 0.4776  loss_rpn_loc: 0.5197  time: 0.1101  data_time: 0.0018  lr: 0.00099901  max_mem: 1824M
[32m[11/14 10:58:58 d2.utils.events]: [0m eta: 0:17:50  iter: 119  total_loss: 2.18  loss_cls: 0.2904  loss_box_reg: 0.4295  loss_mask: 0.5242  loss_rpn_cls: 0.3897  loss_rpn_loc: 0.5085  time: 0.1102  data_time: 0.0017  lr: 0.0011988  max_mem: 1824M
[32m[11/14 10:59:00 d2.utils.events]: [0m eta: 0:17:51  iter: 139  total_loss: 2.064  loss_cls: 0.2743  loss_box_reg: 0.4416  loss_mask: 0.4929  loss_rpn_cls: 0.3112  loss_rpn_loc: 0.5155  time: 0.1104  data_time: 0.0017  lr: 0.0013986  max_mem: 1824M
[32m[11/14 10:59:03 d2.utils.events]: [0m eta: 0:17:52  iter: 159  total_loss: 2.025  loss_cls: 0.2828  loss_box_reg: 0.4976  loss_mask: 0.4621  loss_rpn_cls: 0.3256  loss_rpn_loc: 0.4658  time: 0.1109  data_time: 0.0039  lr: 0.0015984  max_mem: 1824M
[32m[11/14 10:59:05 d2.utils.events]: [0m eta: 0:17:50  iter: 179  total_loss: 2.019  loss_cls: 0.3141  loss_box_reg: 0.4683  loss_mask: 0.4389  loss_rpn_cls: 0.2885  loss_rpn_loc: 0.4894  time: 0.1111  data_time: 0.0018  lr: 0.0017982  max_mem: 1824M
[32m[11/14 10:59:07 d2.utils.events]: [0m eta: 0:17:49  iter: 199  total_loss: 1.997  loss_cls: 0.2847  loss_box_reg: 0.4769  loss_mask: 0.406  loss_rpn_cls: 0.2934  loss_rpn_loc: 0.4617  time: 0.1111  data_time: 0.0017  lr: 0.001998  max_mem: 1824M
[32m[11/14 10:59:10 d2.utils.events]: [0m eta: 0:17:50  iter: 219  total_loss: 1.746  loss_cls: 0.2138  loss_box_reg: 0.346  loss_mask: 0.3993  loss_rpn_cls: 0.2787  loss_rpn_loc: 0.4764  time: 0.1112  data_time: 0.0017  lr: 0.0021978  max_mem: 1824M
[32m[11/14 10:59:12 d2.utils.events]: [0m eta: 0:17:50  iter: 239  total_loss: 1.853  loss_cls: 0.271  loss_box_reg: 0.45  loss_mask: 0.3883  loss_rpn_cls: 0.2569  loss_rpn_loc: 0.4592  time: 0.1114  data_time: 0.0017  lr: 0.0023976  max_mem: 1824M
[32m[11/14 10:59:14 d2.utils.events]: [0m eta: 0:17:51  iter: 259  total_loss: 1.85  loss_cls: 0.2732  loss_box_reg: 0.4747  loss_mask: 0.377  loss_rpn_cls: 0.2517  loss_rpn_loc: 0.446  time: 0.1116  data_time: 0.0018  lr: 0.0025974  max_mem: 1824M
[32m[11/14 10:59:16 d2.utils.events]: [0m eta: 0:17:51  iter: 279  total_loss: 1.771  loss_cls: 0.2597  loss_box_reg: 0.4823  loss_mask: 0.3398  loss_rpn_cls: 0.2289  loss_rpn_loc: 0.4306  time: 0.1116  data_time: 0.0016  lr: 0.0027972  max_mem: 1824M
[32m[11/14 10:59:19 d2.utils.events]: [0m eta: 0:17:51  iter: 299  total_loss: 1.59  loss_cls: 0.2282  loss_box_reg: 0.4305  loss_mask: 0.3412  loss_rpn_cls: 0.2356  loss_rpn_loc: 0.4539  time: 0.1118  data_time: 0.0024  lr: 0.002997  max_mem: 1824M
[32m[11/14 10:59:21 d2.utils.events]: [0m eta: 0:17:45  iter: 319  total_loss: 1.746  loss_cls: 0.2625  loss_box_reg: 0.483  loss_mask: 0.3506  loss_rpn_cls: 0.2527  loss_rpn_loc: 0.416  time: 0.1119  data_time: 0.0017  lr: 0.0031968  max_mem: 1824M
[32m[11/14 10:59:23 d2.utils.events]: [0m eta: 0:17:40  iter: 339  total_loss: 1.773  loss_cls: 0.2629  loss_box_reg: 0.4722  loss_mask: 0.3153  loss_rpn_cls: 0.2512  loss_rpn_loc: 0.4512  time: 0.1118  data_time: 0.0018  lr: 0.0033966  max_mem: 1824M
[32m[11/14 10:59:25 d2.utils.events]: [0m eta: 0:17:42  iter: 359  total_loss: 1.606  loss_cls: 0.2316  loss_box_reg: 0.3631  loss_mask: 0.3085  loss_rpn_cls: 0.1908  loss_rpn_loc: 0.4669  time: 0.1119  data_time: 0.0021  lr: 0.0035964  max_mem: 1824M
[32m[11/14 10:59:28 d2.utils.events]: [0m eta: 0:17:38  iter: 379  total_loss: 1.592  loss_cls: 0.2293  loss_box_reg: 0.391  loss_mask: 0.3251  loss_rpn_cls: 0.2278  loss_rpn_loc: 0.431  time: 0.1121  data_time: 0.0016  lr: 0.0037962  max_mem: 1824M
[32m[11/14 10:59:30 d2.utils.events]: [0m eta: 0:17:40  iter: 399  total_loss: 1.616  loss_cls: 0.2408  loss_box_reg: 0.4621  loss_mask: 0.322  loss_rpn_cls: 0.1761  loss_rpn_loc: 0.397  time: 0.1122  data_time: 0.0016  lr: 0.003996  max_mem: 1824M
[32m[11/14 10:59:32 d2.utils.events]: [0m eta: 0:17:40  iter: 419  total_loss: 1.686  loss_cls: 0.2508  loss_box_reg: 0.4607  loss_mask: 0.3152  loss_rpn_cls: 0.2016  loss_rpn_loc: 0.4405  time: 0.1121  data_time: 0.0016  lr: 0.0041958  max_mem: 1824M
[32m[11/14 10:59:35 d2.utils.events]: [0m eta: 0:17:35  iter: 439  total_loss: 1.682  loss_cls: 0.2412  loss_box_reg: 0.4986  loss_mask: 0.3009  loss_rpn_cls: 0.2427  loss_rpn_loc: 0.3949  time: 0.1123  data_time: 0.0025  lr: 0.0043956  max_mem: 1824M
[32m[11/14 10:59:37 d2.utils.events]: [0m eta: 0:17:43  iter: 459  total_loss: 1.604  loss_cls: 0.2451  loss_box_reg: 0.4558  loss_mask: 0.3016  loss_rpn_cls: 0.1877  loss_rpn_loc: 0.4074  time: 0.1126  data_time: 0.0024  lr: 0.0045954  max_mem: 1824M
[32m[11/14 10:59:39 d2.utils.events]: [0m eta: 0:17:41  iter: 479  total_loss: 1.649  loss_cls: 0.2174  loss_box_reg: 0.4751  loss_mask: 0.2882  loss_rpn_cls: 0.2101  loss_rpn_loc: 0.4671  time: 0.1126  data_time: 0.0017  lr: 0.0047952  max_mem: 1824M
[32m[11/14 10:59:42 d2.utils.events]: [0m eta: 0:17:39  iter: 499  total_loss: 1.69  loss_cls: 0.2503  loss_box_reg: 0.4988  loss_mask: 0.2872  loss_rpn_cls: 0.1952  loss_rpn_loc: 0.5101  time: 0.1127  data_time: 0.0019  lr: 0.004995  max_mem: 1824M
[32m[11/14 10:59:44 d2.utils.events]: [0m eta: 0:17:38  iter: 519  total_loss: 1.718  loss_cls: 0.277  loss_box_reg: 0.5122  loss_mask: 0.2918  loss_rpn_cls: 0.1819  loss_rpn_loc: 0.4246  time: 0.1130  data_time: 0.0016  lr: 0.0051948  max_mem: 1824M
[32m[11/14 10:59:46 d2.utils.events]: [0m eta: 0:17:35  iter: 539  total_loss: 1.671  loss_cls: 0.2745  loss_box_reg: 0.4942  loss_mask: 0.284  loss_rpn_cls: 0.2231  loss_rpn_loc: 0.419  time: 0.1129  data_time: 0.0022  lr: 0.0053946  max_mem: 1824M
[32m[11/14 10:59:49 d2.utils.events]: [0m eta: 0:17:35  iter: 559  total_loss: 1.616  loss_cls: 0.2807  loss_box_reg: 0.4911  loss_mask: 0.2575  loss_rpn_cls: 0.187  loss_rpn_loc: 0.4058  time: 0.1130  data_time: 0.0016  lr: 0.0055944  max_mem: 1824M
[32m[11/14 10:59:51 d2.utils.events]: [0m eta: 0:17:32  iter: 579  total_loss: 1.564  loss_cls: 0.2254  loss_box_reg: 0.3901  loss_mask: 0.2738  loss_rpn_cls: 0.2093  loss_rpn_loc: 0.4165  time: 0.1131  data_time: 0.0059  lr: 0.0057942  max_mem: 1824M
[32m[11/14 10:59:53 d2.utils.events]: [0m eta: 0:17:31  iter: 599  total_loss: 1.598  loss_cls: 0.2454  loss_box_reg: 0.4506  loss_mask: 0.2773  loss_rpn_cls: 0.1988  loss_rpn_loc: 0.4007  time: 0.1130  data_time: 0.0018  lr: 0.005994  max_mem: 1824M
[32m[11/14 10:59:56 d2.utils.events]: [0m eta: 0:17:29  iter: 619  total_loss: 1.449  loss_cls: 0.2005  loss_box_reg: 0.4352  loss_mask: 0.2668  loss_rpn_cls: 0.1755  loss_rpn_loc: 0.3922  time: 0.1132  data_time: 0.0023  lr: 0.0061938  max_mem: 1824M
[32m[11/14 10:59:58 d2.utils.events]: [0m eta: 0:17:27  iter: 639  total_loss: 1.489  loss_cls: 0.229  loss_box_reg: 0.4183  loss_mask: 0.2553  loss_rpn_cls: 0.2138  loss_rpn_loc: 0.4351  time: 0.1133  data_time: 0.0035  lr: 0.0063936  max_mem: 1824M
[32m[11/14 11:00:00 d2.utils.events]: [0m eta: 0:17:26  iter: 659  total_loss: 1.551  loss_cls: 0.2277  loss_box_reg: 0.4497  loss_mask: 0.2417  loss_rpn_cls: 0.1944  loss_rpn_loc: 0.3888  time: 0.1134  data_time: 0.0022  lr: 0.0065934  max_mem: 1824M
[32m[11/14 11:00:03 d2.utils.events]: [0m eta: 0:17:24  iter: 679  total_loss: 1.579  loss_cls: 0.2594  loss_box_reg: 0.4929  loss_mask: 0.2552  loss_rpn_cls: 0.1743  loss_rpn_loc: 0.3543  time: 0.1137  data_time: 0.0061  lr: 0.0067932  max_mem: 1824M
[32m[11/14 11:00:05 d2.utils.events]: [0m eta: 0:17:21  iter: 699  total_loss: 1.609  loss_cls: 0.2507  loss_box_reg: 0.4854  loss_mask: 0.2562  loss_rpn_cls: 0.2271  loss_rpn_loc: 0.3976  time: 0.1135  data_time: 0.0017  lr: 0.006993  max_mem: 1824M
[32m[11/14 11:00:07 d2.utils.events]: [0m eta: 0:17:19  iter: 719  total_loss: 1.456  loss_cls: 0.1995  loss_box_reg: 0.4282  loss_mask: 0.2514  loss_rpn_cls: 0.1486  loss_rpn_loc: 0.4065  time: 0.1136  data_time: 0.0022  lr: 0.0071928  max_mem: 1824M
[32m[11/14 11:00:10 d2.utils.events]: [0m eta: 0:17:17  iter: 739  total_loss: 1.466  loss_cls: 0.2472  loss_box_reg: 0.473  loss_mask: 0.2426  loss_rpn_cls: 0.1773  loss_rpn_loc: 0.3759  time: 0.1138  data_time: 0.0020  lr: 0.0073926  max_mem: 1824M
[32m[11/14 11:00:12 d2.utils.events]: [0m eta: 0:17:15  iter: 759  total_loss: 1.471  loss_cls: 0.2246  loss_box_reg: 0.4684  loss_mask: 0.2528  loss_rpn_cls: 0.1839  loss_rpn_loc: 0.4016  time: 0.1138  data_time: 0.0024  lr: 0.0075924  max_mem: 1824M
[32m[11/14 11:00:15 d2.utils.events]: [0m eta: 0:17:14  iter: 779  total_loss: 1.439  loss_cls: 0.2125  loss_box_reg: 0.4159  loss_mask: 0.2586  loss_rpn_cls: 0.1654  loss_rpn_loc: 0.379  time: 0.1140  data_time: 0.0020  lr: 0.0077922  max_mem: 1824M
[32m[11/14 11:00:17 d2.utils.events]: [0m eta: 0:17:12  iter: 799  total_loss: 1.537  loss_cls: 0.2482  loss_box_reg: 0.4816  loss_mask: 0.2457  loss_rpn_cls: 0.1465  loss_rpn_loc: 0.3945  time: 0.1141  data_time: 0.0022  lr: 0.007992  max_mem: 1824M
[32m[11/14 11:00:19 d2.utils.events]: [0m eta: 0:17:10  iter: 819  total_loss: 1.529  loss_cls: 0.235  loss_box_reg: 0.4771  loss_mask: 0.2545  loss_rpn_cls: 0.1657  loss_rpn_loc: 0.3907  time: 0.1141  data_time: 0.0025  lr: 0.0081918  max_mem: 1824M
[32m[11/14 11:00:22 d2.utils.events]: [0m eta: 0:17:08  iter: 839  total_loss: 1.568  loss_cls: 0.2266  loss_box_reg: 0.4658  loss_mask: 0.2552  loss_rpn_cls: 0.1679  loss_rpn_loc: 0.3918  time: 0.1142  data_time: 0.0021  lr: 0.0083916  max_mem: 1824M
[32m[11/14 11:00:24 d2.utils.events]: [0m eta: 0:17:06  iter: 859  total_loss: 1.492  loss_cls: 0.2138  loss_box_reg: 0.4108  loss_mask: 0.242  loss_rpn_cls: 0.1826  loss_rpn_loc: 0.4173  time: 0.1142  data_time: 0.0018  lr: 0.0085914  max_mem: 1824M
[32m[11/14 11:00:26 d2.utils.events]: [0m eta: 0:17:04  iter: 879  total_loss: 1.416  loss_cls: 0.2074  loss_box_reg: 0.405  loss_mask: 0.2412  loss_rpn_cls: 0.1568  loss_rpn_loc: 0.3954  time: 0.1142  data_time: 0.0022  lr: 0.0087912  max_mem: 1824M
[32m[11/14 11:00:29 d2.utils.events]: [0m eta: 0:17:02  iter: 899  total_loss: 1.533  loss_cls: 0.2566  loss_box_reg: 0.4796  loss_mask: 0.2405  loss_rpn_cls: 0.1647  loss_rpn_loc: 0.3763  time: 0.1141  data_time: 0.0018  lr: 0.008991  max_mem: 1824M
[32m[11/14 11:00:31 d2.utils.events]: [0m eta: 0:17:01  iter: 919  total_loss: 1.54  loss_cls: 0.2783  loss_box_reg: 0.4758  loss_mask: 0.2385  loss_rpn_cls: 0.1656  loss_rpn_loc: 0.3857  time: 0.1142  data_time: 0.0022  lr: 0.0091908  max_mem: 1824M
[32m[11/14 11:00:33 d2.utils.events]: [0m eta: 0:17:00  iter: 939  total_loss: 1.575  loss_cls: 0.2533  loss_box_reg: 0.4521  loss_mask: 0.2486  loss_rpn_cls: 0.1536  loss_rpn_loc: 0.428  time: 0.1143  data_time: 0.0022  lr: 0.0093906  max_mem: 1824M
[32m[11/14 11:00:36 d2.utils.events]: [0m eta: 0:16:59  iter: 959  total_loss: 1.47  loss_cls: 0.217  loss_box_reg: 0.4587  loss_mask: 0.2311  loss_rpn_cls: 0.1624  loss_rpn_loc: 0.3923  time: 0.1143  data_time: 0.0017  lr: 0.0095904  max_mem: 1824M
[32m[11/14 11:00:38 d2.utils.events]: [0m eta: 0:16:57  iter: 979  total_loss: 1.541  loss_cls: 0.2424  loss_box_reg: 0.4804  loss_mask: 0.2438  loss_rpn_cls: 0.1669  loss_rpn_loc: 0.3944  time: 0.1144  data_time: 0.0023  lr: 0.0097902  max_mem: 1824M
[32m[11/14 11:00:40 d2.utils.events]: [0m eta: 0:16:54  iter: 999  total_loss: 1.514  loss_cls: 0.2218  loss_box_reg: 0.436  loss_mask: 0.255  loss_rpn_cls: 0.1644  loss_rpn_loc: 0.4064  time: 0.1144  data_time: 0.0022  lr: 0.00999  max_mem: 1824M
[32m[11/14 11:00:43 d2.utils.events]: [0m eta: 0:16:54  iter: 1019  total_loss: 1.376  loss_cls: 0.1899  loss_box_reg: 0.4161  loss_mask: 0.2308  loss_rpn_cls: 0.1608  loss_rpn_loc: 0.4118  time: 0.1144  data_time: 0.0018  lr: 0.01  max_mem: 1824M
[32m[11/14 11:00:45 d2.utils.events]: [0m eta: 0:16:52  iter: 1039  total_loss: 1.454  loss_cls: 0.2308  loss_box_reg: 0.4572  loss_mask: 0.2357  loss_rpn_cls: 0.1498  loss_rpn_loc: 0.3876  time: 0.1146  data_time: 0.0022  lr: 0.01  max_mem: 1824M
[32m[11/14 11:00:47 d2.utils.events]: [0m eta: 0:16:50  iter: 1059  total_loss: 1.47  loss_cls: 0.21  loss_box_reg: 0.4288  loss_mask: 0.2356  loss_rpn_cls: 0.1948  loss_rpn_loc: 0.396  time: 0.1145  data_time: 0.0017  lr: 0.01  max_mem: 1824M
[32m[11/14 11:00:50 d2.utils.events]: [0m eta: 0:16:49  iter: 1079  total_loss: 1.426  loss_cls: 0.21  loss_box_reg: 0.4432  loss_mask: 0.2355  loss_rpn_cls: 0.1599  loss_rpn_loc: 0.3829  time: 0.1144  data_time: 0.0016  lr: 0.01  max_mem: 1824M
[32m[11/14 11:00:52 d2.utils.events]: [0m eta: 0:16:47  iter: 1099  total_loss: 1.372  loss_cls: 0.2188  loss_box_reg: 0.4533  loss_mask: 0.2241  loss_rpn_cls: 0.1364  loss_rpn_loc: 0.3529  time: 0.1145  data_time: 0.0020  lr: 0.01  max_mem: 1824M
[32m[11/14 11:00:54 d2.utils.events]: [0m eta: 0:16:45  iter: 1119  total_loss: 1.422  loss_cls: 0.218  loss_box_reg: 0.4286  loss_mask: 0.2244  loss_rpn_cls: 0.1665  loss_rpn_loc: 0.3746  time: 0.1145  data_time: 0.0021  lr: 0.01  max_mem: 1824M
[32m[11/14 11:00:57 d2.utils.events]: [0m eta: 0:16:43  iter: 1139  total_loss: 1.457  loss_cls: 0.231  loss_box_reg: 0.4512  loss_mask: 0.2089  loss_rpn_cls: 0.163  loss_rpn_loc: 0.3883  time: 0.1146  data_time: 0.0018  lr: 0.01  max_mem: 1824M
[32m[11/14 11:00:59 d2.utils.events]: [0m eta: 0:16:41  iter: 1159  total_loss: 1.496  loss_cls: 0.2469  loss_box_reg: 0.459  loss_mask: 0.2269  loss_rpn_cls: 0.1352  loss_rpn_loc: 0.3627  time: 0.1146  data_time: 0.0017  lr: 0.01  max_mem: 1824M
[32m[11/14 11:01:02 d2.utils.events]: [0m eta: 0:16:41  iter: 1179  total_loss: 1.427  loss_cls: 0.2367  loss_box_reg: 0.4612  loss_mask: 0.2214  loss_rpn_cls: 0.1376  loss_rpn_loc: 0.3569  time: 0.1147  data_time: 0.0030  lr: 0.01  max_mem: 1824M
[32m[11/14 11:01:04 d2.utils.events]: [0m eta: 0:16:38  iter: 1199  total_loss: 1.42  loss_cls: 0.2073  loss_box_reg: 0.445  loss_mask: 0.2297  loss_rpn_cls: 0.1225  loss_rpn_loc: 0.3841  time: 0.1147  data_time: 0.0018  lr: 0.01  max_mem: 1824M
[32m[11/14 11:01:06 d2.utils.events]: [0m eta: 0:16:36  iter: 1219  total_loss: 1.425  loss_cls: 0.2074  loss_box_reg: 0.4284  loss_mask: 0.2168  loss_rpn_cls: 0.1342  loss_rpn_loc: 0.3699  time: 0.1146  data_time: 0.0018  lr: 0.01  max_mem: 1824M
[32m[11/14 11:01:09 d2.utils.events]: [0m eta: 0:16:34  iter: 1239  total_loss: 1.378  loss_cls: 0.2206  loss_box_reg: 0.4398  loss_mask: 0.2176  loss_rpn_cls: 0.1352  loss_rpn_loc: 0.3535  time: 0.1146  data_time: 0.0022  lr: 0.01  max_mem: 1824M
[32m[11/14 11:01:11 d2.utils.events]: [0m eta: 0:16:33  iter: 1259  total_loss: 1.387  loss_cls: 0.2232  loss_box_reg: 0.4648  loss_mask: 0.2114  loss_rpn_cls: 0.1588  loss_rpn_loc: 0.3439  time: 0.1147  data_time: 0.0021  lr: 0.01  max_mem: 1824M
[32m[11/14 11:01:14 d2.utils.events]: [0m eta: 0:16:30  iter: 1279  total_loss: 1.411  loss_cls: 0.2218  loss_box_reg: 0.4457  loss_mask: 0.2238  loss_rpn_cls: 0.1862  loss_rpn_loc: 0.3583  time: 0.1148  data_time: 0.0016  lr: 0.01  max_mem: 1824M
[32m[11/14 11:01:16 d2.utils.events]: [0m eta: 0:16:29  iter: 1299  total_loss: 1.425  loss_cls: 0.2449  loss_box_reg: 0.468  loss_mask: 0.2297  loss_rpn_cls: 0.1424  loss_rpn_loc: 0.3436  time: 0.1148  data_time: 0.0017  lr: 0.01  max_mem: 1824M
[32m[11/14 11:01:18 d2.utils.events]: [0m eta: 0:16:29  iter: 1319  total_loss: 1.388  loss_cls: 0.2366  loss_box_reg: 0.4758  loss_mask: 0.2302  loss_rpn_cls: 0.1199  loss_rpn_loc: 0.3189  time: 0.1148  data_time: 0.0016  lr: 0.01  max_mem: 1824M
[32m[11/14 11:01:21 d2.utils.events]: [0m eta: 0:16:27  iter: 1339  total_loss: 1.391  loss_cls: 0.2254  loss_box_reg: 0.4507  loss_mask: 0.2119  loss_rpn_cls: 0.1219  loss_rpn_loc: 0.3578  time: 0.1149  data_time: 0.0020  lr: 0.01  max_mem: 1824M
[32m[11/14 11:01:23 d2.utils.events]: [0m eta: 0:16:25  iter: 1359  total_loss: 1.339  loss_cls: 0.2114  loss_box_reg: 0.4469  loss_mask: 0.2075  loss_rpn_cls: 0.1366  loss_rpn_loc: 0.3465  time: 0.1149  data_time: 0.0024  lr: 0.01  max_mem: 1824M
[32m[11/14 11:01:25 d2.utils.events]: [0m eta: 0:16:23  iter: 1379  total_loss: 1.325  loss_cls: 0.1992  loss_box_reg: 0.4388  loss_mask: 0.2185  loss_rpn_cls: 0.1489  loss_rpn_loc: 0.3346  time: 0.1149  data_time: 0.0021  lr: 0.01  max_mem: 1824M
[32m[11/14 11:01:28 d2.utils.events]: [0m eta: 0:16:21  iter: 1399  total_loss: 1.353  loss_cls: 0.1983  loss_box_reg: 0.4291  loss_mask: 0.2042  loss_rpn_cls: 0.1541  loss_rpn_loc: 0.3543  time: 0.1149  data_time: 0.0020  lr: 0.01  max_mem: 1824M
[32m[11/14 11:01:30 d2.utils.events]: [0m eta: 0:16:19  iter: 1419  total_loss: 1.391  loss_cls: 0.2234  loss_box_reg: 0.4446  loss_mask: 0.222  loss_rpn_cls: 0.1499  loss_rpn_loc: 0.3543  time: 0.1149  data_time: 0.0016  lr: 0.01  max_mem: 1824M
[32m[11/14 11:01:32 d2.utils.events]: [0m eta: 0:16:17  iter: 1439  total_loss: 1.336  loss_cls: 0.2065  loss_box_reg: 0.4506  loss_mask: 0.2256  loss_rpn_cls: 0.13  loss_rpn_loc: 0.3348  time: 0.1149  data_time: 0.0017  lr: 0.01  max_mem: 1824M
[32m[11/14 11:01:35 d2.utils.events]: [0m eta: 0:16:15  iter: 1459  total_loss: 1.336  loss_cls: 0.2061  loss_box_reg: 0.4088  loss_mask: 0.2144  loss_rpn_cls: 0.132  loss_rpn_loc: 0.3716  time: 0.1149  data_time: 0.0022  lr: 0.01  max_mem: 1824M
[32m[11/14 11:01:37 d2.utils.events]: [0m eta: 0:16:13  iter: 1479  total_loss: 1.31  loss_cls: 0.1862  loss_box_reg: 0.3984  loss_mask: 0.2184  loss_rpn_cls: 0.1224  loss_rpn_loc: 0.3866  time: 0.1150  data_time: 0.0020  lr: 0.01  max_mem: 1824M
[32m[11/14 11:01:40 d2.utils.events]: [0m eta: 0:16:11  iter: 1499  total_loss: 1.34  loss_cls: 0.1929  loss_box_reg: 0.4289  loss_mask: 0.2245  loss_rpn_cls: 0.1389  loss_rpn_loc: 0.3282  time: 0.1151  data_time: 0.0025  lr: 0.01  max_mem: 1824M
[32m[11/14 11:01:42 d2.utils.events]: [0m eta: 0:16:09  iter: 1519  total_loss: 1.287  loss_cls: 0.1867  loss_box_reg: 0.4363  loss_mask: 0.2115  loss_rpn_cls: 0.1155  loss_rpn_loc: 0.3227  time: 0.1151  data_time: 0.0018  lr: 0.01  max_mem: 1824M
[32m[11/14 11:01:44 d2.utils.events]: [0m eta: 0:16:07  iter: 1539  total_loss: 1.361  loss_cls: 0.2084  loss_box_reg: 0.425  loss_mask: 0.2236  loss_rpn_cls: 0.1161  loss_rpn_loc: 0.3433  time: 0.1151  data_time: 0.0020  lr: 0.01  max_mem: 1824M
[32m[11/14 11:01:46 d2.utils.events]: [0m eta: 0:16:03  iter: 1559  total_loss: 1.336  loss_cls: 0.1993  loss_box_reg: 0.4093  loss_mask: 0.233  loss_rpn_cls: 0.1365  loss_rpn_loc: 0.3491  time: 0.1151  data_time: 0.0022  lr: 0.01  max_mem: 1824M
[32m[11/14 11:01:49 d2.utils.events]: [0m eta: 0:16:02  iter: 1579  total_loss: 1.261  loss_cls: 0.1901  loss_box_reg: 0.4155  loss_mask: 0.2111  loss_rpn_cls: 0.1047  loss_rpn_loc: 0.3317  time: 0.1151  data_time: 0.0017  lr: 0.01  max_mem: 1824M
[32m[11/14 11:01:51 d2.utils.events]: [0m eta: 0:16:00  iter: 1599  total_loss: 1.237  loss_cls: 0.2098  loss_box_reg: 0.416  loss_mask: 0.211  loss_rpn_cls: 0.09954  loss_rpn_loc: 0.3341  time: 0.1151  data_time: 0.0020  lr: 0.01  max_mem: 1824M
[32m[11/14 11:01:54 d2.utils.events]: [0m eta: 0:15:58  iter: 1619  total_loss: 1.231  loss_cls: 0.1641  loss_box_reg: 0.365  loss_mask: 0.1998  loss_rpn_cls: 0.1808  loss_rpn_loc: 0.3466  time: 0.1152  data_time: 0.0042  lr: 0.01  max_mem: 1824M
[32m[11/14 11:01:56 d2.utils.events]: [0m eta: 0:15:56  iter: 1639  total_loss: 1.255  loss_cls: 0.186  loss_box_reg: 0.4059  loss_mask: 0.2025  loss_rpn_cls: 0.173  loss_rpn_loc: 0.3417  time: 0.1152  data_time: 0.0017  lr: 0.01  max_mem: 1824M
[32m[11/14 11:01:58 d2.utils.events]: [0m eta: 0:15:53  iter: 1659  total_loss: 1.244  loss_cls: 0.2014  loss_box_reg: 0.4288  loss_mask: 0.1945  loss_rpn_cls: 0.1064  loss_rpn_loc: 0.3136  time: 0.1152  data_time: 0.0021  lr: 0.01  max_mem: 1824M
[32m[11/14 11:02:01 d2.utils.events]: [0m eta: 0:15:50  iter: 1679  total_loss: 1.224  loss_cls: 0.1865  loss_box_reg: 0.3944  loss_mask: 0.203  loss_rpn_cls: 0.1119  loss_rpn_loc: 0.3159  time: 0.1151  data_time: 0.0017  lr: 0.01  max_mem: 1824M
[32m[11/14 11:02:03 d2.utils.events]: [0m eta: 0:15:49  iter: 1699  total_loss: 1.222  loss_cls: 0.1662  loss_box_reg: 0.3702  loss_mask: 0.2045  loss_rpn_cls: 0.1315  loss_rpn_loc: 0.3364  time: 0.1152  data_time: 0.0017  lr: 0.01  max_mem: 1824M
[32m[11/14 11:02:05 d2.utils.events]: [0m eta: 0:15:48  iter: 1719  total_loss: 1.218  loss_cls: 0.1795  loss_box_reg: 0.4166  loss_mask: 0.2081  loss_rpn_cls: 0.1352  loss_rpn_loc: 0.3168  time: 0.1152  data_time: 0.0017  lr: 0.01  max_mem: 1824M
[32m[11/14 11:02:08 d2.utils.events]: [0m eta: 0:15:46  iter: 1739  total_loss: 1.284  loss_cls: 0.2068  loss_box_reg: 0.4277  loss_mask: 0.2117  loss_rpn_cls: 0.135  loss_rpn_loc: 0.3206  time: 0.1152  data_time: 0.0022  lr: 0.01  max_mem: 1824M
[32m[11/14 11:02:10 d2.utils.events]: [0m eta: 0:15:43  iter: 1759  total_loss: 1.263  loss_cls: 0.1977  loss_box_reg: 0.4312  loss_mask: 0.2094  loss_rpn_cls: 0.1228  loss_rpn_loc: 0.3109  time: 0.1152  data_time: 0.0026  lr: 0.01  max_mem: 1824M
[32m[11/14 11:02:12 d2.utils.events]: [0m eta: 0:15:41  iter: 1779  total_loss: 1.304  loss_cls: 0.2218  loss_box_reg: 0.4386  loss_mask: 0.1987  loss_rpn_cls: 0.1158  loss_rpn_loc: 0.3151  time: 0.1152  data_time: 0.0021  lr: 0.01  max_mem: 1824M
[32m[11/14 11:02:15 d2.utils.events]: [0m eta: 0:15:38  iter: 1799  total_loss: 1.212  loss_cls: 0.1886  loss_box_reg: 0.3906  loss_mask: 0.1948  loss_rpn_cls: 0.09662  loss_rpn_loc: 0.3194  time: 0.1152  data_time: 0.0016  lr: 0.01  max_mem: 1824M
[32m[11/14 11:02:17 d2.utils.events]: [0m eta: 0:15:36  iter: 1819  total_loss: 1.212  loss_cls: 0.1922  loss_box_reg: 0.401  loss_mask: 0.2059  loss_rpn_cls: 0.1081  loss_rpn_loc: 0.3142  time: 0.1153  data_time: 0.0025  lr: 0.01  max_mem: 1824M
[32m[11/14 11:02:19 d2.utils.events]: [0m eta: 0:15:34  iter: 1839  total_loss: 1.267  loss_cls: 0.2055  loss_box_reg: 0.4226  loss_mask: 0.1966  loss_rpn_cls: 0.1244  loss_rpn_loc: 0.3068  time: 0.1153  data_time: 0.0021  lr: 0.01  max_mem: 1824M
[32m[11/14 11:02:22 d2.utils.events]: [0m eta: 0:15:31  iter: 1859  total_loss: 1.278  loss_cls: 0.2019  loss_box_reg: 0.376  loss_mask: 0.1988  loss_rpn_cls: 0.1381  loss_rpn_loc: 0.3377  time: 0.1152  data_time: 0.0016  lr: 0.01  max_mem: 1824M
[32m[11/14 11:02:24 d2.utils.events]: [0m eta: 0:15:29  iter: 1879  total_loss: 1.255  loss_cls: 0.194  loss_box_reg: 0.3811  loss_mask: 0.1957  loss_rpn_cls: 0.1249  loss_rpn_loc: 0.3113  time: 0.1153  data_time: 0.0025  lr: 0.01  max_mem: 1824M
[32m[11/14 11:02:27 d2.utils.events]: [0m eta: 0:15:27  iter: 1899  total_loss: 1.267  loss_cls: 0.2137  loss_box_reg: 0.4113  loss_mask: 0.1962  loss_rpn_cls: 0.1184  loss_rpn_loc: 0.3389  time: 0.1154  data_time: 0.0019  lr: 0.01  max_mem: 1824M
[32m[11/14 11:02:29 d2.utils.events]: [0m eta: 0:15:24  iter: 1919  total_loss: 1.203  loss_cls: 0.1723  loss_box_reg: 0.3803  loss_mask: 0.2035  loss_rpn_cls: 0.114  loss_rpn_loc: 0.3303  time: 0.1154  data_time: 0.0019  lr: 0.01  max_mem: 1824M
[32m[11/14 11:02:32 d2.utils.events]: [0m eta: 0:15:22  iter: 1939  total_loss: 1.279  loss_cls: 0.2106  loss_box_reg: 0.4089  loss_mask: 0.2065  loss_rpn_cls: 0.1071  loss_rpn_loc: 0.3027  time: 0.1155  data_time: 0.0031  lr: 0.01  max_mem: 1824M
[32m[11/14 11:02:34 d2.utils.events]: [0m eta: 0:15:18  iter: 1959  total_loss: 1.158  loss_cls: 0.1781  loss_box_reg: 0.4002  loss_mask: 0.1918  loss_rpn_cls: 0.09835  loss_rpn_loc: 0.3043  time: 0.1156  data_time: 0.0026  lr: 0.01  max_mem: 1824M
[32m[11/14 11:02:36 d2.utils.events]: [0m eta: 0:15:16  iter: 1979  total_loss: 1.232  loss_cls: 0.1991  loss_box_reg: 0.4044  loss_mask: 0.1979  loss_rpn_cls: 0.1247  loss_rpn_loc: 0.336  time: 0.1156  data_time: 0.0017  lr: 0.01  max_mem: 1824M
[32m[11/14 11:02:39 d2.utils.events]: [0m eta: 0:15:14  iter: 1999  total_loss: 1.21  loss_cls: 0.1711  loss_box_reg: 0.4062  loss_mask: 0.2063  loss_rpn_cls: 0.0965  loss_rpn_loc: 0.3145  time: 0.1157  data_time: 0.0023  lr: 0.01  max_mem: 1824M
[32m[11/14 11:02:41 d2.utils.events]: [0m eta: 0:15:12  iter: 2019  total_loss: 1.19  loss_cls: 0.195  loss_box_reg: 0.3992  loss_mask: 0.189  loss_rpn_cls: 0.09622  loss_rpn_loc: 0.3135  time: 0.1158  data_time: 0.0022  lr: 0.01  max_mem: 1824M
[32m[11/14 11:02:44 d2.utils.events]: [0m eta: 0:15:09  iter: 2039  total_loss: 1.139  loss_cls: 0.1694  loss_box_reg: 0.3841  loss_mask: 0.1801  loss_rpn_cls: 0.1196  loss_rpn_loc: 0.312  time: 0.1159  data_time: 0.0024  lr: 0.01  max_mem: 1824M
[32m[11/14 11:02:47 d2.utils.events]: [0m eta: 0:15:09  iter: 2059  total_loss: 1.233  loss_cls: 0.1817  loss_box_reg: 0.3816  loss_mask: 0.1793  loss_rpn_cls: 0.09815  loss_rpn_loc: 0.3163  time: 0.1160  data_time: 0.0024  lr: 0.01  max_mem: 1824M
[32m[11/14 11:02:49 d2.utils.events]: [0m eta: 0:15:07  iter: 2079  total_loss: 1.18  loss_cls: 0.1844  loss_box_reg: 0.3936  loss_mask: 0.1833  loss_rpn_cls: 0.1064  loss_rpn_loc: 0.2938  time: 0.1162  data_time: 0.0039  lr: 0.01  max_mem: 1824M
[32m[11/14 11:02:52 d2.utils.events]: [0m eta: 0:15:04  iter: 2099  total_loss: 1.154  loss_cls: 0.1784  loss_box_reg: 0.3816  loss_mask: 0.1814  loss_rpn_cls: 0.08468  loss_rpn_loc: 0.301  time: 0.1161  data_time: 0.0017  lr: 0.01  max_mem: 1824M
[32m[11/14 11:02:54 d2.utils.events]: [0m eta: 0:15:02  iter: 2119  total_loss: 1.14  loss_cls: 0.1732  loss_box_reg: 0.3847  loss_mask: 0.1818  loss_rpn_cls: 0.08569  loss_rpn_loc: 0.3047  time: 0.1163  data_time: 0.0036  lr: 0.01  max_mem: 1824M
[32m[11/14 11:02:57 d2.utils.events]: [0m eta: 0:14:59  iter: 2139  total_loss: 1.145  loss_cls: 0.1624  loss_box_reg: 0.3872  loss_mask: 0.1862  loss_rpn_cls: 0.09906  loss_rpn_loc: 0.3076  time: 0.1164  data_time: 0.0032  lr: 0.01  max_mem: 1824M
[32m[11/14 11:02:59 d2.utils.events]: [0m eta: 0:14:57  iter: 2159  total_loss: 1.144  loss_cls: 0.1603  loss_box_reg: 0.3665  loss_mask: 0.1976  loss_rpn_cls: 0.1184  loss_rpn_loc: 0.2903  time: 0.1164  data_time: 0.0016  lr: 0.01  max_mem: 1824M
[32m[11/14 11:03:02 d2.utils.events]: [0m eta: 0:14:55  iter: 2179  total_loss: 1.175  loss_cls: 0.1999  loss_box_reg: 0.422  loss_mask: 0.1896  loss_rpn_cls: 0.07515  loss_rpn_loc: 0.3153  time: 0.1165  data_time: 0.0028  lr: 0.01  max_mem: 1824M
[32m[11/14 11:03:04 d2.utils.events]: [0m eta: 0:14:53  iter: 2199  total_loss: 1.166  loss_cls: 0.2024  loss_box_reg: 0.4011  loss_mask: 0.1911  loss_rpn_cls: 0.09963  loss_rpn_loc: 0.296  time: 0.1165  data_time: 0.0019  lr: 0.01  max_mem: 1824M
[32m[11/14 11:03:07 d2.utils.events]: [0m eta: 0:14:52  iter: 2219  total_loss: 1.161  loss_cls: 0.1958  loss_box_reg: 0.4137  loss_mask: 0.1926  loss_rpn_cls: 0.08675  loss_rpn_loc: 0.2719  time: 0.1166  data_time: 0.0024  lr: 0.01  max_mem: 1824M
[32m[11/14 11:03:09 d2.utils.events]: [0m eta: 0:14:49  iter: 2239  total_loss: 1.194  loss_cls: 0.1855  loss_box_reg: 0.4126  loss_mask: 0.1914  loss_rpn_cls: 0.09893  loss_rpn_loc: 0.278  time: 0.1167  data_time: 0.0027  lr: 0.01  max_mem: 1824M
[32m[11/14 11:03:12 d2.utils.events]: [0m eta: 0:14:46  iter: 2259  total_loss: 1.165  loss_cls: 0.1777  loss_box_reg: 0.3693  loss_mask: 0.185  loss_rpn_cls: 0.1003  loss_rpn_loc: 0.2966  time: 0.1168  data_time: 0.0024  lr: 0.01  max_mem: 1824M
[32m[11/14 11:03:14 d2.utils.events]: [0m eta: 0:14:44  iter: 2279  total_loss: 1.139  loss_cls: 0.1661  loss_box_reg: 0.3655  loss_mask: 0.1861  loss_rpn_cls: 0.1197  loss_rpn_loc: 0.307  time: 0.1168  data_time: 0.0024  lr: 0.01  max_mem: 1824M
[32m[11/14 11:03:17 d2.utils.events]: [0m eta: 0:14:42  iter: 2299  total_loss: 1.104  loss_cls: 0.1666  loss_box_reg: 0.3569  loss_mask: 0.1781  loss_rpn_cls: 0.08603  loss_rpn_loc: 0.2793  time: 0.1169  data_time: 0.0022  lr: 0.01  max_mem: 1824M
[32m[11/14 11:03:20 d2.utils.events]: [0m eta: 0:14:39  iter: 2319  total_loss: 1.154  loss_cls: 0.162  loss_box_reg: 0.3721  loss_mask: 0.1914  loss_rpn_cls: 0.1113  loss_rpn_loc: 0.2775  time: 0.1170  data_time: 0.0030  lr: 0.01  max_mem: 1824M
[32m[11/14 11:03:22 d2.utils.events]: [0m eta: 0:14:38  iter: 2339  total_loss: 1.112  loss_cls: 0.1696  loss_box_reg: 0.3817  loss_mask: 0.1858  loss_rpn_cls: 0.0791  loss_rpn_loc: 0.2718  time: 0.1170  data_time: 0.0020  lr: 0.01  max_mem: 1824M
[32m[11/14 11:03:25 d2.utils.events]: [0m eta: 0:14:36  iter: 2359  total_loss: 1.095  loss_cls: 0.1547  loss_box_reg: 0.3842  loss_mask: 0.1868  loss_rpn_cls: 0.07758  loss_rpn_loc: 0.2846  time: 0.1171  data_time: 0.0026  lr: 0.01  max_mem: 1824M
[32m[11/14 11:03:27 d2.utils.events]: [0m eta: 0:14:34  iter: 2379  total_loss: 1.131  loss_cls: 0.1585  loss_box_reg: 0.3919  loss_mask: 0.1915  loss_rpn_cls: 0.09622  loss_rpn_loc: 0.2857  time: 0.1171  data_time: 0.0016  lr: 0.01  max_mem: 1824M
[32m[11/14 11:03:30 d2.utils.events]: [0m eta: 0:14:31  iter: 2399  total_loss: 1.092  loss_cls: 0.1715  loss_box_reg: 0.3869  loss_mask: 0.1851  loss_rpn_cls: 0.08831  loss_rpn_loc: 0.2871  time: 0.1172  data_time: 0.0028  lr: 0.01  max_mem: 1824M
[32m[11/14 11:03:32 d2.utils.events]: [0m eta: 0:14:28  iter: 2419  total_loss: 1.088  loss_cls: 0.1748  loss_box_reg: 0.3967  loss_mask: 0.1928  loss_rpn_cls: 0.1119  loss_rpn_loc: 0.2643  time: 0.1172  data_time: 0.0022  lr: 0.01  max_mem: 1824M
[32m[11/14 11:03:35 d2.utils.events]: [0m eta: 0:14:26  iter: 2439  total_loss: 1.14  loss_cls: 0.1708  loss_box_reg: 0.3957  loss_mask: 0.1901  loss_rpn_cls: 0.1162  loss_rpn_loc: 0.2726  time: 0.1173  data_time: 0.0023  lr: 0.01  max_mem: 1824M
[32m[11/14 11:03:37 d2.utils.events]: [0m eta: 0:14:23  iter: 2459  total_loss: 1.073  loss_cls: 0.1653  loss_box_reg: 0.3653  loss_mask: 0.1778  loss_rpn_cls: 0.1094  loss_rpn_loc: 0.282  time: 0.1174  data_time: 0.0033  lr: 0.01  max_mem: 1824M
[32m[11/14 11:03:40 d2.utils.events]: [0m eta: 0:14:21  iter: 2479  total_loss: 1.085  loss_cls: 0.1493  loss_box_reg: 0.3636  loss_mask: 0.1733  loss_rpn_cls: 0.09068  loss_rpn_loc: 0.3014  time: 0.1174  data_time: 0.0027  lr: 0.01  max_mem: 1824M
[32m[11/14 11:03:42 d2.utils.events]: [0m eta: 0:14:19  iter: 2499  total_loss: 1.047  loss_cls: 0.1541  loss_box_reg: 0.3692  loss_mask: 0.1849  loss_rpn_cls: 0.07648  loss_rpn_loc: 0.2815  time: 0.1175  data_time: 0.0015  lr: 0.01  max_mem: 1824M
[32m[11/14 11:03:45 d2.utils.events]: [0m eta: 0:14:17  iter: 2519  total_loss: 1.103  loss_cls: 0.1599  loss_box_reg: 0.379  loss_mask: 0.1809  loss_rpn_cls: 0.09472  loss_rpn_loc: 0.301  time: 0.1175  data_time: 0.0024  lr: 0.01  max_mem: 1824M
[32m[11/14 11:03:47 d2.utils.events]: [0m eta: 0:14:16  iter: 2539  total_loss: 1.174  loss_cls: 0.1882  loss_box_reg: 0.3933  loss_mask: 0.1752  loss_rpn_cls: 0.09462  loss_rpn_loc: 0.2887  time: 0.1175  data_time: 0.0017  lr: 0.01  max_mem: 1824M
[32m[11/14 11:03:50 d2.utils.events]: [0m eta: 0:14:15  iter: 2559  total_loss: 1.061  loss_cls: 0.1519  loss_box_reg: 0.3283  loss_mask: 0.175  loss_rpn_cls: 0.09201  loss_rpn_loc: 0.281  time: 0.1176  data_time: 0.0027  lr: 0.01  max_mem: 1824M
[32m[11/14 11:03:52 d2.utils.events]: [0m eta: 0:14:13  iter: 2579  total_loss: 1.09  loss_cls: 0.1718  loss_box_reg: 0.3828  loss_mask: 0.1827  loss_rpn_cls: 0.09556  loss_rpn_loc: 0.2739  time: 0.1177  data_time: 0.0025  lr: 0.01  max_mem: 1824M
[32m[11/14 11:03:55 d2.utils.events]: [0m eta: 0:14:10  iter: 2599  total_loss: 1.095  loss_cls: 0.1735  loss_box_reg: 0.3551  loss_mask: 0.1659  loss_rpn_cls: 0.09546  loss_rpn_loc: 0.2757  time: 0.1177  data_time: 0.0017  lr: 0.01  max_mem: 1824M
[32m[11/14 11:03:57 d2.utils.events]: [0m eta: 0:14:08  iter: 2619  total_loss: 1.111  loss_cls: 0.1806  loss_box_reg: 0.3633  loss_mask: 0.1828  loss_rpn_cls: 0.09523  loss_rpn_loc: 0.2751  time: 0.1178  data_time: 0.0027  lr: 0.01  max_mem: 1824M
[32m[11/14 11:04:00 d2.utils.events]: [0m eta: 0:14:06  iter: 2639  total_loss: 1.121  loss_cls: 0.1645  loss_box_reg: 0.3578  loss_mask: 0.1814  loss_rpn_cls: 0.09769  loss_rpn_loc: 0.2965  time: 0.1178  data_time: 0.0018  lr: 0.01  max_mem: 1824M
[32m[11/14 11:04:02 d2.utils.events]: [0m eta: 0:14:03  iter: 2659  total_loss: 1.164  loss_cls: 0.1764  loss_box_reg: 0.3624  loss_mask: 0.1835  loss_rpn_cls: 0.1234  loss_rpn_loc: 0.3064  time: 0.1178  data_time: 0.0023  lr: 0.01  max_mem: 1824M
[32m[11/14 11:04:05 d2.utils.events]: [0m eta: 0:14:01  iter: 2679  total_loss: 1.077  loss_cls: 0.1466  loss_box_reg: 0.3702  loss_mask: 0.1753  loss_rpn_cls: 0.09989  loss_rpn_loc: 0.2944  time: 0.1178  data_time: 0.0017  lr: 0.01  max_mem: 1824M
[32m[11/14 11:04:07 d2.utils.events]: [0m eta: 0:13:59  iter: 2699  total_loss: 1.031  loss_cls: 0.1594  loss_box_reg: 0.3616  loss_mask: 0.1758  loss_rpn_cls: 0.06881  loss_rpn_loc: 0.2651  time: 0.1180  data_time: 0.0019  lr: 0.01  max_mem: 1824M
[32m[11/14 11:04:10 d2.utils.events]: [0m eta: 0:13:56  iter: 2719  total_loss: 1.037  loss_cls: 0.1641  loss_box_reg: 0.3601  loss_mask: 0.1811  loss_rpn_cls: 0.08129  loss_rpn_loc: 0.2512  time: 0.1180  data_time: 0.0022  lr: 0.01  max_mem: 1824M
[32m[11/14 11:04:12 d2.utils.events]: [0m eta: 0:13:54  iter: 2739  total_loss: 1.083  loss_cls: 0.1581  loss_box_reg: 0.3442  loss_mask: 0.1688  loss_rpn_cls: 0.1222  loss_rpn_loc: 0.2813  time: 0.1180  data_time: 0.0025  lr: 0.01  max_mem: 1824M
[32m[11/14 11:04:15 d2.utils.events]: [0m eta: 0:13:52  iter: 2759  total_loss: 1.005  loss_cls: 0.1495  loss_box_reg: 0.3571  loss_mask: 0.1609  loss_rpn_cls: 0.09508  loss_rpn_loc: 0.2501  time: 0.1181  data_time: 0.0023  lr: 0.01  max_mem: 1824M
[32m[11/14 11:04:18 d2.utils.events]: [0m eta: 0:13:49  iter: 2779  total_loss: 1.056  loss_cls: 0.158  loss_box_reg: 0.3388  loss_mask: 0.1814  loss_rpn_cls: 0.08855  loss_rpn_loc: 0.2577  time: 0.1181  data_time: 0.0027  lr: 0.01  max_mem: 1824M
[32m[11/14 11:04:20 d2.utils.events]: [0m eta: 0:13:47  iter: 2799  total_loss: 1.024  loss_cls: 0.1549  loss_box_reg: 0.3535  loss_mask: 0.1761  loss_rpn_cls: 0.07138  loss_rpn_loc: 0.2615  time: 0.1181  data_time: 0.0017  lr: 0.01  max_mem: 1824M
[32m[11/14 11:04:23 d2.utils.events]: [0m eta: 0:13:46  iter: 2819  total_loss: 1.082  loss_cls: 0.1612  loss_box_reg: 0.3632  loss_mask: 0.1897  loss_rpn_cls: 0.08592  loss_rpn_loc: 0.2708  time: 0.1182  data_time: 0.0020  lr: 0.01  max_mem: 1824M
[32m[11/14 11:04:25 d2.utils.events]: [0m eta: 0:13:43  iter: 2839  total_loss: 1.077  loss_cls: 0.1536  loss_box_reg: 0.3577  loss_mask: 0.1763  loss_rpn_cls: 0.09594  loss_rpn_loc: 0.2808  time: 0.1182  data_time: 0.0018  lr: 0.01  max_mem: 1824M
[32m[11/14 11:04:27 d2.utils.events]: [0m eta: 0:13:42  iter: 2859  total_loss: 1.145  loss_cls: 0.1665  loss_box_reg: 0.3658  loss_mask: 0.1858  loss_rpn_cls: 0.07657  loss_rpn_loc: 0.323  time: 0.1182  data_time: 0.0017  lr: 0.01  max_mem: 1824M
[32m[11/14 11:04:30 d2.utils.events]: [0m eta: 0:13:40  iter: 2879  total_loss: 1.099  loss_cls: 0.1505  loss_box_reg: 0.3697  loss_mask: 0.1881  loss_rpn_cls: 0.09271  loss_rpn_loc: 0.2746  time: 0.1184  data_time: 0.0020  lr: 0.01  max_mem: 1824M
[32m[11/14 11:04:33 d2.utils.events]: [0m eta: 0:13:37  iter: 2899  total_loss: 1.023  loss_cls: 0.1486  loss_box_reg: 0.3374  loss_mask: 0.1729  loss_rpn_cls: 0.08251  loss_rpn_loc: 0.2802  time: 0.1184  data_time: 0.0021  lr: 0.01  max_mem: 1824M
[32m[11/14 11:04:35 d2.utils.events]: [0m eta: 0:13:34  iter: 2919  total_loss: 1.055  loss_cls: 0.1526  loss_box_reg: 0.353  loss_mask: 0.1756  loss_rpn_cls: 0.08652  loss_rpn_loc: 0.2764  time: 0.1183  data_time: 0.0017  lr: 0.01  max_mem: 1824M
[32m[11/14 11:04:38 d2.utils.events]: [0m eta: 0:13:33  iter: 2939  total_loss: 1.102  loss_cls: 0.1645  loss_box_reg: 0.3907  loss_mask: 0.168  loss_rpn_cls: 0.07347  loss_rpn_loc: 0.2616  time: 0.1185  data_time: 0.0035  lr: 0.01  max_mem: 1824M
[32m[11/14 11:04:40 d2.utils.events]: [0m eta: 0:13:30  iter: 2959  total_loss: 0.9951  loss_cls: 0.1476  loss_box_reg: 0.3537  loss_mask: 0.1667  loss_rpn_cls: 0.07103  loss_rpn_loc: 0.254  time: 0.1185  data_time: 0.0018  lr: 0.01  max_mem: 1824M
[32m[11/14 11:04:43 d2.utils.events]: [0m eta: 0:13:28  iter: 2979  total_loss: 1.037  loss_cls: 0.1394  loss_box_reg: 0.3389  loss_mask: 0.1663  loss_rpn_cls: 0.09243  loss_rpn_loc: 0.2613  time: 0.1185  data_time: 0.0023  lr: 0.01  max_mem: 1824M
[32m[11/14 11:04:45 d2.utils.events]: [0m eta: 0:13:26  iter: 2999  total_loss: 0.9836  loss_cls: 0.1434  loss_box_reg: 0.3586  loss_mask: 0.1682  loss_rpn_cls: 0.07164  loss_rpn_loc: 0.2527  time: 0.1185  data_time: 0.0030  lr: 0.01  max_mem: 1824M
