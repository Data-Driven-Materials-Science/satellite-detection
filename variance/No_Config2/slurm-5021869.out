Registered Datasets: ['satellite_Train', 'satellite_Val']
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S06_02_SE1_500X71.png
	num_instances: 104
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S02_03_SE1_300X22.png
	num_instances: 83
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S03_02_SE1_1250X35.png
	num_instances: 128
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S08_03_SE1_1000X03.png
	num_instances: 88
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S06_01_SE1_500X67.png
	num_instances: 54
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S04_02_SE1_1000X50.png
	num_instances: 45
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S03_03_SE1_1250X41.png
	num_instances: 111
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S02_01_SE1_300X14.png
	num_instances: 98
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/HP743_2S_250x.png
	num_instances: 49
Weights not found, weights will be downloaded from source: https://dl.fbaipublicfiles.com/detectron2/COCO-InstanceSegmentation/mask_rcnn_R_50_FPN_3x/137849600/model_final_f10217.pkl
[32m[11/14 10:58:42 d2.engine.defaults]: [0mModel:
GeneralizedRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): StandardROIHeads(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): FastRCNNConvFCHead(
      (flatten): Flatten(start_dim=1, end_dim=-1)
      (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      (fc_relu1): ReLU()
      (fc2): Linear(in_features=1024, out_features=1024, bias=True)
      (fc_relu2): ReLU()
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=1024, out_features=2, bias=True)
      (bbox_pred): Linear(in_features=1024, out_features=4, bias=True)
    )
    (mask_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(14, 14), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(14, 14), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (mask_head): MaskRCNNConvUpsampleHead(
      (mask_fcn1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn2): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn3): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn4): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
      (deconv_relu): ReLU()
      (predictor): Conv2d(256, 1, kernel_size=(1, 1), stride=(1, 1))
    )
  )
)
[32m[11/14 10:58:42 d2.data.build]: [0mRemoved 0 images with no usable annotations. 20 images left.
[32m[11/14 10:58:42 d2.data.build]: [0mDistribution of instances among all 1 categories:
[36m|  category  | #instances   |
|:----------:|:-------------|
| satellite  | 1412         |
|            |              |[0m
[32m[11/14 10:58:42 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[32m[11/14 10:58:42 d2.data.build]: [0mUsing training sampler TrainingSampler
[32m[11/14 10:58:42 d2.data.common]: [0mSerializing 20 elements to byte tensors and concatenating them all ...
[32m[11/14 10:58:42 d2.data.common]: [0mSerialized dataset takes 0.46 MiB
[5m[31mWARNING[0m [32m[11/14 10:58:42 d2.solver.build]: [0mSOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[32m[11/14 10:58:42 d2.checkpoint.c2_model_loading]: [0mRenaming Caffe2 weights ......
[32m[11/14 10:58:42 d2.checkpoint.c2_model_loading]: [0mFollowing weights matched with submodule backbone.bottom_up:
| Names in Model    | Names in Checkpoint      | Shapes                                          |
|:------------------|:-------------------------|:------------------------------------------------|
| res2.0.conv1.*    | res2_0_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,1,1)             |
| res2.0.conv2.*    | res2_0_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.0.conv3.*    | res2_0_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.0.shortcut.* | res2_0_branch1_{bn_*,w}  | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.1.conv1.*    | res2_1_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,256,1,1)            |
| res2.1.conv2.*    | res2_1_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.1.conv3.*    | res2_1_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.2.conv1.*    | res2_2_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,256,1,1)            |
| res2.2.conv2.*    | res2_2_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.2.conv3.*    | res2_2_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res3.0.conv1.*    | res3_0_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,256,1,1)       |
| res3.0.conv2.*    | res3_0_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.0.conv3.*    | res3_0_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.0.shortcut.* | res3_0_branch1_{bn_*,w}  | (512,) (512,) (512,) (512,) (512,256,1,1)       |
| res3.1.conv1.*    | res3_1_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.1.conv2.*    | res3_1_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.1.conv3.*    | res3_1_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.2.conv1.*    | res3_2_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.2.conv2.*    | res3_2_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.2.conv3.*    | res3_2_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.3.conv1.*    | res3_3_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.3.conv2.*    | res3_3_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.3.conv3.*    | res3_3_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res4.0.conv1.*    | res4_0_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,512,1,1)       |
| res4.0.conv2.*    | res4_0_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.0.conv3.*    | res4_0_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.0.shortcut.* | res4_0_branch1_{bn_*,w}  | (1024,) (1024,) (1024,) (1024,) (1024,512,1,1)  |
| res4.1.conv1.*    | res4_1_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.1.conv2.*    | res4_1_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.1.conv3.*    | res4_1_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.2.conv1.*    | res4_2_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.2.conv2.*    | res4_2_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.2.conv3.*    | res4_2_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.3.conv1.*    | res4_3_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.3.conv2.*    | res4_3_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.3.conv3.*    | res4_3_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.4.conv1.*    | res4_4_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.4.conv2.*    | res4_4_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.4.conv3.*    | res4_4_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.5.conv1.*    | res4_5_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.5.conv2.*    | res4_5_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.5.conv3.*    | res4_5_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res5.0.conv1.*    | res5_0_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,1024,1,1)      |
| res5.0.conv2.*    | res5_0_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.0.conv3.*    | res5_0_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| res5.0.shortcut.* | res5_0_branch1_{bn_*,w}  | (2048,) (2048,) (2048,) (2048,) (2048,1024,1,1) |
| res5.1.conv1.*    | res5_1_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,2048,1,1)      |
| res5.1.conv2.*    | res5_1_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.1.conv3.*    | res5_1_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| res5.2.conv1.*    | res5_2_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,2048,1,1)      |
| res5.2.conv2.*    | res5_2_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.2.conv3.*    | res5_2_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| stem.conv1.norm.* | res_conv1_bn_*           | (64,) (64,) (64,) (64,)                         |
| stem.conv1.weight | conv1_w                  | (64, 3, 7, 7)                                   |
[32m[11/14 10:58:42 d2.engine.train_loop]: [0mStarting training from iteration 0
[32m[11/14 10:58:45 d2.utils.events]: [0m eta: 0:16:56  iter: 19  total_loss: 3.059  loss_cls: 0.4833  loss_box_reg: 0.05052  loss_mask: 0.6674  loss_rpn_cls: 0.6743  loss_rpn_loc: 1.211  time: 0.1052  data_time: 0.0268  lr: 0.00019981  max_mem: 1802M
[32m[11/14 10:58:47 d2.utils.events]: [0m eta: 0:17:07  iter: 39  total_loss: 2.308  loss_cls: 0.3178  loss_box_reg: 0.05009  loss_mask: 0.5921  loss_rpn_cls: 0.5906  loss_rpn_loc: 0.7782  time: 0.1042  data_time: 0.0017  lr: 0.00039961  max_mem: 1827M
[32m[11/14 10:58:49 d2.utils.events]: [0m eta: 0:17:06  iter: 59  total_loss: 2.072  loss_cls: 0.2488  loss_box_reg: 0.0868  loss_mask: 0.5735  loss_rpn_cls: 0.5914  loss_rpn_loc: 0.603  time: 0.1042  data_time: 0.0018  lr: 0.00059941  max_mem: 1827M
[32m[11/14 10:58:52 d2.utils.events]: [0m eta: 0:17:16  iter: 79  total_loss: 2.102  loss_cls: 0.2795  loss_box_reg: 0.2403  loss_mask: 0.5557  loss_rpn_cls: 0.4931  loss_rpn_loc: 0.5461  time: 0.1054  data_time: 0.0018  lr: 0.00079921  max_mem: 1827M
[32m[11/14 10:58:54 d2.utils.events]: [0m eta: 0:17:22  iter: 99  total_loss: 2.234  loss_cls: 0.3106  loss_box_reg: 0.3251  loss_mask: 0.5552  loss_rpn_cls: 0.4753  loss_rpn_loc: 0.5033  time: 0.1062  data_time: 0.0017  lr: 0.00099901  max_mem: 1827M
[32m[11/14 10:58:56 d2.utils.events]: [0m eta: 0:17:21  iter: 119  total_loss: 2.171  loss_cls: 0.2903  loss_box_reg: 0.3134  loss_mask: 0.5281  loss_rpn_cls: 0.3976  loss_rpn_loc: 0.5335  time: 0.1064  data_time: 0.0017  lr: 0.0011988  max_mem: 1827M
[32m[11/14 10:58:58 d2.utils.events]: [0m eta: 0:17:18  iter: 139  total_loss: 2.118  loss_cls: 0.3147  loss_box_reg: 0.3882  loss_mask: 0.5003  loss_rpn_cls: 0.3427  loss_rpn_loc: 0.5007  time: 0.1063  data_time: 0.0017  lr: 0.0013986  max_mem: 1827M
[32m[11/14 10:59:00 d2.utils.events]: [0m eta: 0:17:18  iter: 159  total_loss: 1.907  loss_cls: 0.2923  loss_box_reg: 0.3943  loss_mask: 0.4623  loss_rpn_cls: 0.3448  loss_rpn_loc: 0.5062  time: 0.1065  data_time: 0.0017  lr: 0.0015984  max_mem: 1827M
[32m[11/14 10:59:03 d2.utils.events]: [0m eta: 0:17:21  iter: 179  total_loss: 2.044  loss_cls: 0.3009  loss_box_reg: 0.4753  loss_mask: 0.4238  loss_rpn_cls: 0.3424  loss_rpn_loc: 0.4915  time: 0.1068  data_time: 0.0018  lr: 0.0017982  max_mem: 1827M
[32m[11/14 10:59:05 d2.utils.events]: [0m eta: 0:17:23  iter: 199  total_loss: 1.878  loss_cls: 0.2699  loss_box_reg: 0.4643  loss_mask: 0.4022  loss_rpn_cls: 0.275  loss_rpn_loc: 0.4565  time: 0.1071  data_time: 0.0017  lr: 0.001998  max_mem: 1827M
[32m[11/14 10:59:07 d2.utils.events]: [0m eta: 0:17:16  iter: 219  total_loss: 1.774  loss_cls: 0.2529  loss_box_reg: 0.4233  loss_mask: 0.3925  loss_rpn_cls: 0.2493  loss_rpn_loc: 0.4656  time: 0.1069  data_time: 0.0016  lr: 0.0021978  max_mem: 1827M
[32m[11/14 10:59:09 d2.utils.events]: [0m eta: 0:17:15  iter: 239  total_loss: 1.7  loss_cls: 0.2213  loss_box_reg: 0.3471  loss_mask: 0.3645  loss_rpn_cls: 0.2593  loss_rpn_loc: 0.4508  time: 0.1072  data_time: 0.0018  lr: 0.0023976  max_mem: 1827M
[32m[11/14 10:59:11 d2.utils.events]: [0m eta: 0:17:17  iter: 259  total_loss: 1.752  loss_cls: 0.2583  loss_box_reg: 0.4589  loss_mask: 0.3465  loss_rpn_cls: 0.2474  loss_rpn_loc: 0.4619  time: 0.1074  data_time: 0.0018  lr: 0.0025974  max_mem: 1827M
[32m[11/14 10:59:14 d2.utils.events]: [0m eta: 0:17:14  iter: 279  total_loss: 1.754  loss_cls: 0.2409  loss_box_reg: 0.4863  loss_mask: 0.3458  loss_rpn_cls: 0.2243  loss_rpn_loc: 0.4329  time: 0.1075  data_time: 0.0016  lr: 0.0027972  max_mem: 1827M
[32m[11/14 10:59:16 d2.utils.events]: [0m eta: 0:17:15  iter: 299  total_loss: 1.591  loss_cls: 0.1813  loss_box_reg: 0.3047  loss_mask: 0.339  loss_rpn_cls: 0.2049  loss_rpn_loc: 0.466  time: 0.1075  data_time: 0.0017  lr: 0.002997  max_mem: 1827M
[32m[11/14 10:59:18 d2.utils.events]: [0m eta: 0:17:15  iter: 319  total_loss: 1.685  loss_cls: 0.2385  loss_box_reg: 0.3914  loss_mask: 0.3342  loss_rpn_cls: 0.2179  loss_rpn_loc: 0.457  time: 0.1078  data_time: 0.0017  lr: 0.0031968  max_mem: 1827M
[32m[11/14 10:59:20 d2.utils.events]: [0m eta: 0:17:17  iter: 339  total_loss: 1.769  loss_cls: 0.2503  loss_box_reg: 0.4605  loss_mask: 0.3139  loss_rpn_cls: 0.2591  loss_rpn_loc: 0.4481  time: 0.1080  data_time: 0.0017  lr: 0.0033966  max_mem: 1827M
[32m[11/14 10:59:23 d2.utils.events]: [0m eta: 0:17:15  iter: 359  total_loss: 1.665  loss_cls: 0.2219  loss_box_reg: 0.451  loss_mask: 0.3114  loss_rpn_cls: 0.1842  loss_rpn_loc: 0.4295  time: 0.1081  data_time: 0.0017  lr: 0.0035964  max_mem: 1827M
[32m[11/14 10:59:25 d2.utils.events]: [0m eta: 0:17:13  iter: 379  total_loss: 1.594  loss_cls: 0.2133  loss_box_reg: 0.4539  loss_mask: 0.3076  loss_rpn_cls: 0.2195  loss_rpn_loc: 0.3924  time: 0.1082  data_time: 0.0017  lr: 0.0037962  max_mem: 1827M
[32m[11/14 10:59:27 d2.utils.events]: [0m eta: 0:17:17  iter: 399  total_loss: 1.671  loss_cls: 0.2592  loss_box_reg: 0.4673  loss_mask: 0.3244  loss_rpn_cls: 0.2414  loss_rpn_loc: 0.4281  time: 0.1083  data_time: 0.0018  lr: 0.003996  max_mem: 1827M
[32m[11/14 10:59:29 d2.utils.events]: [0m eta: 0:17:15  iter: 419  total_loss: 1.654  loss_cls: 0.2625  loss_box_reg: 0.4777  loss_mask: 0.3064  loss_rpn_cls: 0.2109  loss_rpn_loc: 0.4529  time: 0.1084  data_time: 0.0017  lr: 0.0041958  max_mem: 1827M
[32m[11/14 10:59:32 d2.utils.events]: [0m eta: 0:17:17  iter: 439  total_loss: 1.738  loss_cls: 0.2596  loss_box_reg: 0.4714  loss_mask: 0.2937  loss_rpn_cls: 0.1721  loss_rpn_loc: 0.4665  time: 0.1086  data_time: 0.0017  lr: 0.0043956  max_mem: 1827M
[32m[11/14 10:59:34 d2.utils.events]: [0m eta: 0:17:13  iter: 459  total_loss: 1.626  loss_cls: 0.2322  loss_box_reg: 0.4499  loss_mask: 0.2999  loss_rpn_cls: 0.2344  loss_rpn_loc: 0.4209  time: 0.1086  data_time: 0.0017  lr: 0.0045954  max_mem: 1827M
[32m[11/14 10:59:36 d2.utils.events]: [0m eta: 0:17:13  iter: 479  total_loss: 1.584  loss_cls: 0.214  loss_box_reg: 0.4412  loss_mask: 0.2852  loss_rpn_cls: 0.2338  loss_rpn_loc: 0.4307  time: 0.1087  data_time: 0.0017  lr: 0.0047952  max_mem: 1827M
[32m[11/14 10:59:38 d2.utils.events]: [0m eta: 0:17:11  iter: 499  total_loss: 1.607  loss_cls: 0.2667  loss_box_reg: 0.4679  loss_mask: 0.2835  loss_rpn_cls: 0.2132  loss_rpn_loc: 0.3768  time: 0.1089  data_time: 0.0016  lr: 0.004995  max_mem: 1827M
[32m[11/14 10:59:41 d2.utils.events]: [0m eta: 0:17:10  iter: 519  total_loss: 1.597  loss_cls: 0.2325  loss_box_reg: 0.4489  loss_mask: 0.2732  loss_rpn_cls: 0.1791  loss_rpn_loc: 0.3863  time: 0.1090  data_time: 0.0017  lr: 0.0051948  max_mem: 1827M
[32m[11/14 10:59:43 d2.utils.events]: [0m eta: 0:17:11  iter: 539  total_loss: 1.581  loss_cls: 0.2581  loss_box_reg: 0.4703  loss_mask: 0.2688  loss_rpn_cls: 0.1951  loss_rpn_loc: 0.4101  time: 0.1092  data_time: 0.0018  lr: 0.0053946  max_mem: 1827M
[32m[11/14 10:59:45 d2.utils.events]: [0m eta: 0:17:13  iter: 559  total_loss: 1.595  loss_cls: 0.2542  loss_box_reg: 0.4862  loss_mask: 0.2624  loss_rpn_cls: 0.1922  loss_rpn_loc: 0.4067  time: 0.1093  data_time: 0.0018  lr: 0.0055944  max_mem: 1827M
[32m[11/14 10:59:47 d2.utils.events]: [0m eta: 0:17:11  iter: 579  total_loss: 1.615  loss_cls: 0.2589  loss_box_reg: 0.4768  loss_mask: 0.2798  loss_rpn_cls: 0.2155  loss_rpn_loc: 0.3775  time: 0.1094  data_time: 0.0017  lr: 0.0057942  max_mem: 1827M
[32m[11/14 10:59:50 d2.utils.events]: [0m eta: 0:17:08  iter: 599  total_loss: 1.552  loss_cls: 0.2463  loss_box_reg: 0.4821  loss_mask: 0.2696  loss_rpn_cls: 0.1831  loss_rpn_loc: 0.4228  time: 0.1094  data_time: 0.0016  lr: 0.005994  max_mem: 1827M
[32m[11/14 10:59:52 d2.utils.events]: [0m eta: 0:17:03  iter: 619  total_loss: 1.612  loss_cls: 0.2296  loss_box_reg: 0.455  loss_mask: 0.267  loss_rpn_cls: 0.2214  loss_rpn_loc: 0.4544  time: 0.1094  data_time: 0.0018  lr: 0.0061938  max_mem: 1827M
[32m[11/14 10:59:54 d2.utils.events]: [0m eta: 0:17:03  iter: 639  total_loss: 1.591  loss_cls: 0.2397  loss_box_reg: 0.4554  loss_mask: 0.2565  loss_rpn_cls: 0.2181  loss_rpn_loc: 0.3981  time: 0.1095  data_time: 0.0017  lr: 0.0063936  max_mem: 1827M
[32m[11/14 10:59:56 d2.utils.events]: [0m eta: 0:17:01  iter: 659  total_loss: 1.724  loss_cls: 0.274  loss_box_reg: 0.4802  loss_mask: 0.2666  loss_rpn_cls: 0.2498  loss_rpn_loc: 0.4319  time: 0.1095  data_time: 0.0016  lr: 0.0065934  max_mem: 1827M
[32m[11/14 10:59:59 d2.utils.events]: [0m eta: 0:17:00  iter: 679  total_loss: 1.641  loss_cls: 0.2608  loss_box_reg: 0.5103  loss_mask: 0.2803  loss_rpn_cls: 0.2033  loss_rpn_loc: 0.4192  time: 0.1096  data_time: 0.0017  lr: 0.0067932  max_mem: 1827M
[32m[11/14 11:00:01 d2.utils.events]: [0m eta: 0:17:01  iter: 699  total_loss: 1.583  loss_cls: 0.2355  loss_box_reg: 0.4328  loss_mask: 0.2864  loss_rpn_cls: 0.1734  loss_rpn_loc: 0.4296  time: 0.1096  data_time: 0.0017  lr: 0.006993  max_mem: 1827M
[32m[11/14 11:00:03 d2.utils.events]: [0m eta: 0:16:57  iter: 719  total_loss: 1.592  loss_cls: 0.2539  loss_box_reg: 0.4625  loss_mask: 0.2529  loss_rpn_cls: 0.16  loss_rpn_loc: 0.3899  time: 0.1097  data_time: 0.0018  lr: 0.0071928  max_mem: 1827M
[32m[11/14 11:00:05 d2.utils.events]: [0m eta: 0:16:57  iter: 739  total_loss: 1.569  loss_cls: 0.2563  loss_box_reg: 0.4587  loss_mask: 0.2579  loss_rpn_cls: 0.1512  loss_rpn_loc: 0.4231  time: 0.1097  data_time: 0.0017  lr: 0.0073926  max_mem: 1827M
[32m[11/14 11:00:08 d2.utils.events]: [0m eta: 0:16:51  iter: 759  total_loss: 1.482  loss_cls: 0.2099  loss_box_reg: 0.4024  loss_mask: 0.2637  loss_rpn_cls: 0.1899  loss_rpn_loc: 0.4228  time: 0.1097  data_time: 0.0017  lr: 0.0075924  max_mem: 1827M
[32m[11/14 11:00:10 d2.utils.events]: [0m eta: 0:16:50  iter: 779  total_loss: 1.545  loss_cls: 0.2304  loss_box_reg: 0.4281  loss_mask: 0.2547  loss_rpn_cls: 0.1789  loss_rpn_loc: 0.3971  time: 0.1098  data_time: 0.0017  lr: 0.0077922  max_mem: 1827M
[32m[11/14 11:00:12 d2.utils.events]: [0m eta: 0:16:51  iter: 799  total_loss: 1.502  loss_cls: 0.2403  loss_box_reg: 0.492  loss_mask: 0.2463  loss_rpn_cls: 0.1733  loss_rpn_loc: 0.3855  time: 0.1099  data_time: 0.0017  lr: 0.007992  max_mem: 1827M
[32m[11/14 11:00:14 d2.utils.events]: [0m eta: 0:16:49  iter: 819  total_loss: 1.568  loss_cls: 0.2444  loss_box_reg: 0.4848  loss_mask: 0.2522  loss_rpn_cls: 0.1955  loss_rpn_loc: 0.3946  time: 0.1100  data_time: 0.0016  lr: 0.0081918  max_mem: 1827M
[32m[11/14 11:00:17 d2.utils.events]: [0m eta: 0:16:48  iter: 839  total_loss: 1.485  loss_cls: 0.2172  loss_box_reg: 0.4448  loss_mask: 0.2544  loss_rpn_cls: 0.1716  loss_rpn_loc: 0.3893  time: 0.1100  data_time: 0.0018  lr: 0.0083916  max_mem: 1827M
[32m[11/14 11:00:19 d2.utils.events]: [0m eta: 0:16:48  iter: 859  total_loss: 1.416  loss_cls: 0.2201  loss_box_reg: 0.4567  loss_mask: 0.2328  loss_rpn_cls: 0.1539  loss_rpn_loc: 0.3696  time: 0.1101  data_time: 0.0017  lr: 0.0085914  max_mem: 1827M
[32m[11/14 11:00:21 d2.utils.events]: [0m eta: 0:16:47  iter: 879  total_loss: 1.475  loss_cls: 0.2041  loss_box_reg: 0.4662  loss_mask: 0.2424  loss_rpn_cls: 0.1461  loss_rpn_loc: 0.3858  time: 0.1102  data_time: 0.0016  lr: 0.0087912  max_mem: 1827M
[32m[11/14 11:00:24 d2.utils.events]: [0m eta: 0:16:46  iter: 899  total_loss: 1.483  loss_cls: 0.2193  loss_box_reg: 0.4649  loss_mask: 0.2325  loss_rpn_cls: 0.1742  loss_rpn_loc: 0.363  time: 0.1103  data_time: 0.0019  lr: 0.008991  max_mem: 1827M
[32m[11/14 11:00:26 d2.utils.events]: [0m eta: 0:16:45  iter: 919  total_loss: 1.39  loss_cls: 0.209  loss_box_reg: 0.4543  loss_mask: 0.2371  loss_rpn_cls: 0.1365  loss_rpn_loc: 0.3862  time: 0.1103  data_time: 0.0015  lr: 0.0091908  max_mem: 1827M
[32m[11/14 11:00:30 d2.utils.events]: [0m eta: 0:16:44  iter: 939  total_loss: 1.426  loss_cls: 0.2276  loss_box_reg: 0.4593  loss_mask: 0.2416  loss_rpn_cls: 0.1387  loss_rpn_loc: 0.3664  time: 0.1104  data_time: 0.0015  lr: 0.0093906  max_mem: 1827M
[32m[11/14 11:00:32 d2.utils.events]: [0m eta: 0:16:42  iter: 959  total_loss: 1.482  loss_cls: 0.2131  loss_box_reg: 0.4425  loss_mask: 0.2274  loss_rpn_cls: 0.1504  loss_rpn_loc: 0.4031  time: 0.1104  data_time: 0.0016  lr: 0.0095904  max_mem: 1827M
[32m[11/14 11:00:34 d2.utils.events]: [0m eta: 0:16:41  iter: 979  total_loss: 1.503  loss_cls: 0.2296  loss_box_reg: 0.4618  loss_mask: 0.2542  loss_rpn_cls: 0.1781  loss_rpn_loc: 0.4209  time: 0.1105  data_time: 0.0017  lr: 0.0097902  max_mem: 1827M
[32m[11/14 11:00:36 d2.utils.events]: [0m eta: 0:16:39  iter: 999  total_loss: 1.463  loss_cls: 0.2122  loss_box_reg: 0.4736  loss_mask: 0.2335  loss_rpn_cls: 0.1467  loss_rpn_loc: 0.3812  time: 0.1105  data_time: 0.0018  lr: 0.00999  max_mem: 1827M
[32m[11/14 11:00:39 d2.utils.events]: [0m eta: 0:16:37  iter: 1019  total_loss: 1.482  loss_cls: 0.2036  loss_box_reg: 0.4607  loss_mask: 0.2423  loss_rpn_cls: 0.1876  loss_rpn_loc: 0.3866  time: 0.1105  data_time: 0.0016  lr: 0.01  max_mem: 1827M
[32m[11/14 11:00:41 d2.utils.events]: [0m eta: 0:16:36  iter: 1039  total_loss: 1.479  loss_cls: 0.2227  loss_box_reg: 0.5015  loss_mask: 0.2352  loss_rpn_cls: 0.148  loss_rpn_loc: 0.3792  time: 0.1106  data_time: 0.0017  lr: 0.01  max_mem: 1827M
[32m[11/14 11:00:43 d2.utils.events]: [0m eta: 0:16:35  iter: 1059  total_loss: 1.416  loss_cls: 0.2096  loss_box_reg: 0.4039  loss_mask: 0.2414  loss_rpn_cls: 0.1396  loss_rpn_loc: 0.4082  time: 0.1106  data_time: 0.0017  lr: 0.01  max_mem: 1827M
[32m[11/14 11:00:46 d2.utils.events]: [0m eta: 0:16:34  iter: 1079  total_loss: 1.44  loss_cls: 0.2417  loss_box_reg: 0.4482  loss_mask: 0.2251  loss_rpn_cls: 0.1781  loss_rpn_loc: 0.3809  time: 0.1106  data_time: 0.0018  lr: 0.01  max_mem: 1827M
[32m[11/14 11:00:48 d2.utils.events]: [0m eta: 0:16:33  iter: 1099  total_loss: 1.39  loss_cls: 0.1974  loss_box_reg: 0.4324  loss_mask: 0.2257  loss_rpn_cls: 0.1174  loss_rpn_loc: 0.3639  time: 0.1107  data_time: 0.0018  lr: 0.01  max_mem: 1827M
[32m[11/14 11:00:50 d2.utils.events]: [0m eta: 0:16:31  iter: 1119  total_loss: 1.385  loss_cls: 0.2164  loss_box_reg: 0.4237  loss_mask: 0.2308  loss_rpn_cls: 0.1352  loss_rpn_loc: 0.3575  time: 0.1108  data_time: 0.0018  lr: 0.01  max_mem: 1827M
[32m[11/14 11:00:53 d2.utils.events]: [0m eta: 0:16:29  iter: 1139  total_loss: 1.327  loss_cls: 0.1724  loss_box_reg: 0.3782  loss_mask: 0.2268  loss_rpn_cls: 0.1398  loss_rpn_loc: 0.4078  time: 0.1108  data_time: 0.0016  lr: 0.01  max_mem: 1827M
[32m[11/14 11:00:55 d2.utils.events]: [0m eta: 0:16:29  iter: 1159  total_loss: 1.416  loss_cls: 0.2265  loss_box_reg: 0.4799  loss_mask: 0.2246  loss_rpn_cls: 0.1645  loss_rpn_loc: 0.3484  time: 0.1108  data_time: 0.0017  lr: 0.01  max_mem: 1827M
[32m[11/14 11:00:57 d2.utils.events]: [0m eta: 0:16:27  iter: 1179  total_loss: 1.437  loss_cls: 0.2209  loss_box_reg: 0.4688  loss_mask: 0.2341  loss_rpn_cls: 0.1369  loss_rpn_loc: 0.3428  time: 0.1108  data_time: 0.0017  lr: 0.01  max_mem: 1827M
[32m[11/14 11:00:59 d2.utils.events]: [0m eta: 0:16:24  iter: 1199  total_loss: 1.378  loss_cls: 0.2212  loss_box_reg: 0.467  loss_mask: 0.2252  loss_rpn_cls: 0.1668  loss_rpn_loc: 0.3443  time: 0.1108  data_time: 0.0018  lr: 0.01  max_mem: 1827M
[32m[11/14 11:01:02 d2.utils.events]: [0m eta: 0:16:25  iter: 1219  total_loss: 1.388  loss_cls: 0.2012  loss_box_reg: 0.4573  loss_mask: 0.2225  loss_rpn_cls: 0.115  loss_rpn_loc: 0.3859  time: 0.1109  data_time: 0.0016  lr: 0.01  max_mem: 1827M
[32m[11/14 11:01:04 d2.utils.events]: [0m eta: 0:16:24  iter: 1239  total_loss: 1.404  loss_cls: 0.2349  loss_box_reg: 0.452  loss_mask: 0.2381  loss_rpn_cls: 0.121  loss_rpn_loc: 0.3759  time: 0.1109  data_time: 0.0018  lr: 0.01  max_mem: 1827M
[32m[11/14 11:01:06 d2.utils.events]: [0m eta: 0:16:21  iter: 1259  total_loss: 1.353  loss_cls: 0.1971  loss_box_reg: 0.4391  loss_mask: 0.2282  loss_rpn_cls: 0.1306  loss_rpn_loc: 0.3481  time: 0.1110  data_time: 0.0018  lr: 0.01  max_mem: 1827M
[32m[11/14 11:01:09 d2.utils.events]: [0m eta: 0:16:20  iter: 1279  total_loss: 1.32  loss_cls: 0.2045  loss_box_reg: 0.469  loss_mask: 0.2239  loss_rpn_cls: 0.1467  loss_rpn_loc: 0.349  time: 0.1110  data_time: 0.0018  lr: 0.01  max_mem: 1827M
[32m[11/14 11:01:11 d2.utils.events]: [0m eta: 0:16:19  iter: 1299  total_loss: 1.36  loss_cls: 0.1982  loss_box_reg: 0.3994  loss_mask: 0.2097  loss_rpn_cls: 0.1478  loss_rpn_loc: 0.3494  time: 0.1111  data_time: 0.0018  lr: 0.01  max_mem: 1827M
[32m[11/14 11:01:13 d2.utils.events]: [0m eta: 0:16:16  iter: 1319  total_loss: 1.33  loss_cls: 0.1956  loss_box_reg: 0.4234  loss_mask: 0.2098  loss_rpn_cls: 0.163  loss_rpn_loc: 0.3457  time: 0.1111  data_time: 0.0017  lr: 0.01  max_mem: 1827M
[32m[11/14 11:01:15 d2.utils.events]: [0m eta: 0:16:13  iter: 1339  total_loss: 1.321  loss_cls: 0.2138  loss_box_reg: 0.4341  loss_mask: 0.2168  loss_rpn_cls: 0.1306  loss_rpn_loc: 0.3366  time: 0.1111  data_time: 0.0017  lr: 0.01  max_mem: 1827M
[32m[11/14 11:01:18 d2.utils.events]: [0m eta: 0:16:12  iter: 1359  total_loss: 1.366  loss_cls: 0.1971  loss_box_reg: 0.4342  loss_mask: 0.223  loss_rpn_cls: 0.1562  loss_rpn_loc: 0.3529  time: 0.1112  data_time: 0.0017  lr: 0.01  max_mem: 1827M
[32m[11/14 11:01:20 d2.utils.events]: [0m eta: 0:16:10  iter: 1379  total_loss: 1.334  loss_cls: 0.1881  loss_box_reg: 0.4328  loss_mask: 0.2084  loss_rpn_cls: 0.1441  loss_rpn_loc: 0.3726  time: 0.1112  data_time: 0.0016  lr: 0.01  max_mem: 1827M
[32m[11/14 11:01:22 d2.utils.events]: [0m eta: 0:16:08  iter: 1399  total_loss: 1.317  loss_cls: 0.1893  loss_box_reg: 0.4196  loss_mask: 0.2155  loss_rpn_cls: 0.1213  loss_rpn_loc: 0.3597  time: 0.1112  data_time: 0.0017  lr: 0.01  max_mem: 1827M
[32m[11/14 11:01:25 d2.utils.events]: [0m eta: 0:16:06  iter: 1419  total_loss: 1.34  loss_cls: 0.2368  loss_box_reg: 0.4331  loss_mask: 0.2043  loss_rpn_cls: 0.1421  loss_rpn_loc: 0.3562  time: 0.1112  data_time: 0.0016  lr: 0.01  max_mem: 1827M
[32m[11/14 11:01:27 d2.utils.events]: [0m eta: 0:16:04  iter: 1439  total_loss: 1.392  loss_cls: 0.208  loss_box_reg: 0.4172  loss_mask: 0.2097  loss_rpn_cls: 0.1139  loss_rpn_loc: 0.3862  time: 0.1113  data_time: 0.0017  lr: 0.01  max_mem: 1827M
[32m[11/14 11:01:30 d2.utils.events]: [0m eta: 0:16:02  iter: 1459  total_loss: 1.321  loss_cls: 0.2233  loss_box_reg: 0.4218  loss_mask: 0.2179  loss_rpn_cls: 0.1289  loss_rpn_loc: 0.3344  time: 0.1113  data_time: 0.0017  lr: 0.01  max_mem: 1827M
[32m[11/14 11:01:32 d2.utils.events]: [0m eta: 0:15:59  iter: 1479  total_loss: 1.322  loss_cls: 0.2036  loss_box_reg: 0.4355  loss_mask: 0.2064  loss_rpn_cls: 0.1245  loss_rpn_loc: 0.3405  time: 0.1113  data_time: 0.0017  lr: 0.01  max_mem: 1827M
[32m[11/14 11:01:34 d2.utils.events]: [0m eta: 0:15:57  iter: 1499  total_loss: 1.225  loss_cls: 0.1628  loss_box_reg: 0.3911  loss_mask: 0.2203  loss_rpn_cls: 0.1193  loss_rpn_loc: 0.3248  time: 0.1113  data_time: 0.0016  lr: 0.01  max_mem: 1827M
[32m[11/14 11:01:36 d2.utils.events]: [0m eta: 0:15:54  iter: 1519  total_loss: 1.274  loss_cls: 0.201  loss_box_reg: 0.4164  loss_mask: 0.2038  loss_rpn_cls: 0.1244  loss_rpn_loc: 0.3303  time: 0.1113  data_time: 0.0016  lr: 0.01  max_mem: 1827M
[32m[11/14 11:01:39 d2.utils.events]: [0m eta: 0:15:52  iter: 1539  total_loss: 1.263  loss_cls: 0.2016  loss_box_reg: 0.396  loss_mask: 0.2076  loss_rpn_cls: 0.1142  loss_rpn_loc: 0.3447  time: 0.1113  data_time: 0.0014  lr: 0.01  max_mem: 1827M
[32m[11/14 11:01:41 d2.utils.events]: [0m eta: 0:15:50  iter: 1559  total_loss: 1.198  loss_cls: 0.1731  loss_box_reg: 0.4103  loss_mask: 0.2148  loss_rpn_cls: 0.08973  loss_rpn_loc: 0.3484  time: 0.1114  data_time: 0.0017  lr: 0.01  max_mem: 1827M
[32m[11/14 11:01:43 d2.utils.events]: [0m eta: 0:15:48  iter: 1579  total_loss: 1.329  loss_cls: 0.2039  loss_box_reg: 0.4098  loss_mask: 0.209  loss_rpn_cls: 0.1626  loss_rpn_loc: 0.3855  time: 0.1113  data_time: 0.0017  lr: 0.01  max_mem: 1827M
[32m[11/14 11:01:45 d2.utils.events]: [0m eta: 0:15:47  iter: 1599  total_loss: 1.369  loss_cls: 0.2355  loss_box_reg: 0.4232  loss_mask: 0.2216  loss_rpn_cls: 0.1344  loss_rpn_loc: 0.3887  time: 0.1114  data_time: 0.0016  lr: 0.01  max_mem: 1827M
[32m[11/14 11:01:48 d2.utils.events]: [0m eta: 0:15:45  iter: 1619  total_loss: 1.345  loss_cls: 0.2047  loss_box_reg: 0.4061  loss_mask: 0.2132  loss_rpn_cls: 0.1462  loss_rpn_loc: 0.361  time: 0.1114  data_time: 0.0015  lr: 0.01  max_mem: 1827M
[32m[11/14 11:01:50 d2.utils.events]: [0m eta: 0:15:42  iter: 1639  total_loss: 1.293  loss_cls: 0.1871  loss_box_reg: 0.4095  loss_mask: 0.2001  loss_rpn_cls: 0.133  loss_rpn_loc: 0.3462  time: 0.1114  data_time: 0.0016  lr: 0.01  max_mem: 1827M
[32m[11/14 11:01:52 d2.utils.events]: [0m eta: 0:15:40  iter: 1659  total_loss: 1.24  loss_cls: 0.1811  loss_box_reg: 0.3843  loss_mask: 0.2088  loss_rpn_cls: 0.122  loss_rpn_loc: 0.319  time: 0.1114  data_time: 0.0016  lr: 0.01  max_mem: 1827M
[32m[11/14 11:01:54 d2.utils.events]: [0m eta: 0:15:38  iter: 1679  total_loss: 1.281  loss_cls: 0.1813  loss_box_reg: 0.3896  loss_mask: 0.2036  loss_rpn_cls: 0.1206  loss_rpn_loc: 0.3302  time: 0.1114  data_time: 0.0016  lr: 0.01  max_mem: 1827M
[32m[11/14 11:01:57 d2.utils.events]: [0m eta: 0:15:36  iter: 1699  total_loss: 1.229  loss_cls: 0.2023  loss_box_reg: 0.4231  loss_mask: 0.2049  loss_rpn_cls: 0.1382  loss_rpn_loc: 0.3177  time: 0.1114  data_time: 0.0017  lr: 0.01  max_mem: 1827M
[32m[11/14 11:01:59 d2.utils.events]: [0m eta: 0:15:34  iter: 1719  total_loss: 1.244  loss_cls: 0.2177  loss_box_reg: 0.4191  loss_mask: 0.1935  loss_rpn_cls: 0.1169  loss_rpn_loc: 0.2895  time: 0.1114  data_time: 0.0016  lr: 0.01  max_mem: 1827M
[32m[11/14 11:02:01 d2.utils.events]: [0m eta: 0:15:32  iter: 1739  total_loss: 1.261  loss_cls: 0.1947  loss_box_reg: 0.4104  loss_mask: 0.2012  loss_rpn_cls: 0.1116  loss_rpn_loc: 0.3157  time: 0.1115  data_time: 0.0017  lr: 0.01  max_mem: 1827M
[32m[11/14 11:02:04 d2.utils.events]: [0m eta: 0:15:31  iter: 1759  total_loss: 1.315  loss_cls: 0.1982  loss_box_reg: 0.4226  loss_mask: 0.2091  loss_rpn_cls: 0.1069  loss_rpn_loc: 0.329  time: 0.1115  data_time: 0.0016  lr: 0.01  max_mem: 1827M
[32m[11/14 11:02:06 d2.utils.events]: [0m eta: 0:15:29  iter: 1779  total_loss: 1.279  loss_cls: 0.2102  loss_box_reg: 0.4539  loss_mask: 0.2016  loss_rpn_cls: 0.1205  loss_rpn_loc: 0.3009  time: 0.1115  data_time: 0.0016  lr: 0.01  max_mem: 1827M
[32m[11/14 11:02:08 d2.utils.events]: [0m eta: 0:15:26  iter: 1799  total_loss: 1.283  loss_cls: 0.1991  loss_box_reg: 0.4045  loss_mask: 0.2065  loss_rpn_cls: 0.1253  loss_rpn_loc: 0.3413  time: 0.1115  data_time: 0.0016  lr: 0.01  max_mem: 1827M
[32m[11/14 11:02:10 d2.utils.events]: [0m eta: 0:15:23  iter: 1819  total_loss: 1.261  loss_cls: 0.2069  loss_box_reg: 0.4015  loss_mask: 0.1932  loss_rpn_cls: 0.115  loss_rpn_loc: 0.3366  time: 0.1115  data_time: 0.0017  lr: 0.01  max_mem: 1827M
[32m[11/14 11:02:13 d2.utils.events]: [0m eta: 0:15:21  iter: 1839  total_loss: 1.219  loss_cls: 0.1801  loss_box_reg: 0.3951  loss_mask: 0.201  loss_rpn_cls: 0.1274  loss_rpn_loc: 0.3217  time: 0.1115  data_time: 0.0016  lr: 0.01  max_mem: 1827M
[32m[11/14 11:02:15 d2.utils.events]: [0m eta: 0:15:19  iter: 1859  total_loss: 1.214  loss_cls: 0.1886  loss_box_reg: 0.4024  loss_mask: 0.1988  loss_rpn_cls: 0.1157  loss_rpn_loc: 0.3051  time: 0.1115  data_time: 0.0016  lr: 0.01  max_mem: 1827M
[32m[11/14 11:02:17 d2.utils.events]: [0m eta: 0:15:16  iter: 1879  total_loss: 1.144  loss_cls: 0.1809  loss_box_reg: 0.4084  loss_mask: 0.1869  loss_rpn_cls: 0.07648  loss_rpn_loc: 0.309  time: 0.1115  data_time: 0.0017  lr: 0.01  max_mem: 1827M
[32m[11/14 11:02:19 d2.utils.events]: [0m eta: 0:15:14  iter: 1899  total_loss: 1.19  loss_cls: 0.1752  loss_box_reg: 0.395  loss_mask: 0.1956  loss_rpn_cls: 0.1041  loss_rpn_loc: 0.3218  time: 0.1115  data_time: 0.0016  lr: 0.01  max_mem: 1827M
[32m[11/14 11:02:22 d2.utils.events]: [0m eta: 0:15:12  iter: 1919  total_loss: 1.314  loss_cls: 0.2041  loss_box_reg: 0.4283  loss_mask: 0.2227  loss_rpn_cls: 0.1232  loss_rpn_loc: 0.3161  time: 0.1115  data_time: 0.0017  lr: 0.01  max_mem: 1827M
[32m[11/14 11:02:24 d2.utils.events]: [0m eta: 0:15:10  iter: 1939  total_loss: 1.212  loss_cls: 0.1758  loss_box_reg: 0.4083  loss_mask: 0.1953  loss_rpn_cls: 0.1498  loss_rpn_loc: 0.3233  time: 0.1115  data_time: 0.0017  lr: 0.01  max_mem: 1827M
[32m[11/14 11:02:26 d2.utils.events]: [0m eta: 0:15:08  iter: 1959  total_loss: 1.221  loss_cls: 0.1883  loss_box_reg: 0.4182  loss_mask: 0.2035  loss_rpn_cls: 0.109  loss_rpn_loc: 0.2852  time: 0.1115  data_time: 0.0017  lr: 0.01  max_mem: 1827M
[32m[11/14 11:02:29 d2.utils.events]: [0m eta: 0:15:06  iter: 1979  total_loss: 1.213  loss_cls: 0.1757  loss_box_reg: 0.3968  loss_mask: 0.1894  loss_rpn_cls: 0.1462  loss_rpn_loc: 0.3322  time: 0.1116  data_time: 0.0017  lr: 0.01  max_mem: 1827M
[32m[11/14 11:02:31 d2.utils.events]: [0m eta: 0:15:03  iter: 1999  total_loss: 1.214  loss_cls: 0.1778  loss_box_reg: 0.4061  loss_mask: 0.1983  loss_rpn_cls: 0.1142  loss_rpn_loc: 0.2911  time: 0.1115  data_time: 0.0015  lr: 0.01  max_mem: 1827M
[32m[11/14 11:02:33 d2.utils.events]: [0m eta: 0:15:01  iter: 2019  total_loss: 1.19  loss_cls: 0.1762  loss_box_reg: 0.3884  loss_mask: 0.2053  loss_rpn_cls: 0.1183  loss_rpn_loc: 0.2911  time: 0.1116  data_time: 0.0017  lr: 0.01  max_mem: 1827M
[32m[11/14 11:02:35 d2.utils.events]: [0m eta: 0:14:59  iter: 2039  total_loss: 1.171  loss_cls: 0.192  loss_box_reg: 0.3913  loss_mask: 0.193  loss_rpn_cls: 0.1238  loss_rpn_loc: 0.2845  time: 0.1116  data_time: 0.0016  lr: 0.01  max_mem: 1827M
[32m[11/14 11:02:38 d2.utils.events]: [0m eta: 0:14:57  iter: 2059  total_loss: 1.195  loss_cls: 0.2  loss_box_reg: 0.3949  loss_mask: 0.1847  loss_rpn_cls: 0.1073  loss_rpn_loc: 0.316  time: 0.1116  data_time: 0.0018  lr: 0.01  max_mem: 1827M
[32m[11/14 11:02:40 d2.utils.events]: [0m eta: 0:14:55  iter: 2079  total_loss: 1.167  loss_cls: 0.1736  loss_box_reg: 0.3789  loss_mask: 0.1979  loss_rpn_cls: 0.1207  loss_rpn_loc: 0.3289  time: 0.1116  data_time: 0.0017  lr: 0.01  max_mem: 1827M
[32m[11/14 11:02:42 d2.utils.events]: [0m eta: 0:14:52  iter: 2099  total_loss: 1.231  loss_cls: 0.1895  loss_box_reg: 0.3764  loss_mask: 0.1959  loss_rpn_cls: 0.1228  loss_rpn_loc: 0.3099  time: 0.1116  data_time: 0.0018  lr: 0.01  max_mem: 1827M
[32m[11/14 11:02:45 d2.utils.events]: [0m eta: 0:14:50  iter: 2119  total_loss: 1.129  loss_cls: 0.1881  loss_box_reg: 0.3894  loss_mask: 0.1858  loss_rpn_cls: 0.1061  loss_rpn_loc: 0.2806  time: 0.1117  data_time: 0.0016  lr: 0.01  max_mem: 1827M
[32m[11/14 11:02:47 d2.utils.events]: [0m eta: 0:14:48  iter: 2139  total_loss: 1.153  loss_cls: 0.1763  loss_box_reg: 0.3719  loss_mask: 0.1939  loss_rpn_cls: 0.07466  loss_rpn_loc: 0.2898  time: 0.1117  data_time: 0.0016  lr: 0.01  max_mem: 1827M
[32m[11/14 11:02:49 d2.utils.events]: [0m eta: 0:14:46  iter: 2159  total_loss: 1.153  loss_cls: 0.1828  loss_box_reg: 0.3891  loss_mask: 0.1982  loss_rpn_cls: 0.08804  loss_rpn_loc: 0.2962  time: 0.1117  data_time: 0.0017  lr: 0.01  max_mem: 1827M
[32m[11/14 11:02:52 d2.utils.events]: [0m eta: 0:14:45  iter: 2179  total_loss: 1.175  loss_cls: 0.1671  loss_box_reg: 0.3775  loss_mask: 0.2034  loss_rpn_cls: 0.08437  loss_rpn_loc: 0.2805  time: 0.1117  data_time: 0.0017  lr: 0.01  max_mem: 1827M
[32m[11/14 11:02:54 d2.utils.events]: [0m eta: 0:14:43  iter: 2199  total_loss: 1.112  loss_cls: 0.1573  loss_box_reg: 0.3763  loss_mask: 0.1844  loss_rpn_cls: 0.07002  loss_rpn_loc: 0.2973  time: 0.1117  data_time: 0.0018  lr: 0.01  max_mem: 1827M
[32m[11/14 11:02:56 d2.utils.events]: [0m eta: 0:14:41  iter: 2219  total_loss: 1.199  loss_cls: 0.1824  loss_box_reg: 0.4024  loss_mask: 0.1908  loss_rpn_cls: 0.09734  loss_rpn_loc: 0.2887  time: 0.1117  data_time: 0.0018  lr: 0.01  max_mem: 1827M
[32m[11/14 11:02:58 d2.utils.events]: [0m eta: 0:14:38  iter: 2239  total_loss: 1.105  loss_cls: 0.1687  loss_box_reg: 0.3992  loss_mask: 0.1917  loss_rpn_cls: 0.07522  loss_rpn_loc: 0.2625  time: 0.1118  data_time: 0.0017  lr: 0.01  max_mem: 1827M
[32m[11/14 11:03:01 d2.utils.events]: [0m eta: 0:14:36  iter: 2259  total_loss: 1.091  loss_cls: 0.1561  loss_box_reg: 0.3707  loss_mask: 0.1786  loss_rpn_cls: 0.09149  loss_rpn_loc: 0.3092  time: 0.1118  data_time: 0.0016  lr: 0.01  max_mem: 1827M
[32m[11/14 11:03:03 d2.utils.events]: [0m eta: 0:14:34  iter: 2279  total_loss: 1.078  loss_cls: 0.1667  loss_box_reg: 0.3783  loss_mask: 0.1855  loss_rpn_cls: 0.09438  loss_rpn_loc: 0.2754  time: 0.1118  data_time: 0.0018  lr: 0.01  max_mem: 1827M
[32m[11/14 11:03:05 d2.utils.events]: [0m eta: 0:14:31  iter: 2299  total_loss: 1.095  loss_cls: 0.1594  loss_box_reg: 0.3787  loss_mask: 0.1858  loss_rpn_cls: 0.0823  loss_rpn_loc: 0.2753  time: 0.1118  data_time: 0.0016  lr: 0.01  max_mem: 1827M
[32m[11/14 11:03:08 d2.utils.events]: [0m eta: 0:14:29  iter: 2319  total_loss: 1.13  loss_cls: 0.1515  loss_box_reg: 0.3832  loss_mask: 0.1814  loss_rpn_cls: 0.08838  loss_rpn_loc: 0.308  time: 0.1119  data_time: 0.0017  lr: 0.01  max_mem: 1827M
[32m[11/14 11:03:10 d2.utils.events]: [0m eta: 0:14:28  iter: 2339  total_loss: 1.122  loss_cls: 0.164  loss_box_reg: 0.3733  loss_mask: 0.1792  loss_rpn_cls: 0.1022  loss_rpn_loc: 0.2757  time: 0.1119  data_time: 0.0018  lr: 0.01  max_mem: 1827M
[32m[11/14 11:03:12 d2.utils.events]: [0m eta: 0:14:26  iter: 2359  total_loss: 1.071  loss_cls: 0.1733  loss_box_reg: 0.3811  loss_mask: 0.1838  loss_rpn_cls: 0.1128  loss_rpn_loc: 0.2636  time: 0.1119  data_time: 0.0014  lr: 0.01  max_mem: 1827M
[32m[11/14 11:03:14 d2.utils.events]: [0m eta: 0:14:23  iter: 2379  total_loss: 1.106  loss_cls: 0.1609  loss_box_reg: 0.3785  loss_mask: 0.1803  loss_rpn_cls: 0.0847  loss_rpn_loc: 0.2697  time: 0.1119  data_time: 0.0017  lr: 0.01  max_mem: 1827M
[32m[11/14 11:03:17 d2.utils.events]: [0m eta: 0:14:21  iter: 2399  total_loss: 1.024  loss_cls: 0.1602  loss_box_reg: 0.3714  loss_mask: 0.1743  loss_rpn_cls: 0.08415  loss_rpn_loc: 0.2672  time: 0.1119  data_time: 0.0017  lr: 0.01  max_mem: 1827M
[32m[11/14 11:03:19 d2.utils.events]: [0m eta: 0:14:19  iter: 2419  total_loss: 1.073  loss_cls: 0.1744  loss_box_reg: 0.3706  loss_mask: 0.1751  loss_rpn_cls: 0.07331  loss_rpn_loc: 0.3074  time: 0.1119  data_time: 0.0017  lr: 0.01  max_mem: 1827M
[32m[11/14 11:03:21 d2.utils.events]: [0m eta: 0:14:17  iter: 2439  total_loss: 1.128  loss_cls: 0.1672  loss_box_reg: 0.3722  loss_mask: 0.1809  loss_rpn_cls: 0.0951  loss_rpn_loc: 0.2902  time: 0.1119  data_time: 0.0017  lr: 0.01  max_mem: 1827M
[32m[11/14 11:03:24 d2.utils.events]: [0m eta: 0:14:15  iter: 2459  total_loss: 1.133  loss_cls: 0.1657  loss_box_reg: 0.4003  loss_mask: 0.1895  loss_rpn_cls: 0.1037  loss_rpn_loc: 0.3155  time: 0.1119  data_time: 0.0017  lr: 0.01  max_mem: 1827M
[32m[11/14 11:03:26 d2.utils.events]: [0m eta: 0:14:13  iter: 2479  total_loss: 1.101  loss_cls: 0.1751  loss_box_reg: 0.3862  loss_mask: 0.1853  loss_rpn_cls: 0.1016  loss_rpn_loc: 0.2741  time: 0.1119  data_time: 0.0018  lr: 0.01  max_mem: 1827M
[32m[11/14 11:03:28 d2.utils.events]: [0m eta: 0:14:11  iter: 2499  total_loss: 1.126  loss_cls: 0.1767  loss_box_reg: 0.386  loss_mask: 0.1909  loss_rpn_cls: 0.1085  loss_rpn_loc: 0.2709  time: 0.1119  data_time: 0.0017  lr: 0.01  max_mem: 1827M
[32m[11/14 11:03:30 d2.utils.events]: [0m eta: 0:14:09  iter: 2519  total_loss: 1.106  loss_cls: 0.1765  loss_box_reg: 0.3758  loss_mask: 0.177  loss_rpn_cls: 0.1044  loss_rpn_loc: 0.2811  time: 0.1119  data_time: 0.0017  lr: 0.01  max_mem: 1827M
[32m[11/14 11:03:33 d2.utils.events]: [0m eta: 0:14:06  iter: 2539  total_loss: 1.157  loss_cls: 0.1645  loss_box_reg: 0.3905  loss_mask: 0.1868  loss_rpn_cls: 0.08847  loss_rpn_loc: 0.2901  time: 0.1119  data_time: 0.0017  lr: 0.01  max_mem: 1827M
[32m[11/14 11:03:35 d2.utils.events]: [0m eta: 0:14:04  iter: 2559  total_loss: 1.097  loss_cls: 0.1659  loss_box_reg: 0.3851  loss_mask: 0.181  loss_rpn_cls: 0.1021  loss_rpn_loc: 0.2911  time: 0.1119  data_time: 0.0017  lr: 0.01  max_mem: 1827M
[32m[11/14 11:03:37 d2.utils.events]: [0m eta: 0:14:02  iter: 2579  total_loss: 1.08  loss_cls: 0.1794  loss_box_reg: 0.3914  loss_mask: 0.1837  loss_rpn_cls: 0.09351  loss_rpn_loc: 0.2674  time: 0.1119  data_time: 0.0017  lr: 0.01  max_mem: 1827M
[32m[11/14 11:03:39 d2.utils.events]: [0m eta: 0:14:00  iter: 2599  total_loss: 1.05  loss_cls: 0.1607  loss_box_reg: 0.3601  loss_mask: 0.1724  loss_rpn_cls: 0.1014  loss_rpn_loc: 0.2675  time: 0.1119  data_time: 0.0018  lr: 0.01  max_mem: 1827M
[32m[11/14 11:03:42 d2.utils.events]: [0m eta: 0:13:58  iter: 2619  total_loss: 1.027  loss_cls: 0.1623  loss_box_reg: 0.3776  loss_mask: 0.1705  loss_rpn_cls: 0.08359  loss_rpn_loc: 0.2482  time: 0.1120  data_time: 0.0018  lr: 0.01  max_mem: 1827M
[32m[11/14 11:03:44 d2.utils.events]: [0m eta: 0:13:55  iter: 2639  total_loss: 1.036  loss_cls: 0.1486  loss_box_reg: 0.3537  loss_mask: 0.1599  loss_rpn_cls: 0.08057  loss_rpn_loc: 0.2714  time: 0.1120  data_time: 0.0015  lr: 0.01  max_mem: 1827M
[32m[11/14 11:03:46 d2.utils.events]: [0m eta: 0:13:53  iter: 2659  total_loss: 1.139  loss_cls: 0.1796  loss_box_reg: 0.3854  loss_mask: 0.1855  loss_rpn_cls: 0.09975  loss_rpn_loc: 0.2975  time: 0.1120  data_time: 0.0017  lr: 0.01  max_mem: 1827M
[32m[11/14 11:03:49 d2.utils.events]: [0m eta: 0:13:51  iter: 2679  total_loss: 1.161  loss_cls: 0.178  loss_box_reg: 0.3908  loss_mask: 0.1973  loss_rpn_cls: 0.1051  loss_rpn_loc: 0.3025  time: 0.1120  data_time: 0.0015  lr: 0.01  max_mem: 1827M
[32m[11/14 11:03:51 d2.utils.events]: [0m eta: 0:13:48  iter: 2699  total_loss: 1.073  loss_cls: 0.1658  loss_box_reg: 0.3665  loss_mask: 0.1714  loss_rpn_cls: 0.08945  loss_rpn_loc: 0.2806  time: 0.1120  data_time: 0.0017  lr: 0.01  max_mem: 1827M
[32m[11/14 11:03:53 d2.utils.events]: [0m eta: 0:13:46  iter: 2719  total_loss: 1.042  loss_cls: 0.1472  loss_box_reg: 0.3601  loss_mask: 0.1736  loss_rpn_cls: 0.0627  loss_rpn_loc: 0.2563  time: 0.1120  data_time: 0.0017  lr: 0.01  max_mem: 1827M
[32m[11/14 11:03:55 d2.utils.events]: [0m eta: 0:13:44  iter: 2739  total_loss: 1.049  loss_cls: 0.1589  loss_box_reg: 0.3425  loss_mask: 0.1753  loss_rpn_cls: 0.08416  loss_rpn_loc: 0.2589  time: 0.1120  data_time: 0.0016  lr: 0.01  max_mem: 1827M
[32m[11/14 11:03:58 d2.utils.events]: [0m eta: 0:13:41  iter: 2759  total_loss: 1.061  loss_cls: 0.1497  loss_box_reg: 0.3578  loss_mask: 0.1802  loss_rpn_cls: 0.1061  loss_rpn_loc: 0.2861  time: 0.1120  data_time: 0.0017  lr: 0.01  max_mem: 1827M
[32m[11/14 11:04:00 d2.utils.events]: [0m eta: 0:13:39  iter: 2779  total_loss: 1.08  loss_cls: 0.1673  loss_box_reg: 0.3508  loss_mask: 0.1818  loss_rpn_cls: 0.08394  loss_rpn_loc: 0.2638  time: 0.1120  data_time: 0.0017  lr: 0.01  max_mem: 1827M
[32m[11/14 11:04:02 d2.utils.events]: [0m eta: 0:13:37  iter: 2799  total_loss: 1.081  loss_cls: 0.1535  loss_box_reg: 0.3564  loss_mask: 0.1892  loss_rpn_cls: 0.08615  loss_rpn_loc: 0.2677  time: 0.1120  data_time: 0.0017  lr: 0.01  max_mem: 1827M
[32m[11/14 11:04:05 d2.utils.events]: [0m eta: 0:13:35  iter: 2819  total_loss: 1.081  loss_cls: 0.1612  loss_box_reg: 0.3723  loss_mask: 0.1732  loss_rpn_cls: 0.08874  loss_rpn_loc: 0.2563  time: 0.1120  data_time: 0.0015  lr: 0.01  max_mem: 1827M
[32m[11/14 11:04:07 d2.utils.events]: [0m eta: 0:13:33  iter: 2839  total_loss: 1.008  loss_cls: 0.1556  loss_box_reg: 0.3828  loss_mask: 0.174  loss_rpn_cls: 0.07192  loss_rpn_loc: 0.2626  time: 0.1121  data_time: 0.0017  lr: 0.01  max_mem: 1827M
[32m[11/14 11:04:09 d2.utils.events]: [0m eta: 0:13:30  iter: 2859  total_loss: 1.163  loss_cls: 0.175  loss_box_reg: 0.3771  loss_mask: 0.1754  loss_rpn_cls: 0.1301  loss_rpn_loc: 0.2849  time: 0.1120  data_time: 0.0016  lr: 0.01  max_mem: 1827M
[32m[11/14 11:04:11 d2.utils.events]: [0m eta: 0:13:28  iter: 2879  total_loss: 1.139  loss_cls: 0.1672  loss_box_reg: 0.3534  loss_mask: 0.183  loss_rpn_cls: 0.09644  loss_rpn_loc: 0.3123  time: 0.1120  data_time: 0.0018  lr: 0.01  max_mem: 1827M
[32m[11/14 11:04:14 d2.utils.events]: [0m eta: 0:13:26  iter: 2899  total_loss: 1.083  loss_cls: 0.1509  loss_box_reg: 0.3551  loss_mask: 0.1757  loss_rpn_cls: 0.0824  loss_rpn_loc: 0.3032  time: 0.1121  data_time: 0.0016  lr: 0.01  max_mem: 1827M
[32m[11/14 11:04:16 d2.utils.events]: [0m eta: 0:13:24  iter: 2919  total_loss: 1.081  loss_cls: 0.164  loss_box_reg: 0.3766  loss_mask: 0.1698  loss_rpn_cls: 0.07608  loss_rpn_loc: 0.2673  time: 0.1121  data_time: 0.0016  lr: 0.01  max_mem: 1827M
[32m[11/14 11:04:18 d2.utils.events]: [0m eta: 0:13:22  iter: 2939  total_loss: 1.026  loss_cls: 0.1474  loss_box_reg: 0.3634  loss_mask: 0.1736  loss_rpn_cls: 0.08428  loss_rpn_loc: 0.2566  time: 0.1121  data_time: 0.0017  lr: 0.01  max_mem: 1827M
[32m[11/14 11:04:21 d2.utils.events]: [0m eta: 0:13:20  iter: 2959  total_loss: 0.9696  loss_cls: 0.1445  loss_box_reg: 0.345  loss_mask: 0.1659  loss_rpn_cls: 0.08031  loss_rpn_loc: 0.2489  time: 0.1121  data_time: 0.0016  lr: 0.01  max_mem: 1827M
[32m[11/14 11:04:23 d2.utils.events]: [0m eta: 0:13:17  iter: 2979  total_loss: 1.024  loss_cls: 0.1503  loss_box_reg: 0.3494  loss_mask: 0.1775  loss_rpn_cls: 0.07962  loss_rpn_loc: 0.2445  time: 0.1121  data_time: 0.0017  lr: 0.01  max_mem: 1827M
[32m[11/14 11:04:25 d2.utils.events]: [0m eta: 0:13:16  iter: 2999  total_loss: 1.023  loss_cls: 0.1343  loss_box_reg: 0.3345  loss_mask: 0.1683  loss_rpn_cls: 0.08518  loss_rpn_loc: 0.2662  time: 0.1121  data_time: 0.0018  lr: 0.01  max_mem: 1827M
[32m[11/14 11:04:28 d2.utils.events]: [0m eta: 0:13:14  iter: 3019  total_loss: 0.9793  loss_cls: 0.1258  loss_box_reg: 0.3353  loss_mask: 0.1658  loss_rpn_cls: 0.07989  loss_rpn_loc: 0.2532  time: 0.1121  data_time: 0.0016  lr: 0.01  max_mem: 1827M
[32m[11/14 11:04:30 d2.utils.events]: [0m eta: 0:13:11  iter: 3039  total_loss: 1.073  loss_cls: 0.1569  loss_box_reg: 0.3436  loss_mask: 0.1654  loss_rpn_cls: 0.07787  loss_rpn_loc: 0.2603  time: 0.1121  data_time: 0.0015  lr: 0.01  max_mem: 1827M
[32m[11/14 11:04:32 d2.utils.events]: [0m eta: 0:13:09  iter: 3059  total_loss: 0.9945  loss_cls: 0.1659  loss_box_reg: 0.3406  loss_mask: 0.1677  loss_rpn_cls: 0.06791  loss_rpn_loc: 0.2435  time: 0.1121  data_time: 0.0018  lr: 0.01  max_mem: 1827M
[32m[11/14 11:04:34 d2.utils.events]: [0m eta: 0:13:07  iter: 3079  total_loss: 1.009  loss_cls: 0.1553  loss_box_reg: 0.3668  loss_mask: 0.1639  loss_rpn_cls: 0.07041  loss_rpn_loc: 0.2347  time: 0.1122  data_time: 0.0016  lr: 0.01  max_mem: 1827M
[32m[11/14 11:04:37 d2.utils.events]: [0m eta: 0:13:05  iter: 3099  total_loss: 0.9946  loss_cls: 0.15  loss_box_reg: 0.3723  loss_mask: 0.1648  loss_rpn_cls: 0.07902  loss_rpn_loc: 0.2549  time: 0.1122  data_time: 0.0018  lr: 0.01  max_mem: 1827M
[32m[11/14 11:04:39 d2.utils.events]: [0m eta: 0:13:03  iter: 3119  total_loss: 0.9826  loss_cls: 0.1337  loss_box_reg: 0.33  loss_mask: 0.1716  loss_rpn_cls: 0.07773  loss_rpn_loc: 0.239  time: 0.1122  data_time: 0.0019  lr: 0.01  max_mem: 1827M
[32m[11/14 11:04:41 d2.utils.events]: [0m eta: 0:13:01  iter: 3139  total_loss: 0.9655  loss_cls: 0.1383  loss_box_reg: 0.3267  loss_mask: 0.1653  loss_rpn_cls: 0.09754  loss_rpn_loc: 0.2524  time: 0.1122  data_time: 0.0013  lr: 0.01  max_mem: 1827M
[32m[11/14 11:04:44 d2.utils.events]: [0m eta: 0:12:58  iter: 3159  total_loss: 0.9621  loss_cls: 0.1291  loss_box_reg: 0.3226  loss_mask: 0.1629  loss_rpn_cls: 0.0684  loss_rpn_loc: 0.2582  time: 0.1122  data_time: 0.0017  lr: 0.01  max_mem: 1827M
[32m[11/14 11:04:46 d2.utils.events]: [0m eta: 0:12:55  iter: 3179  total_loss: 0.9735  loss_cls: 0.1371  loss_box_reg: 0.3412  loss_mask: 0.1737  loss_rpn_cls: 0.08549  loss_rpn_loc: 0.2516  time: 0.1122  data_time: 0.0017  lr: 0.01  max_mem: 1827M
