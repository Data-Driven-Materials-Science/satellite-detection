Registered Datasets: ['satellite_Train', 'satellite_Val']
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/HP743_10S_500x.png
	num_instances: 32
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S08_01_SE1_1000X94.png
	num_instances: 68
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/HP743_11S_250x.png
	num_instances: 39
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S08_03_SE1_1000X03.png
	num_instances: 88
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S06_01_SE1_500X67.png
	num_instances: 54
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S04_02_SE1_1000X50.png
	num_instances: 45
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S03_03_SE1_1250X41.png
	num_instances: 111
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S02_01_SE1_300X14.png
	num_instances: 98
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/HP743_2S_250x.png
	num_instances: 49
Weights not found, weights will be downloaded from source: https://dl.fbaipublicfiles.com/detectron2/COCO-InstanceSegmentation/mask_rcnn_R_50_FPN_3x/137849600/model_final_f10217.pkl
[32m[11/16 06:50:18 d2.engine.defaults]: [0mModel:
GeneralizedRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): StandardROIHeads(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): FastRCNNConvFCHead(
      (flatten): Flatten(start_dim=1, end_dim=-1)
      (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      (fc_relu1): ReLU()
      (fc2): Linear(in_features=1024, out_features=1024, bias=True)
      (fc_relu2): ReLU()
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=1024, out_features=2, bias=True)
      (bbox_pred): Linear(in_features=1024, out_features=4, bias=True)
    )
    (mask_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(14, 14), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(14, 14), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (mask_head): MaskRCNNConvUpsampleHead(
      (mask_fcn1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn2): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn3): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn4): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
      (deconv_relu): ReLU()
      (predictor): Conv2d(256, 1, kernel_size=(1, 1), stride=(1, 1))
    )
  )
)
[32m[11/16 06:50:18 d2.data.build]: [0mRemoved 0 images with no usable annotations. 20 images left.
[32m[11/16 06:50:18 d2.data.build]: [0mDistribution of instances among all 1 categories:
[36m|  category  | #instances   |
|:----------:|:-------------|
| satellite  | 1412         |
|            |              |[0m
[32m[11/16 06:50:18 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[32m[11/16 06:50:18 d2.data.build]: [0mUsing training sampler TrainingSampler
[32m[11/16 06:50:18 d2.data.common]: [0mSerializing 20 elements to byte tensors and concatenating them all ...
[32m[11/16 06:50:18 d2.data.common]: [0mSerialized dataset takes 0.46 MiB
[5m[31mWARNING[0m [32m[11/16 06:50:18 d2.solver.build]: [0mSOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[32m[11/16 06:50:18 d2.checkpoint.c2_model_loading]: [0mRenaming Caffe2 weights ......
[32m[11/16 06:50:18 d2.checkpoint.c2_model_loading]: [0mFollowing weights matched with submodule backbone.bottom_up:
| Names in Model    | Names in Checkpoint      | Shapes                                          |
|:------------------|:-------------------------|:------------------------------------------------|
| res2.0.conv1.*    | res2_0_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,1,1)             |
| res2.0.conv2.*    | res2_0_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.0.conv3.*    | res2_0_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.0.shortcut.* | res2_0_branch1_{bn_*,w}  | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.1.conv1.*    | res2_1_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,256,1,1)            |
| res2.1.conv2.*    | res2_1_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.1.conv3.*    | res2_1_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.2.conv1.*    | res2_2_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,256,1,1)            |
| res2.2.conv2.*    | res2_2_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.2.conv3.*    | res2_2_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res3.0.conv1.*    | res3_0_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,256,1,1)       |
| res3.0.conv2.*    | res3_0_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.0.conv3.*    | res3_0_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.0.shortcut.* | res3_0_branch1_{bn_*,w}  | (512,) (512,) (512,) (512,) (512,256,1,1)       |
| res3.1.conv1.*    | res3_1_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.1.conv2.*    | res3_1_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.1.conv3.*    | res3_1_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.2.conv1.*    | res3_2_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.2.conv2.*    | res3_2_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.2.conv3.*    | res3_2_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.3.conv1.*    | res3_3_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.3.conv2.*    | res3_3_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.3.conv3.*    | res3_3_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res4.0.conv1.*    | res4_0_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,512,1,1)       |
| res4.0.conv2.*    | res4_0_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.0.conv3.*    | res4_0_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.0.shortcut.* | res4_0_branch1_{bn_*,w}  | (1024,) (1024,) (1024,) (1024,) (1024,512,1,1)  |
| res4.1.conv1.*    | res4_1_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.1.conv2.*    | res4_1_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.1.conv3.*    | res4_1_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.2.conv1.*    | res4_2_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.2.conv2.*    | res4_2_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.2.conv3.*    | res4_2_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.3.conv1.*    | res4_3_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.3.conv2.*    | res4_3_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.3.conv3.*    | res4_3_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.4.conv1.*    | res4_4_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.4.conv2.*    | res4_4_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.4.conv3.*    | res4_4_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.5.conv1.*    | res4_5_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.5.conv2.*    | res4_5_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.5.conv3.*    | res4_5_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res5.0.conv1.*    | res5_0_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,1024,1,1)      |
| res5.0.conv2.*    | res5_0_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.0.conv3.*    | res5_0_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| res5.0.shortcut.* | res5_0_branch1_{bn_*,w}  | (2048,) (2048,) (2048,) (2048,) (2048,1024,1,1) |
| res5.1.conv1.*    | res5_1_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,2048,1,1)      |
| res5.1.conv2.*    | res5_1_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.1.conv3.*    | res5_1_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| res5.2.conv1.*    | res5_2_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,2048,1,1)      |
| res5.2.conv2.*    | res5_2_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.2.conv3.*    | res5_2_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| stem.conv1.norm.* | res_conv1_bn_*           | (64,) (64,) (64,) (64,)                         |
| stem.conv1.weight | conv1_w                  | (64, 3, 7, 7)                                   |
[32m[11/16 06:50:18 d2.engine.train_loop]: [0mStarting training from iteration 0
[32m[11/16 06:51:28 d2.utils.events]: [0m eta: 9:24:34  iter: 19  total_loss: 3.286  loss_cls: 0.6074  loss_box_reg: 0.05463  loss_mask: 0.6658  loss_rpn_cls: 0.6839  loss_rpn_loc: 1.311  time: 3.3606  data_time: 0.0135  lr: 0.00019981  max_mem: 0M
[32m[11/16 06:52:32 d2.utils.events]: [0m eta: 9:02:25  iter: 39  total_loss: 2.384  loss_cls: 0.3682  loss_box_reg: 0.02569  loss_mask: 0.6043  loss_rpn_cls: 0.6159  loss_rpn_loc: 0.7393  time: 3.2951  data_time: 0.0041  lr: 0.00039961  max_mem: 0M
[32m[11/16 06:53:37 d2.utils.events]: [0m eta: 8:57:10  iter: 59  total_loss: 2.148  loss_cls: 0.2283  loss_box_reg: 0.07468  loss_mask: 0.5885  loss_rpn_cls: 0.588  loss_rpn_loc: 0.6493  time: 3.2667  data_time: 0.0039  lr: 0.00059941  max_mem: 0M
[32m[11/16 06:54:43 d2.utils.events]: [0m eta: 8:59:56  iter: 79  total_loss: 2.062  loss_cls: 0.2432  loss_box_reg: 0.1965  loss_mask: 0.5662  loss_rpn_cls: 0.5482  loss_rpn_loc: 0.5424  time: 3.2834  data_time: 0.0057  lr: 0.00079921  max_mem: 0M
[32m[11/16 06:55:49 d2.utils.events]: [0m eta: 8:58:41  iter: 99  total_loss: 2.213  loss_cls: 0.283  loss_box_reg: 0.3193  loss_mask: 0.5396  loss_rpn_cls: 0.5099  loss_rpn_loc: 0.5302  time: 3.2775  data_time: 0.0037  lr: 0.00099901  max_mem: 0M
[32m[11/16 06:56:55 d2.utils.events]: [0m eta: 8:57:36  iter: 119  total_loss: 2.215  loss_cls: 0.2765  loss_box_reg: 0.4526  loss_mask: 0.5388  loss_rpn_cls: 0.3979  loss_rpn_loc: 0.5114  time: 3.2818  data_time: 0.0069  lr: 0.0011988  max_mem: 0M
[32m[11/16 06:58:02 d2.utils.events]: [0m eta: 8:57:08  iter: 139  total_loss: 2.01  loss_cls: 0.2645  loss_box_reg: 0.3936  loss_mask: 0.5046  loss_rpn_cls: 0.3477  loss_rpn_loc: 0.4989  time: 3.2957  data_time: 0.0072  lr: 0.0013986  max_mem: 0M
[32m[11/16 06:59:14 d2.utils.events]: [0m eta: 9:02:57  iter: 159  total_loss: 2.051  loss_cls: 0.268  loss_box_reg: 0.4698  loss_mask: 0.4873  loss_rpn_cls: 0.2987  loss_rpn_loc: 0.4838  time: 3.3289  data_time: 0.0052  lr: 0.0015984  max_mem: 0M
[32m[11/16 07:00:21 d2.utils.events]: [0m eta: 9:03:25  iter: 179  total_loss: 2.042  loss_cls: 0.3071  loss_box_reg: 0.41  loss_mask: 0.4716  loss_rpn_cls: 0.3021  loss_rpn_loc: 0.5449  time: 3.3363  data_time: 0.0054  lr: 0.0017982  max_mem: 0M
[32m[11/16 07:01:28 d2.utils.events]: [0m eta: 9:00:45  iter: 199  total_loss: 1.866  loss_cls: 0.255  loss_box_reg: 0.4528  loss_mask: 0.4219  loss_rpn_cls: 0.2973  loss_rpn_loc: 0.5191  time: 3.3367  data_time: 0.0051  lr: 0.001998  max_mem: 0M
[32m[11/16 07:02:38 d2.utils.events]: [0m eta: 9:03:05  iter: 219  total_loss: 1.868  loss_cls: 0.2608  loss_box_reg: 0.4574  loss_mask: 0.3993  loss_rpn_cls: 0.2913  loss_rpn_loc: 0.504  time: 3.3515  data_time: 0.0072  lr: 0.0021978  max_mem: 0M
[32m[11/16 07:03:50 d2.utils.events]: [0m eta: 9:07:21  iter: 239  total_loss: 1.827  loss_cls: 0.2667  loss_box_reg: 0.4414  loss_mask: 0.3697  loss_rpn_cls: 0.2751  loss_rpn_loc: 0.4604  time: 3.3711  data_time: 0.0038  lr: 0.0023976  max_mem: 0M
[32m[11/16 07:05:02 d2.utils.events]: [0m eta: 9:07:42  iter: 259  total_loss: 1.825  loss_cls: 0.2823  loss_box_reg: 0.4707  loss_mask: 0.3577  loss_rpn_cls: 0.2574  loss_rpn_loc: 0.4519  time: 3.3868  data_time: 0.0051  lr: 0.0025974  max_mem: 0M
[32m[11/16 07:06:14 d2.utils.events]: [0m eta: 9:12:42  iter: 279  total_loss: 1.799  loss_cls: 0.2695  loss_box_reg: 0.4843  loss_mask: 0.3397  loss_rpn_cls: 0.2723  loss_rpn_loc: 0.4442  time: 3.4038  data_time: 0.0077  lr: 0.0027972  max_mem: 0M
[32m[11/16 07:07:24 d2.utils.events]: [0m eta: 9:11:34  iter: 299  total_loss: 1.813  loss_cls: 0.269  loss_box_reg: 0.4989  loss_mask: 0.3349  loss_rpn_cls: 0.2508  loss_rpn_loc: 0.46  time: 3.4098  data_time: 0.0039  lr: 0.002997  max_mem: 0M
[32m[11/16 07:08:35 d2.utils.events]: [0m eta: 9:10:26  iter: 319  total_loss: 1.766  loss_cls: 0.2826  loss_box_reg: 0.507  loss_mask: 0.3421  loss_rpn_cls: 0.2532  loss_rpn_loc: 0.4194  time: 3.4177  data_time: 0.0037  lr: 0.0031968  max_mem: 0M
[32m[11/16 07:09:46 d2.utils.events]: [0m eta: 9:11:29  iter: 339  total_loss: 1.778  loss_cls: 0.2738  loss_box_reg: 0.4911  loss_mask: 0.3573  loss_rpn_cls: 0.2417  loss_rpn_loc: 0.4303  time: 3.4276  data_time: 0.0068  lr: 0.0033966  max_mem: 0M
[32m[11/16 07:10:55 d2.utils.events]: [0m eta: 9:09:05  iter: 359  total_loss: 1.742  loss_cls: 0.2447  loss_box_reg: 0.423  loss_mask: 0.3285  loss_rpn_cls: 0.2565  loss_rpn_loc: 0.4916  time: 3.4273  data_time: 0.0030  lr: 0.0035964  max_mem: 0M
[32m[11/16 07:12:07 d2.utils.events]: [0m eta: 9:11:01  iter: 379  total_loss: 1.687  loss_cls: 0.2525  loss_box_reg: 0.4447  loss_mask: 0.3061  loss_rpn_cls: 0.2278  loss_rpn_loc: 0.4186  time: 3.4364  data_time: 0.0052  lr: 0.0037962  max_mem: 0M
[32m[11/16 07:13:19 d2.utils.events]: [0m eta: 9:10:47  iter: 399  total_loss: 1.653  loss_cls: 0.2298  loss_box_reg: 0.5238  loss_mask: 0.3057  loss_rpn_cls: 0.1996  loss_rpn_loc: 0.387  time: 3.4456  data_time: 0.0032  lr: 0.003996  max_mem: 0M
[32m[11/16 07:14:31 d2.utils.events]: [0m eta: 9:10:53  iter: 419  total_loss: 1.63  loss_cls: 0.2634  loss_box_reg: 0.4915  loss_mask: 0.2929  loss_rpn_cls: 0.2598  loss_rpn_loc: 0.4269  time: 3.4530  data_time: 0.0037  lr: 0.0041958  max_mem: 0M
[32m[11/16 07:15:42 d2.utils.events]: [0m eta: 9:10:02  iter: 439  total_loss: 1.684  loss_cls: 0.2697  loss_box_reg: 0.4734  loss_mask: 0.301  loss_rpn_cls: 0.2266  loss_rpn_loc: 0.4339  time: 3.4558  data_time: 0.0047  lr: 0.0043956  max_mem: 0M
[32m[11/16 07:16:55 d2.utils.events]: [0m eta: 9:09:17  iter: 459  total_loss: 1.702  loss_cls: 0.2683  loss_box_reg: 0.4903  loss_mask: 0.3025  loss_rpn_cls: 0.2021  loss_rpn_loc: 0.4237  time: 3.4646  data_time: 0.0051  lr: 0.0045954  max_mem: 0M
[32m[11/16 07:18:07 d2.utils.events]: [0m eta: 9:10:12  iter: 479  total_loss: 1.597  loss_cls: 0.2417  loss_box_reg: 0.4635  loss_mask: 0.2911  loss_rpn_cls: 0.1952  loss_rpn_loc: 0.3923  time: 3.4714  data_time: 0.0052  lr: 0.0047952  max_mem: 0M
[32m[11/16 07:19:21 d2.utils.events]: [0m eta: 9:10:11  iter: 499  total_loss: 1.667  loss_cls: 0.2488  loss_box_reg: 0.5076  loss_mask: 0.3056  loss_rpn_cls: 0.1967  loss_rpn_loc: 0.4093  time: 3.4797  data_time: 0.0047  lr: 0.004995  max_mem: 0M
[32m[11/16 07:20:29 d2.utils.events]: [0m eta: 9:07:54  iter: 519  total_loss: 1.591  loss_cls: 0.2342  loss_box_reg: 0.4902  loss_mask: 0.2885  loss_rpn_cls: 0.1555  loss_rpn_loc: 0.4037  time: 3.4761  data_time: 0.0035  lr: 0.0051948  max_mem: 0M
[32m[11/16 07:21:41 d2.utils.events]: [0m eta: 9:07:52  iter: 539  total_loss: 1.631  loss_cls: 0.2378  loss_box_reg: 0.4738  loss_mask: 0.287  loss_rpn_cls: 0.1756  loss_rpn_loc: 0.4265  time: 3.4804  data_time: 0.0030  lr: 0.0053946  max_mem: 0M
[32m[11/16 07:22:48 d2.utils.events]: [0m eta: 9:04:40  iter: 559  total_loss: 1.536  loss_cls: 0.2098  loss_box_reg: 0.3757  loss_mask: 0.2775  loss_rpn_cls: 0.2049  loss_rpn_loc: 0.4533  time: 3.4771  data_time: 0.0033  lr: 0.0055944  max_mem: 0M
[32m[11/16 07:23:59 d2.utils.events]: [0m eta: 9:04:26  iter: 579  total_loss: 1.581  loss_cls: 0.2461  loss_box_reg: 0.435  loss_mask: 0.2684  loss_rpn_cls: 0.1871  loss_rpn_loc: 0.4568  time: 3.4782  data_time: 0.0040  lr: 0.0057942  max_mem: 0M
[32m[11/16 07:25:08 d2.utils.events]: [0m eta: 9:02:04  iter: 599  total_loss: 1.646  loss_cls: 0.2561  loss_box_reg: 0.4614  loss_mask: 0.2875  loss_rpn_cls: 0.1975  loss_rpn_loc: 0.4361  time: 3.4776  data_time: 0.0056  lr: 0.005994  max_mem: 0M
[32m[11/16 07:26:19 d2.utils.events]: [0m eta: 9:00:55  iter: 619  total_loss: 1.615  loss_cls: 0.257  loss_box_reg: 0.492  loss_mask: 0.2582  loss_rpn_cls: 0.2011  loss_rpn_loc: 0.3929  time: 3.4798  data_time: 0.0045  lr: 0.0061938  max_mem: 0M
[32m[11/16 07:27:29 d2.utils.events]: [0m eta: 9:00:03  iter: 639  total_loss: 1.682  loss_cls: 0.28  loss_box_reg: 0.5297  loss_mask: 0.2676  loss_rpn_cls: 0.168  loss_rpn_loc: 0.4147  time: 3.4814  data_time: 0.0058  lr: 0.0063936  max_mem: 0M
[32m[11/16 07:28:42 d2.utils.events]: [0m eta: 8:59:48  iter: 659  total_loss: 1.659  loss_cls: 0.242  loss_box_reg: 0.4904  loss_mask: 0.2487  loss_rpn_cls: 0.2067  loss_rpn_loc: 0.4106  time: 3.4856  data_time: 0.0033  lr: 0.0065934  max_mem: 0M
[32m[11/16 07:29:55 d2.utils.events]: [0m eta: 9:00:19  iter: 679  total_loss: 1.571  loss_cls: 0.24  loss_box_reg: 0.4758  loss_mask: 0.2616  loss_rpn_cls: 0.202  loss_rpn_loc: 0.4344  time: 3.4911  data_time: 0.0070  lr: 0.0067932  max_mem: 0M
[32m[11/16 07:31:06 d2.utils.events]: [0m eta: 8:59:10  iter: 699  total_loss: 1.571  loss_cls: 0.2308  loss_box_reg: 0.4333  loss_mask: 0.2613  loss_rpn_cls: 0.1918  loss_rpn_loc: 0.4281  time: 3.4926  data_time: 0.0035  lr: 0.006993  max_mem: 0M
[32m[11/16 07:32:15 d2.utils.events]: [0m eta: 8:57:50  iter: 719  total_loss: 1.499  loss_cls: 0.2347  loss_box_reg: 0.4698  loss_mask: 0.2681  loss_rpn_cls: 0.1777  loss_rpn_loc: 0.3798  time: 3.4914  data_time: 0.0047  lr: 0.0071928  max_mem: 0M
[32m[11/16 07:33:25 d2.utils.events]: [0m eta: 8:56:41  iter: 739  total_loss: 1.507  loss_cls: 0.2248  loss_box_reg: 0.4557  loss_mask: 0.2553  loss_rpn_cls: 0.1541  loss_rpn_loc: 0.3826  time: 3.4912  data_time: 0.0050  lr: 0.0073926  max_mem: 0M
[32m[11/16 07:34:33 d2.utils.events]: [0m eta: 8:55:07  iter: 759  total_loss: 1.451  loss_cls: 0.1955  loss_box_reg: 0.4064  loss_mask: 0.2456  loss_rpn_cls: 0.1605  loss_rpn_loc: 0.3901  time: 3.4889  data_time: 0.0066  lr: 0.0075924  max_mem: 0M
[32m[11/16 07:35:44 d2.utils.events]: [0m eta: 8:54:52  iter: 779  total_loss: 1.528  loss_cls: 0.2157  loss_box_reg: 0.472  loss_mask: 0.2621  loss_rpn_cls: 0.1963  loss_rpn_loc: 0.391  time: 3.4907  data_time: 0.0042  lr: 0.0077922  max_mem: 0M
[32m[11/16 07:36:55 d2.utils.events]: [0m eta: 8:53:43  iter: 799  total_loss: 1.465  loss_cls: 0.2272  loss_box_reg: 0.4647  loss_mask: 0.2489  loss_rpn_cls: 0.1712  loss_rpn_loc: 0.391  time: 3.4912  data_time: 0.0039  lr: 0.007992  max_mem: 0M
[32m[11/16 07:38:05 d2.utils.events]: [0m eta: 8:53:12  iter: 819  total_loss: 1.543  loss_cls: 0.2462  loss_box_reg: 0.5004  loss_mask: 0.2326  loss_rpn_cls: 0.1739  loss_rpn_loc: 0.39  time: 3.4912  data_time: 0.0066  lr: 0.0081918  max_mem: 0M
[32m[11/16 07:39:19 d2.utils.events]: [0m eta: 8:52:46  iter: 839  total_loss: 1.504  loss_cls: 0.2421  loss_box_reg: 0.4641  loss_mask: 0.2366  loss_rpn_cls: 0.1434  loss_rpn_loc: 0.4223  time: 3.4964  data_time: 0.0039  lr: 0.0083916  max_mem: 0M
[32m[11/16 07:40:30 d2.utils.events]: [0m eta: 8:51:47  iter: 859  total_loss: 1.617  loss_cls: 0.2619  loss_box_reg: 0.4775  loss_mask: 0.2542  loss_rpn_cls: 0.1783  loss_rpn_loc: 0.4163  time: 3.4983  data_time: 0.0032  lr: 0.0085914  max_mem: 0M
[32m[11/16 07:41:42 d2.utils.events]: [0m eta: 8:50:33  iter: 879  total_loss: 1.514  loss_cls: 0.2553  loss_box_reg: 0.4761  loss_mask: 0.244  loss_rpn_cls: 0.1567  loss_rpn_loc: 0.3657  time: 3.5000  data_time: 0.0033  lr: 0.0087912  max_mem: 0M
[32m[11/16 07:42:50 d2.utils.events]: [0m eta: 8:48:44  iter: 899  total_loss: 1.492  loss_cls: 0.2118  loss_box_reg: 0.4766  loss_mask: 0.2649  loss_rpn_cls: 0.1805  loss_rpn_loc: 0.408  time: 3.4981  data_time: 0.0032  lr: 0.008991  max_mem: 0M
[32m[11/16 07:44:04 d2.utils.events]: [0m eta: 8:48:18  iter: 919  total_loss: 1.397  loss_cls: 0.199  loss_box_reg: 0.3803  loss_mask: 0.25  loss_rpn_cls: 0.1453  loss_rpn_loc: 0.3772  time: 3.5029  data_time: 0.0033  lr: 0.0091908  max_mem: 0M
[32m[11/16 07:45:12 d2.utils.events]: [0m eta: 8:46:57  iter: 939  total_loss: 1.307  loss_cls: 0.1422  loss_box_reg: 0.3201  loss_mask: 0.2464  loss_rpn_cls: 0.1624  loss_rpn_loc: 0.4382  time: 3.4999  data_time: 0.0068  lr: 0.0093906  max_mem: 0M
[32m[11/16 07:46:22 d2.utils.events]: [0m eta: 8:45:37  iter: 959  total_loss: 1.446  loss_cls: 0.2056  loss_box_reg: 0.4247  loss_mask: 0.2494  loss_rpn_cls: 0.1555  loss_rpn_loc: 0.4163  time: 3.5002  data_time: 0.0039  lr: 0.0095904  max_mem: 0M
[32m[11/16 07:47:35 d2.utils.events]: [0m eta: 8:44:44  iter: 979  total_loss: 1.406  loss_cls: 0.201  loss_box_reg: 0.4613  loss_mask: 0.235  loss_rpn_cls: 0.1708  loss_rpn_loc: 0.3722  time: 3.5032  data_time: 0.0034  lr: 0.0097902  max_mem: 0M
[32m[11/16 07:48:50 d2.utils.events]: [0m eta: 8:44:02  iter: 999  total_loss: 1.512  loss_cls: 0.2474  loss_box_reg: 0.4572  loss_mask: 0.2466  loss_rpn_cls: 0.1536  loss_rpn_loc: 0.3712  time: 3.5077  data_time: 0.0043  lr: 0.00999  max_mem: 0M
[32m[11/16 07:50:04 d2.utils.events]: [0m eta: 8:43:06  iter: 1019  total_loss: 1.457  loss_cls: 0.2287  loss_box_reg: 0.4788  loss_mask: 0.22  loss_rpn_cls: 0.1479  loss_rpn_loc: 0.3863  time: 3.5120  data_time: 0.0044  lr: 0.01  max_mem: 0M
[32m[11/16 07:51:14 d2.utils.events]: [0m eta: 8:42:26  iter: 1039  total_loss: 1.434  loss_cls: 0.2182  loss_box_reg: 0.4186  loss_mask: 0.2342  loss_rpn_cls: 0.1506  loss_rpn_loc: 0.3807  time: 3.5119  data_time: 0.0085  lr: 0.01  max_mem: 0M
[32m[11/16 07:52:24 d2.utils.events]: [0m eta: 8:42:23  iter: 1059  total_loss: 1.448  loss_cls: 0.2161  loss_box_reg: 0.4374  loss_mask: 0.2344  loss_rpn_cls: 0.1623  loss_rpn_loc: 0.3821  time: 3.5114  data_time: 0.0026  lr: 0.01  max_mem: 0M
[32m[11/16 07:53:37 d2.utils.events]: [0m eta: 8:42:18  iter: 1079  total_loss: 1.472  loss_cls: 0.2215  loss_box_reg: 0.4484  loss_mask: 0.236  loss_rpn_cls: 0.1972  loss_rpn_loc: 0.3419  time: 3.5136  data_time: 0.0034  lr: 0.01  max_mem: 0M
[32m[11/16 07:54:47 d2.utils.events]: [0m eta: 8:41:53  iter: 1099  total_loss: 1.429  loss_cls: 0.2291  loss_box_reg: 0.4268  loss_mask: 0.2215  loss_rpn_cls: 0.1429  loss_rpn_loc: 0.3749  time: 3.5136  data_time: 0.0038  lr: 0.01  max_mem: 0M
[32m[11/16 07:55:58 d2.utils.events]: [0m eta: 8:41:42  iter: 1119  total_loss: 1.419  loss_cls: 0.2104  loss_box_reg: 0.4283  loss_mask: 0.226  loss_rpn_cls: 0.1769  loss_rpn_loc: 0.3829  time: 3.5143  data_time: 0.0036  lr: 0.01  max_mem: 0M
[32m[11/16 07:57:13 d2.utils.events]: [0m eta: 8:42:36  iter: 1139  total_loss: 1.419  loss_cls: 0.2194  loss_box_reg: 0.4581  loss_mask: 0.2309  loss_rpn_cls: 0.1384  loss_rpn_loc: 0.4048  time: 3.5184  data_time: 0.0050  lr: 0.01  max_mem: 0M
[32m[11/16 07:58:29 d2.utils.events]: [0m eta: 8:41:25  iter: 1159  total_loss: 1.413  loss_cls: 0.1996  loss_box_reg: 0.4328  loss_mask: 0.2325  loss_rpn_cls: 0.1796  loss_rpn_loc: 0.4012  time: 3.5230  data_time: 0.0032  lr: 0.01  max_mem: 0M
[32m[11/16 07:59:44 d2.utils.events]: [0m eta: 8:40:57  iter: 1179  total_loss: 1.341  loss_cls: 0.188  loss_box_reg: 0.393  loss_mask: 0.2251  loss_rpn_cls: 0.1268  loss_rpn_loc: 0.3546  time: 3.5270  data_time: 0.0044  lr: 0.01  max_mem: 0M
[32m[11/16 08:00:55 d2.utils.events]: [0m eta: 8:39:52  iter: 1199  total_loss: 1.424  loss_cls: 0.1981  loss_box_reg: 0.441  loss_mask: 0.2172  loss_rpn_cls: 0.1891  loss_rpn_loc: 0.3654  time: 3.5270  data_time: 0.0064  lr: 0.01  max_mem: 0M
[32m[11/16 08:02:06 d2.utils.events]: [0m eta: 8:38:35  iter: 1219  total_loss: 1.334  loss_cls: 0.1935  loss_box_reg: 0.3844  loss_mask: 0.2086  loss_rpn_cls: 0.1399  loss_rpn_loc: 0.3612  time: 3.5275  data_time: 0.0046  lr: 0.01  max_mem: 0M
[32m[11/16 08:03:18 d2.utils.events]: [0m eta: 8:37:14  iter: 1239  total_loss: 1.365  loss_cls: 0.1848  loss_box_reg: 0.375  loss_mask: 0.2264  loss_rpn_cls: 0.1461  loss_rpn_loc: 0.4269  time: 3.5287  data_time: 0.0061  lr: 0.01  max_mem: 0M
[32m[11/16 08:04:33 d2.utils.events]: [0m eta: 8:36:20  iter: 1259  total_loss: 1.398  loss_cls: 0.1946  loss_box_reg: 0.411  loss_mask: 0.2196  loss_rpn_cls: 0.145  loss_rpn_loc: 0.3677  time: 3.5323  data_time: 0.0068  lr: 0.01  max_mem: 0M
[32m[11/16 08:05:50 d2.utils.events]: [0m eta: 8:35:14  iter: 1279  total_loss: 1.348  loss_cls: 0.1931  loss_box_reg: 0.4341  loss_mask: 0.2176  loss_rpn_cls: 0.124  loss_rpn_loc: 0.346  time: 3.5374  data_time: 0.0046  lr: 0.01  max_mem: 0M
[32m[11/16 08:07:03 d2.utils.events]: [0m eta: 8:34:39  iter: 1299  total_loss: 1.4  loss_cls: 0.2005  loss_box_reg: 0.4409  loss_mask: 0.2144  loss_rpn_cls: 0.1669  loss_rpn_loc: 0.381  time: 3.5393  data_time: 0.0028  lr: 0.01  max_mem: 0M
[32m[11/16 08:08:18 d2.utils.events]: [0m eta: 8:34:42  iter: 1319  total_loss: 1.416  loss_cls: 0.2238  loss_box_reg: 0.4277  loss_mask: 0.2127  loss_rpn_cls: 0.1428  loss_rpn_loc: 0.3819  time: 3.5419  data_time: 0.0033  lr: 0.01  max_mem: 0M
[32m[11/16 08:09:35 d2.utils.events]: [0m eta: 8:34:01  iter: 1339  total_loss: 1.38  loss_cls: 0.2306  loss_box_reg: 0.4461  loss_mask: 0.2352  loss_rpn_cls: 0.1236  loss_rpn_loc: 0.3439  time: 3.5464  data_time: 0.0032  lr: 0.01  max_mem: 0M
[32m[11/16 08:10:47 d2.utils.events]: [0m eta: 8:33:12  iter: 1359  total_loss: 1.357  loss_cls: 0.2407  loss_box_reg: 0.4482  loss_mask: 0.2128  loss_rpn_cls: 0.1398  loss_rpn_loc: 0.3673  time: 3.5474  data_time: 0.0048  lr: 0.01  max_mem: 0M
[32m[11/16 08:12:03 d2.utils.events]: [0m eta: 8:32:11  iter: 1379  total_loss: 1.312  loss_cls: 0.1982  loss_box_reg: 0.4127  loss_mask: 0.2212  loss_rpn_cls: 0.1147  loss_rpn_loc: 0.326  time: 3.5513  data_time: 0.0046  lr: 0.01  max_mem: 0M
[32m[11/16 08:13:19 d2.utils.events]: [0m eta: 8:31:40  iter: 1399  total_loss: 1.308  loss_cls: 0.2047  loss_box_reg: 0.435  loss_mask: 0.2156  loss_rpn_cls: 0.128  loss_rpn_loc: 0.3661  time: 3.5545  data_time: 0.0038  lr: 0.01  max_mem: 0M
[32m[11/16 08:14:32 d2.utils.events]: [0m eta: 8:30:39  iter: 1419  total_loss: 1.321  loss_cls: 0.2108  loss_box_reg: 0.4266  loss_mask: 0.2114  loss_rpn_cls: 0.1154  loss_rpn_loc: 0.3311  time: 3.5560  data_time: 0.0086  lr: 0.01  max_mem: 0M
[32m[11/16 08:15:46 d2.utils.events]: [0m eta: 8:29:32  iter: 1439  total_loss: 1.255  loss_cls: 0.1957  loss_box_reg: 0.442  loss_mask: 0.2108  loss_rpn_cls: 0.1371  loss_rpn_loc: 0.3129  time: 3.5580  data_time: 0.0044  lr: 0.01  max_mem: 0M
[32m[11/16 08:17:02 d2.utils.events]: [0m eta: 8:28:58  iter: 1459  total_loss: 1.34  loss_cls: 0.2019  loss_box_reg: 0.4398  loss_mask: 0.2123  loss_rpn_cls: 0.1266  loss_rpn_loc: 0.342  time: 3.5612  data_time: 0.0045  lr: 0.01  max_mem: 0M
[32m[11/16 08:18:15 d2.utils.events]: [0m eta: 8:27:30  iter: 1479  total_loss: 1.311  loss_cls: 0.2046  loss_box_reg: 0.4112  loss_mask: 0.2025  loss_rpn_cls: 0.1094  loss_rpn_loc: 0.3503  time: 3.5623  data_time: 0.0047  lr: 0.01  max_mem: 0M
[32m[11/16 08:19:29 d2.utils.events]: [0m eta: 8:26:18  iter: 1499  total_loss: 1.337  loss_cls: 0.2087  loss_box_reg: 0.4357  loss_mask: 0.2084  loss_rpn_cls: 0.1226  loss_rpn_loc: 0.3465  time: 3.5643  data_time: 0.0038  lr: 0.01  max_mem: 0M
[32m[11/16 08:20:44 d2.utils.events]: [0m eta: 8:27:12  iter: 1519  total_loss: 1.277  loss_cls: 0.1652  loss_box_reg: 0.405  loss_mask: 0.2153  loss_rpn_cls: 0.1161  loss_rpn_loc: 0.3334  time: 3.5664  data_time: 0.0075  lr: 0.01  max_mem: 0M
[32m[11/16 08:22:00 d2.utils.events]: [0m eta: 8:26:25  iter: 1539  total_loss: 1.306  loss_cls: 0.2167  loss_box_reg: 0.4274  loss_mask: 0.2093  loss_rpn_cls: 0.1017  loss_rpn_loc: 0.3283  time: 3.5696  data_time: 0.0038  lr: 0.01  max_mem: 0M
[32m[11/16 08:23:16 d2.utils.events]: [0m eta: 8:26:06  iter: 1559  total_loss: 1.221  loss_cls: 0.191  loss_box_reg: 0.3963  loss_mask: 0.2055  loss_rpn_cls: 0.1155  loss_rpn_loc: 0.3246  time: 3.5724  data_time: 0.0038  lr: 0.01  max_mem: 0M
[32m[11/16 08:24:33 d2.utils.events]: [0m eta: 8:25:09  iter: 1579  total_loss: 1.234  loss_cls: 0.1814  loss_box_reg: 0.4119  loss_mask: 0.204  loss_rpn_cls: 0.1249  loss_rpn_loc: 0.3241  time: 3.5759  data_time: 0.0057  lr: 0.01  max_mem: 0M
[32m[11/16 08:25:45 d2.utils.events]: [0m eta: 8:25:11  iter: 1599  total_loss: 1.251  loss_cls: 0.1782  loss_box_reg: 0.4327  loss_mask: 0.2069  loss_rpn_cls: 0.1212  loss_rpn_loc: 0.3149  time: 3.5765  data_time: 0.0059  lr: 0.01  max_mem: 0M
[32m[11/16 08:27:03 d2.utils.events]: [0m eta: 8:24:55  iter: 1619  total_loss: 1.268  loss_cls: 0.2015  loss_box_reg: 0.4289  loss_mask: 0.1948  loss_rpn_cls: 0.1073  loss_rpn_loc: 0.3131  time: 3.5802  data_time: 0.0022  lr: 0.01  max_mem: 0M
[32m[11/16 08:28:18 d2.utils.events]: [0m eta: 8:25:01  iter: 1639  total_loss: 1.25  loss_cls: 0.2042  loss_box_reg: 0.414  loss_mask: 0.2058  loss_rpn_cls: 0.1241  loss_rpn_loc: 0.3185  time: 3.5824  data_time: 0.0048  lr: 0.01  max_mem: 0M
[32m[11/16 08:29:31 d2.utils.events]: [0m eta: 8:24:00  iter: 1659  total_loss: 1.355  loss_cls: 0.2018  loss_box_reg: 0.4226  loss_mask: 0.2088  loss_rpn_cls: 0.1447  loss_rpn_loc: 0.3582  time: 3.5834  data_time: 0.0045  lr: 0.01  max_mem: 0M
[32m[11/16 08:30:46 d2.utils.events]: [0m eta: 8:22:58  iter: 1679  total_loss: 1.277  loss_cls: 0.2053  loss_box_reg: 0.431  loss_mask: 0.1994  loss_rpn_cls: 0.1246  loss_rpn_loc: 0.3465  time: 3.5854  data_time: 0.0036  lr: 0.01  max_mem: 0M
[32m[11/16 08:31:58 d2.utils.events]: [0m eta: 8:21:57  iter: 1699  total_loss: 1.28  loss_cls: 0.1776  loss_box_reg: 0.4102  loss_mask: 0.2001  loss_rpn_cls: 0.1387  loss_rpn_loc: 0.3211  time: 3.5854  data_time: 0.0054  lr: 0.01  max_mem: 0M
[32m[11/16 08:33:14 d2.utils.events]: [0m eta: 8:21:41  iter: 1719  total_loss: 1.236  loss_cls: 0.1776  loss_box_reg: 0.3913  loss_mask: 0.198  loss_rpn_cls: 0.1293  loss_rpn_loc: 0.3301  time: 3.5876  data_time: 0.0047  lr: 0.01  max_mem: 0M
[32m[11/16 08:34:29 d2.utils.events]: [0m eta: 8:21:08  iter: 1739  total_loss: 1.307  loss_cls: 0.197  loss_box_reg: 0.4212  loss_mask: 0.1955  loss_rpn_cls: 0.1243  loss_rpn_loc: 0.3499  time: 3.5897  data_time: 0.0052  lr: 0.01  max_mem: 0M
[32m[11/16 08:35:44 d2.utils.events]: [0m eta: 8:20:40  iter: 1759  total_loss: 1.293  loss_cls: 0.2106  loss_box_reg: 0.408  loss_mask: 0.205  loss_rpn_cls: 0.1277  loss_rpn_loc: 0.3222  time: 3.5911  data_time: 0.0067  lr: 0.01  max_mem: 0M
[32m[11/16 08:36:57 d2.utils.events]: [0m eta: 8:19:26  iter: 1779  total_loss: 1.343  loss_cls: 0.1885  loss_box_reg: 0.4002  loss_mask: 0.2143  loss_rpn_cls: 0.1531  loss_rpn_loc: 0.3558  time: 3.5919  data_time: 0.0046  lr: 0.01  max_mem: 0M
[32m[11/16 08:38:12 d2.utils.events]: [0m eta: 8:18:28  iter: 1799  total_loss: 1.317  loss_cls: 0.2127  loss_box_reg: 0.4016  loss_mask: 0.2162  loss_rpn_cls: 0.1418  loss_rpn_loc: 0.3213  time: 3.5937  data_time: 0.0044  lr: 0.01  max_mem: 0M
[32m[11/16 08:39:22 d2.utils.events]: [0m eta: 8:17:23  iter: 1819  total_loss: 1.236  loss_cls: 0.1823  loss_box_reg: 0.4033  loss_mask: 0.2055  loss_rpn_cls: 0.125  loss_rpn_loc: 0.3402  time: 3.5929  data_time: 0.0078  lr: 0.01  max_mem: 0M
[32m[11/16 08:40:36 d2.utils.events]: [0m eta: 8:16:03  iter: 1839  total_loss: 1.236  loss_cls: 0.1935  loss_box_reg: 0.3977  loss_mask: 0.1982  loss_rpn_cls: 0.1525  loss_rpn_loc: 0.3344  time: 3.5938  data_time: 0.0042  lr: 0.01  max_mem: 0M
[32m[11/16 08:41:50 d2.utils.events]: [0m eta: 8:15:15  iter: 1859  total_loss: 1.256  loss_cls: 0.1899  loss_box_reg: 0.4201  loss_mask: 0.2031  loss_rpn_cls: 0.1049  loss_rpn_loc: 0.3404  time: 3.5950  data_time: 0.0035  lr: 0.01  max_mem: 0M
[32m[11/16 08:43:07 d2.utils.events]: [0m eta: 8:15:06  iter: 1879  total_loss: 1.22  loss_cls: 0.1868  loss_box_reg: 0.3924  loss_mask: 0.1983  loss_rpn_cls: 0.103  loss_rpn_loc: 0.326  time: 3.5974  data_time: 0.0040  lr: 0.01  max_mem: 0M
[32m[11/16 08:44:22 d2.utils.events]: [0m eta: 8:15:07  iter: 1899  total_loss: 1.243  loss_cls: 0.1794  loss_box_reg: 0.4262  loss_mask: 0.1995  loss_rpn_cls: 0.1154  loss_rpn_loc: 0.3154  time: 3.5990  data_time: 0.0025  lr: 0.01  max_mem: 0M
[32m[11/16 08:45:35 d2.utils.events]: [0m eta: 8:13:17  iter: 1919  total_loss: 1.223  loss_cls: 0.1831  loss_box_reg: 0.3967  loss_mask: 0.1841  loss_rpn_cls: 0.1136  loss_rpn_loc: 0.3035  time: 3.5996  data_time: 0.0061  lr: 0.01  max_mem: 0M
[32m[11/16 08:46:49 d2.utils.events]: [0m eta: 8:12:57  iter: 1939  total_loss: 1.209  loss_cls: 0.1794  loss_box_reg: 0.4064  loss_mask: 0.2003  loss_rpn_cls: 0.1406  loss_rpn_loc: 0.2822  time: 3.6007  data_time: 0.0038  lr: 0.01  max_mem: 0M
[32m[11/16 08:48:05 d2.utils.events]: [0m eta: 8:12:12  iter: 1959  total_loss: 1.284  loss_cls: 0.197  loss_box_reg: 0.4233  loss_mask: 0.1985  loss_rpn_cls: 0.1125  loss_rpn_loc: 0.3145  time: 3.6031  data_time: 0.0055  lr: 0.01  max_mem: 0M
[32m[11/16 08:49:20 d2.utils.events]: [0m eta: 8:11:01  iter: 1979  total_loss: 1.238  loss_cls: 0.1906  loss_box_reg: 0.4022  loss_mask: 0.2018  loss_rpn_cls: 0.1273  loss_rpn_loc: 0.33  time: 3.6041  data_time: 0.0067  lr: 0.01  max_mem: 0M
[32m[11/16 08:50:34 d2.utils.events]: [0m eta: 8:09:39  iter: 1999  total_loss: 1.185  loss_cls: 0.1931  loss_box_reg: 0.4097  loss_mask: 0.1956  loss_rpn_cls: 0.102  loss_rpn_loc: 0.3066  time: 3.6054  data_time: 0.0065  lr: 0.01  max_mem: 0M
[32m[11/16 08:51:48 d2.utils.events]: [0m eta: 8:08:16  iter: 2019  total_loss: 1.175  loss_cls: 0.1745  loss_box_reg: 0.3605  loss_mask: 0.1853  loss_rpn_cls: 0.1058  loss_rpn_loc: 0.3289  time: 3.6060  data_time: 0.0041  lr: 0.01  max_mem: 0M
[32m[11/16 08:53:04 d2.utils.events]: [0m eta: 8:07:38  iter: 2039  total_loss: 1.112  loss_cls: 0.1522  loss_box_reg: 0.3645  loss_mask: 0.1877  loss_rpn_cls: 0.09557  loss_rpn_loc: 0.3075  time: 3.6079  data_time: 0.0035  lr: 0.01  max_mem: 0M
[32m[11/16 08:54:19 d2.utils.events]: [0m eta: 8:06:45  iter: 2059  total_loss: 1.249  loss_cls: 0.2053  loss_box_reg: 0.4054  loss_mask: 0.1892  loss_rpn_cls: 0.1261  loss_rpn_loc: 0.299  time: 3.6094  data_time: 0.0043  lr: 0.01  max_mem: 0M
[32m[11/16 08:55:34 d2.utils.events]: [0m eta: 8:05:42  iter: 2079  total_loss: 1.236  loss_cls: 0.1885  loss_box_reg: 0.4175  loss_mask: 0.1916  loss_rpn_cls: 0.113  loss_rpn_loc: 0.3056  time: 3.6108  data_time: 0.0036  lr: 0.01  max_mem: 0M
[32m[11/16 08:56:48 d2.utils.events]: [0m eta: 8:04:36  iter: 2099  total_loss: 1.167  loss_cls: 0.1756  loss_box_reg: 0.3949  loss_mask: 0.1818  loss_rpn_cls: 0.1253  loss_rpn_loc: 0.2921  time: 3.6114  data_time: 0.0036  lr: 0.01  max_mem: 0M
[32m[11/16 08:58:04 d2.utils.events]: [0m eta: 8:04:01  iter: 2119  total_loss: 1.15  loss_cls: 0.1628  loss_box_reg: 0.3773  loss_mask: 0.1987  loss_rpn_cls: 0.1035  loss_rpn_loc: 0.298  time: 3.6133  data_time: 0.0037  lr: 0.01  max_mem: 0M
[32m[11/16 08:59:16 d2.utils.events]: [0m eta: 8:02:32  iter: 2139  total_loss: 1.219  loss_cls: 0.1689  loss_box_reg: 0.374  loss_mask: 0.1925  loss_rpn_cls: 0.1181  loss_rpn_loc: 0.3184  time: 3.6133  data_time: 0.0031  lr: 0.01  max_mem: 0M
[32m[11/16 09:00:30 d2.utils.events]: [0m eta: 8:00:48  iter: 2159  total_loss: 1.173  loss_cls: 0.185  loss_box_reg: 0.3972  loss_mask: 0.1901  loss_rpn_cls: 0.116  loss_rpn_loc: 0.2914  time: 3.6139  data_time: 0.0044  lr: 0.01  max_mem: 0M
[32m[11/16 09:01:42 d2.utils.events]: [0m eta: 7:59:07  iter: 2179  total_loss: 1.109  loss_cls: 0.1675  loss_box_reg: 0.3634  loss_mask: 0.1833  loss_rpn_cls: 0.1038  loss_rpn_loc: 0.2752  time: 3.6138  data_time: 0.0034  lr: 0.01  max_mem: 0M
[32m[11/16 09:02:58 d2.utils.events]: [0m eta: 7:58:20  iter: 2199  total_loss: 1.16  loss_cls: 0.1685  loss_box_reg: 0.3916  loss_mask: 0.1841  loss_rpn_cls: 0.126  loss_rpn_loc: 0.2932  time: 3.6155  data_time: 0.0046  lr: 0.01  max_mem: 0M
[32m[11/16 09:04:14 d2.utils.events]: [0m eta: 7:57:53  iter: 2219  total_loss: 1.231  loss_cls: 0.1924  loss_box_reg: 0.3904  loss_mask: 0.1954  loss_rpn_cls: 0.1067  loss_rpn_loc: 0.3042  time: 3.6170  data_time: 0.0036  lr: 0.01  max_mem: 0M
[32m[11/16 09:05:26 d2.utils.events]: [0m eta: 7:56:39  iter: 2239  total_loss: 1.212  loss_cls: 0.1893  loss_box_reg: 0.385  loss_mask: 0.1839  loss_rpn_cls: 0.1112  loss_rpn_loc: 0.3038  time: 3.6172  data_time: 0.0041  lr: 0.01  max_mem: 0M
[32m[11/16 09:06:39 d2.utils.events]: [0m eta: 7:54:41  iter: 2259  total_loss: 1.169  loss_cls: 0.163  loss_box_reg: 0.3727  loss_mask: 0.1893  loss_rpn_cls: 0.09766  loss_rpn_loc: 0.3133  time: 3.6173  data_time: 0.0052  lr: 0.01  max_mem: 0M
[32m[11/16 09:07:54 d2.utils.events]: [0m eta: 7:53:24  iter: 2279  total_loss: 1.123  loss_cls: 0.1813  loss_box_reg: 0.3756  loss_mask: 0.1847  loss_rpn_cls: 0.09246  loss_rpn_loc: 0.2743  time: 3.6184  data_time: 0.0064  lr: 0.01  max_mem: 0M
[32m[11/16 09:09:11 d2.utils.events]: [0m eta: 7:52:42  iter: 2299  total_loss: 1.141  loss_cls: 0.1712  loss_box_reg: 0.3817  loss_mask: 0.182  loss_rpn_cls: 0.09332  loss_rpn_loc: 0.2729  time: 3.6203  data_time: 0.0048  lr: 0.01  max_mem: 0M
[32m[11/16 09:10:25 d2.utils.events]: [0m eta: 7:51:15  iter: 2319  total_loss: 1.092  loss_cls: 0.153  loss_box_reg: 0.3841  loss_mask: 0.1874  loss_rpn_cls: 0.07835  loss_rpn_loc: 0.2896  time: 3.6210  data_time: 0.0046  lr: 0.01  max_mem: 0M
[32m[11/16 09:11:36 d2.utils.events]: [0m eta: 7:49:35  iter: 2339  total_loss: 1.089  loss_cls: 0.1552  loss_box_reg: 0.3687  loss_mask: 0.176  loss_rpn_cls: 0.09524  loss_rpn_loc: 0.2904  time: 3.6207  data_time: 0.0053  lr: 0.01  max_mem: 0M
[32m[11/16 09:12:49 d2.utils.events]: [0m eta: 7:48:30  iter: 2359  total_loss: 1.085  loss_cls: 0.1538  loss_box_reg: 0.3489  loss_mask: 0.182  loss_rpn_cls: 0.1061  loss_rpn_loc: 0.2854  time: 3.6207  data_time: 0.0064  lr: 0.01  max_mem: 0M
[32m[11/16 09:14:07 d2.utils.events]: [0m eta: 7:47:20  iter: 2379  total_loss: 1.109  loss_cls: 0.1696  loss_box_reg: 0.3533  loss_mask: 0.1772  loss_rpn_cls: 0.1064  loss_rpn_loc: 0.2918  time: 3.6232  data_time: 0.0039  lr: 0.01  max_mem: 0M
[32m[11/16 09:15:24 d2.utils.events]: [0m eta: 7:46:12  iter: 2399  total_loss: 1.092  loss_cls: 0.1744  loss_box_reg: 0.3913  loss_mask: 0.1703  loss_rpn_cls: 0.09092  loss_rpn_loc: 0.2955  time: 3.6249  data_time: 0.0027  lr: 0.01  max_mem: 0M
[32m[11/16 09:16:39 d2.utils.events]: [0m eta: 7:45:46  iter: 2419  total_loss: 1.194  loss_cls: 0.1741  loss_box_reg: 0.3681  loss_mask: 0.1863  loss_rpn_cls: 0.1104  loss_rpn_loc: 0.3112  time: 3.6260  data_time: 0.0038  lr: 0.01  max_mem: 0M
[32m[11/16 09:17:54 d2.utils.events]: [0m eta: 7:44:50  iter: 2439  total_loss: 1.174  loss_cls: 0.1761  loss_box_reg: 0.3778  loss_mask: 0.1831  loss_rpn_cls: 0.1322  loss_rpn_loc: 0.3139  time: 3.6268  data_time: 0.0052  lr: 0.01  max_mem: 0M
[32m[11/16 09:19:10 d2.utils.events]: [0m eta: 7:43:36  iter: 2459  total_loss: 1.018  loss_cls: 0.1681  loss_box_reg: 0.3692  loss_mask: 0.1709  loss_rpn_cls: 0.09142  loss_rpn_loc: 0.2747  time: 3.6282  data_time: 0.0059  lr: 0.01  max_mem: 0M
[32m[11/16 09:20:27 d2.utils.events]: [0m eta: 7:43:08  iter: 2479  total_loss: 1.104  loss_cls: 0.1535  loss_box_reg: 0.3793  loss_mask: 0.1881  loss_rpn_cls: 0.08363  loss_rpn_loc: 0.258  time: 3.6300  data_time: 0.0039  lr: 0.01  max_mem: 0M
[32m[11/16 09:21:44 d2.utils.events]: [0m eta: 7:42:30  iter: 2499  total_loss: 1.114  loss_cls: 0.1839  loss_box_reg: 0.3925  loss_mask: 0.1872  loss_rpn_cls: 0.07226  loss_rpn_loc: 0.2595  time: 3.6318  data_time: 0.0040  lr: 0.01  max_mem: 0M
[32m[11/16 09:22:58 d2.utils.events]: [0m eta: 7:41:16  iter: 2519  total_loss: 1.097  loss_cls: 0.1639  loss_box_reg: 0.3763  loss_mask: 0.1713  loss_rpn_cls: 0.08977  loss_rpn_loc: 0.2765  time: 3.6324  data_time: 0.0041  lr: 0.01  max_mem: 0M
[32m[11/16 09:24:10 d2.utils.events]: [0m eta: 7:39:26  iter: 2539  total_loss: 1.071  loss_cls: 0.1543  loss_box_reg: 0.3527  loss_mask: 0.1727  loss_rpn_cls: 0.09335  loss_rpn_loc: 0.2771  time: 3.6321  data_time: 0.0030  lr: 0.01  max_mem: 0M
[32m[11/16 09:25:24 d2.utils.events]: [0m eta: 7:38:04  iter: 2559  total_loss: 1.163  loss_cls: 0.1598  loss_box_reg: 0.3766  loss_mask: 0.1856  loss_rpn_cls: 0.1249  loss_rpn_loc: 0.338  time: 3.6325  data_time: 0.0058  lr: 0.01  max_mem: 0M
[32m[11/16 09:26:38 d2.utils.events]: [0m eta: 7:35:56  iter: 2579  total_loss: 1.146  loss_cls: 0.1668  loss_box_reg: 0.3763  loss_mask: 0.1733  loss_rpn_cls: 0.09787  loss_rpn_loc: 0.3117  time: 3.6332  data_time: 0.0069  lr: 0.01  max_mem: 0M
[32m[11/16 09:27:57 d2.utils.events]: [0m eta: 7:35:10  iter: 2599  total_loss: 1.128  loss_cls: 0.1692  loss_box_reg: 0.4091  loss_mask: 0.1833  loss_rpn_cls: 0.09403  loss_rpn_loc: 0.2851  time: 3.6356  data_time: 0.0032  lr: 0.01  max_mem: 0M
[32m[11/16 09:29:12 d2.utils.events]: [0m eta: 7:33:18  iter: 2619  total_loss: 1.084  loss_cls: 0.1468  loss_box_reg: 0.3618  loss_mask: 0.1767  loss_rpn_cls: 0.1153  loss_rpn_loc: 0.2867  time: 3.6365  data_time: 0.0064  lr: 0.01  max_mem: 0M
[32m[11/16 09:30:27 d2.utils.events]: [0m eta: 7:32:05  iter: 2639  total_loss: 1.126  loss_cls: 0.1693  loss_box_reg: 0.352  loss_mask: 0.1797  loss_rpn_cls: 0.09143  loss_rpn_loc: 0.3266  time: 3.6372  data_time: 0.0039  lr: 0.01  max_mem: 0M
[32m[11/16 09:31:43 d2.utils.events]: [0m eta: 7:31:12  iter: 2659  total_loss: 1.06  loss_cls: 0.1494  loss_box_reg: 0.3502  loss_mask: 0.1726  loss_rpn_cls: 0.09515  loss_rpn_loc: 0.2839  time: 3.6385  data_time: 0.0042  lr: 0.01  max_mem: 0M
[32m[11/16 09:32:59 d2.utils.events]: [0m eta: 7:29:58  iter: 2679  total_loss: 1.087  loss_cls: 0.177  loss_box_reg: 0.376  loss_mask: 0.1773  loss_rpn_cls: 0.09899  loss_rpn_loc: 0.2551  time: 3.6397  data_time: 0.0033  lr: 0.01  max_mem: 0M
[32m[11/16 09:34:15 d2.utils.events]: [0m eta: 7:29:45  iter: 2699  total_loss: 1.093  loss_cls: 0.1725  loss_box_reg: 0.3592  loss_mask: 0.176  loss_rpn_cls: 0.08581  loss_rpn_loc: 0.2739  time: 3.6408  data_time: 0.0063  lr: 0.01  max_mem: 0M
[32m[11/16 09:35:27 d2.utils.events]: [0m eta: 7:27:59  iter: 2719  total_loss: 1.078  loss_cls: 0.1721  loss_box_reg: 0.3731  loss_mask: 0.1757  loss_rpn_cls: 0.06542  loss_rpn_loc: 0.2747  time: 3.6406  data_time: 0.0035  lr: 0.01  max_mem: 0M
[32m[11/16 09:36:39 d2.utils.events]: [0m eta: 7:26:13  iter: 2739  total_loss: 1.054  loss_cls: 0.1453  loss_box_reg: 0.3583  loss_mask: 0.1699  loss_rpn_cls: 0.09407  loss_rpn_loc: 0.2771  time: 3.6404  data_time: 0.0094  lr: 0.01  max_mem: 0M
[32m[11/16 09:37:59 d2.utils.events]: [0m eta: 7:25:33  iter: 2759  total_loss: 1.054  loss_cls: 0.1469  loss_box_reg: 0.3497  loss_mask: 0.1735  loss_rpn_cls: 0.08736  loss_rpn_loc: 0.2731  time: 3.6430  data_time: 0.0057  lr: 0.01  max_mem: 0M
[32m[11/16 09:39:15 d2.utils.events]: [0m eta: 7:24:49  iter: 2779  total_loss: 1.036  loss_cls: 0.1572  loss_box_reg: 0.3588  loss_mask: 0.1753  loss_rpn_cls: 0.07829  loss_rpn_loc: 0.2635  time: 3.6439  data_time: 0.0035  lr: 0.01  max_mem: 0M
[32m[11/16 09:40:28 d2.utils.events]: [0m eta: 7:23:17  iter: 2799  total_loss: 1.06  loss_cls: 0.1525  loss_box_reg: 0.352  loss_mask: 0.1862  loss_rpn_cls: 0.08222  loss_rpn_loc: 0.2733  time: 3.6441  data_time: 0.0054  lr: 0.01  max_mem: 0M
[32m[11/16 09:41:42 d2.utils.events]: [0m eta: 7:23:03  iter: 2819  total_loss: 1.045  loss_cls: 0.1518  loss_box_reg: 0.3416  loss_mask: 0.1789  loss_rpn_cls: 0.0879  loss_rpn_loc: 0.2706  time: 3.6444  data_time: 0.0066  lr: 0.01  max_mem: 0M
[32m[11/16 09:43:00 d2.utils.events]: [0m eta: 7:21:49  iter: 2839  total_loss: 1.057  loss_cls: 0.1683  loss_box_reg: 0.3636  loss_mask: 0.1625  loss_rpn_cls: 0.07213  loss_rpn_loc: 0.2824  time: 3.6462  data_time: 0.0056  lr: 0.01  max_mem: 0M
[32m[11/16 09:44:14 d2.utils.events]: [0m eta: 7:20:35  iter: 2859  total_loss: 1.057  loss_cls: 0.1454  loss_box_reg: 0.3493  loss_mask: 0.1738  loss_rpn_cls: 0.09383  loss_rpn_loc: 0.2642  time: 3.6467  data_time: 0.0069  lr: 0.01  max_mem: 0M
[32m[11/16 09:45:27 d2.utils.events]: [0m eta: 7:19:13  iter: 2879  total_loss: 0.9585  loss_cls: 0.1393  loss_box_reg: 0.3273  loss_mask: 0.168  loss_rpn_cls: 0.0952  loss_rpn_loc: 0.2643  time: 3.6465  data_time: 0.0037  lr: 0.01  max_mem: 0M
[32m[11/16 09:46:41 d2.utils.events]: [0m eta: 7:17:08  iter: 2899  total_loss: 0.9939  loss_cls: 0.1524  loss_box_reg: 0.3448  loss_mask: 0.1687  loss_rpn_cls: 0.07461  loss_rpn_loc: 0.2543  time: 3.6470  data_time: 0.0048  lr: 0.01  max_mem: 0M
[32m[11/16 09:47:57 d2.utils.events]: [0m eta: 7:16:10  iter: 2919  total_loss: 0.9889  loss_cls: 0.1555  loss_box_reg: 0.3421  loss_mask: 0.1691  loss_rpn_cls: 0.07163  loss_rpn_loc: 0.2581  time: 3.6478  data_time: 0.0046  lr: 0.01  max_mem: 0M
[32m[11/16 09:49:12 d2.utils.events]: [0m eta: 7:15:22  iter: 2939  total_loss: 1.07  loss_cls: 0.1709  loss_box_reg: 0.3697  loss_mask: 0.175  loss_rpn_cls: 0.08357  loss_rpn_loc: 0.2601  time: 3.6486  data_time: 0.0044  lr: 0.01  max_mem: 0M
[32m[11/16 09:50:24 d2.utils.events]: [0m eta: 7:12:56  iter: 2959  total_loss: 1.057  loss_cls: 0.1503  loss_box_reg: 0.3643  loss_mask: 0.1822  loss_rpn_cls: 0.07708  loss_rpn_loc: 0.2597  time: 3.6482  data_time: 0.0058  lr: 0.01  max_mem: 0M
[32m[11/16 09:51:41 d2.utils.events]: [0m eta: 7:12:54  iter: 2979  total_loss: 0.9794  loss_cls: 0.1362  loss_box_reg: 0.344  loss_mask: 0.1738  loss_rpn_cls: 0.07217  loss_rpn_loc: 0.244  time: 3.6496  data_time: 0.0046  lr: 0.01  max_mem: 0M
[32m[11/16 09:52:59 d2.utils.events]: [0m eta: 7:11:55  iter: 2999  total_loss: 1.001  loss_cls: 0.1419  loss_box_reg: 0.3421  loss_mask: 0.1658  loss_rpn_cls: 0.07027  loss_rpn_loc: 0.2441  time: 3.6513  data_time: 0.0042  lr: 0.01  max_mem: 0M
[32m[11/16 09:54:16 d2.utils.events]: [0m eta: 7:11:07  iter: 3019  total_loss: 1.008  loss_cls: 0.1316  loss_box_reg: 0.3445  loss_mask: 0.17  loss_rpn_cls: 0.07984  loss_rpn_loc: 0.2571  time: 3.6524  data_time: 0.0063  lr: 0.01  max_mem: 0M
[32m[11/16 09:55:31 d2.utils.events]: [0m eta: 7:09:52  iter: 3039  total_loss: 1.058  loss_cls: 0.1556  loss_box_reg: 0.3374  loss_mask: 0.1653  loss_rpn_cls: 0.08791  loss_rpn_loc: 0.2712  time: 3.6533  data_time: 0.0058  lr: 0.01  max_mem: 0M
[32m[11/16 09:56:46 d2.utils.events]: [0m eta: 7:08:44  iter: 3059  total_loss: 1.076  loss_cls: 0.1474  loss_box_reg: 0.3439  loss_mask: 0.1718  loss_rpn_cls: 0.1126  loss_rpn_loc: 0.2972  time: 3.6540  data_time: 0.0036  lr: 0.01  max_mem: 0M
[32m[11/16 09:58:00 d2.utils.events]: [0m eta: 7:07:21  iter: 3079  total_loss: 1.102  loss_cls: 0.1739  loss_box_reg: 0.3668  loss_mask: 0.1741  loss_rpn_cls: 0.09334  loss_rpn_loc: 0.2787  time: 3.6543  data_time: 0.0060  lr: 0.01  max_mem: 0M
[32m[11/16 09:59:15 d2.utils.events]: [0m eta: 7:06:25  iter: 3099  total_loss: 1.008  loss_cls: 0.1631  loss_box_reg: 0.3401  loss_mask: 0.1713  loss_rpn_cls: 0.07056  loss_rpn_loc: 0.2427  time: 3.6547  data_time: 0.0057  lr: 0.01  max_mem: 0M
[32m[11/16 10:00:29 d2.utils.events]: [0m eta: 7:05:09  iter: 3119  total_loss: 1.034  loss_cls: 0.1306  loss_box_reg: 0.351  loss_mask: 0.1724  loss_rpn_cls: 0.09333  loss_rpn_loc: 0.2595  time: 3.6551  data_time: 0.0039  lr: 0.01  max_mem: 0M
[32m[11/16 10:01:42 d2.utils.events]: [0m eta: 7:03:56  iter: 3139  total_loss: 1.064  loss_cls: 0.1408  loss_box_reg: 0.3444  loss_mask: 0.1711  loss_rpn_cls: 0.07534  loss_rpn_loc: 0.28  time: 3.6550  data_time: 0.0051  lr: 0.01  max_mem: 0M
[32m[11/16 10:02:56 d2.utils.events]: [0m eta: 7:02:50  iter: 3159  total_loss: 1.048  loss_cls: 0.1418  loss_box_reg: 0.353  loss_mask: 0.1676  loss_rpn_cls: 0.07679  loss_rpn_loc: 0.2997  time: 3.6552  data_time: 0.0034  lr: 0.01  max_mem: 0M
[32m[11/16 10:04:08 d2.utils.events]: [0m eta: 7:01:36  iter: 3179  total_loss: 1.112  loss_cls: 0.1651  loss_box_reg: 0.3541  loss_mask: 0.1758  loss_rpn_cls: 0.09762  loss_rpn_loc: 0.2922  time: 3.6548  data_time: 0.0062  lr: 0.01  max_mem: 0M
[32m[11/16 10:05:23 d2.utils.events]: [0m eta: 7:00:12  iter: 3199  total_loss: 1.088  loss_cls: 0.1449  loss_box_reg: 0.3579  loss_mask: 0.1698  loss_rpn_cls: 0.07913  loss_rpn_loc: 0.2595  time: 3.6553  data_time: 0.0029  lr: 0.01  max_mem: 0M
[32m[11/16 10:06:38 d2.utils.events]: [0m eta: 6:58:58  iter: 3219  total_loss: 0.9806  loss_cls: 0.1519  loss_box_reg: 0.3476  loss_mask: 0.1746  loss_rpn_cls: 0.09058  loss_rpn_loc: 0.2646  time: 3.6559  data_time: 0.0050  lr: 0.01  max_mem: 0M
[32m[11/16 10:07:54 d2.utils.events]: [0m eta: 6:58:03  iter: 3239  total_loss: 0.9674  loss_cls: 0.1381  loss_box_reg: 0.3375  loss_mask: 0.1587  loss_rpn_cls: 0.07009  loss_rpn_loc: 0.2539  time: 3.6569  data_time: 0.0051  lr: 0.01  max_mem: 0M
[32m[11/16 10:09:12 d2.utils.events]: [0m eta: 6:57:38  iter: 3259  total_loss: 0.9996  loss_cls: 0.1405  loss_box_reg: 0.3388  loss_mask: 0.1631  loss_rpn_cls: 0.08076  loss_rpn_loc: 0.2355  time: 3.6584  data_time: 0.0049  lr: 0.01  max_mem: 0M
[32m[11/16 10:10:26 d2.utils.events]: [0m eta: 6:55:46  iter: 3279  total_loss: 1.013  loss_cls: 0.1499  loss_box_reg: 0.3502  loss_mask: 0.1666  loss_rpn_cls: 0.08855  loss_rpn_loc: 0.2577  time: 3.6586  data_time: 0.0070  lr: 0.01  max_mem: 0M
[32m[11/16 10:11:38 d2.utils.events]: [0m eta: 6:53:59  iter: 3299  total_loss: 0.9807  loss_cls: 0.1359  loss_box_reg: 0.3366  loss_mask: 0.1648  loss_rpn_cls: 0.09863  loss_rpn_loc: 0.2369  time: 3.6584  data_time: 0.0062  lr: 0.01  max_mem: 0M
[32m[11/16 10:12:56 d2.utils.events]: [0m eta: 6:52:57  iter: 3319  total_loss: 0.9739  loss_cls: 0.1434  loss_box_reg: 0.3261  loss_mask: 0.1547  loss_rpn_cls: 0.08193  loss_rpn_loc: 0.252  time: 3.6597  data_time: 0.0059  lr: 0.01  max_mem: 0M
[32m[11/16 10:14:11 d2.utils.events]: [0m eta: 6:51:43  iter: 3339  total_loss: 0.9373  loss_cls: 0.1385  loss_box_reg: 0.3147  loss_mask: 0.1593  loss_rpn_cls: 0.09105  loss_rpn_loc: 0.2471  time: 3.6602  data_time: 0.0045  lr: 0.01  max_mem: 0M
[32m[11/16 10:15:25 d2.utils.events]: [0m eta: 6:50:37  iter: 3359  total_loss: 0.9422  loss_cls: 0.1357  loss_box_reg: 0.3078  loss_mask: 0.1571  loss_rpn_cls: 0.07158  loss_rpn_loc: 0.256  time: 3.6604  data_time: 0.0047  lr: 0.01  max_mem: 0M
[32m[11/16 10:16:38 d2.utils.events]: [0m eta: 6:48:49  iter: 3379  total_loss: 0.9555  loss_cls: 0.1361  loss_box_reg: 0.3299  loss_mask: 0.1558  loss_rpn_cls: 0.07117  loss_rpn_loc: 0.2403  time: 3.6605  data_time: 0.0036  lr: 0.01  max_mem: 0M
[32m[11/16 10:17:55 d2.utils.events]: [0m eta: 6:47:49  iter: 3399  total_loss: 0.9743  loss_cls: 0.146  loss_box_reg: 0.3431  loss_mask: 0.1601  loss_rpn_cls: 0.0779  loss_rpn_loc: 0.2407  time: 3.6615  data_time: 0.0035  lr: 0.01  max_mem: 0M
[32m[11/16 10:19:13 d2.utils.events]: [0m eta: 6:46:37  iter: 3419  total_loss: 0.9196  loss_cls: 0.139  loss_box_reg: 0.3432  loss_mask: 0.1617  loss_rpn_cls: 0.05471  loss_rpn_loc: 0.2375  time: 3.6627  data_time: 0.0050  lr: 0.01  max_mem: 0M
[32m[11/16 10:20:25 d2.utils.events]: [0m eta: 6:44:33  iter: 3439  total_loss: 1.012  loss_cls: 0.1314  loss_box_reg: 0.3557  loss_mask: 0.1717  loss_rpn_cls: 0.07149  loss_rpn_loc: 0.2541  time: 3.6625  data_time: 0.0035  lr: 0.01  max_mem: 0M
[32m[11/16 10:21:38 d2.utils.events]: [0m eta: 6:42:27  iter: 3459  total_loss: 0.944  loss_cls: 0.1347  loss_box_reg: 0.3446  loss_mask: 0.1537  loss_rpn_cls: 0.08445  loss_rpn_loc: 0.2453  time: 3.6624  data_time: 0.0032  lr: 0.01  max_mem: 0M
[32m[11/16 10:22:56 d2.utils.events]: [0m eta: 6:41:08  iter: 3479  total_loss: 0.9314  loss_cls: 0.1168  loss_box_reg: 0.3011  loss_mask: 0.1543  loss_rpn_cls: 0.06417  loss_rpn_loc: 0.256  time: 3.6637  data_time: 0.0036  lr: 0.01  max_mem: 0M
[32m[11/16 10:24:08 d2.utils.events]: [0m eta: 6:39:25  iter: 3499  total_loss: 0.9727  loss_cls: 0.1223  loss_box_reg: 0.3082  loss_mask: 0.158  loss_rpn_cls: 0.06864  loss_rpn_loc: 0.2569  time: 3.6635  data_time: 0.0053  lr: 0.01  max_mem: 0M
[32m[11/16 10:25:23 d2.utils.events]: [0m eta: 6:38:32  iter: 3519  total_loss: 0.93  loss_cls: 0.1466  loss_box_reg: 0.3252  loss_mask: 0.1658  loss_rpn_cls: 0.08387  loss_rpn_loc: 0.2332  time: 3.6640  data_time: 0.0038  lr: 0.01  max_mem: 0M
[32m[11/16 10:26:38 d2.utils.events]: [0m eta: 6:37:18  iter: 3539  total_loss: 0.9425  loss_cls: 0.1354  loss_box_reg: 0.3217  loss_mask: 0.1573  loss_rpn_cls: 0.08057  loss_rpn_loc: 0.2377  time: 3.6644  data_time: 0.0047  lr: 0.01  max_mem: 0M
[32m[11/16 10:27:56 d2.utils.events]: [0m eta: 6:36:13  iter: 3559  total_loss: 0.9674  loss_cls: 0.1292  loss_box_reg: 0.3151  loss_mask: 0.159  loss_rpn_cls: 0.07254  loss_rpn_loc: 0.2499  time: 3.6655  data_time: 0.0049  lr: 0.01  max_mem: 0M
[32m[11/16 10:29:07 d2.utils.events]: [0m eta: 6:34:50  iter: 3579  total_loss: 0.9685  loss_cls: 0.1393  loss_box_reg: 0.3353  loss_mask: 0.159  loss_rpn_cls: 0.09371  loss_rpn_loc: 0.2568  time: 3.6651  data_time: 0.0032  lr: 0.01  max_mem: 0M
[32m[11/16 10:30:20 d2.utils.events]: [0m eta: 6:33:26  iter: 3599  total_loss: 1.003  loss_cls: 0.15  loss_box_reg: 0.3381  loss_mask: 0.1619  loss_rpn_cls: 0.08733  loss_rpn_loc: 0.2435  time: 3.6648  data_time: 0.0029  lr: 0.01  max_mem: 0M
[32m[11/16 10:31:36 d2.utils.events]: [0m eta: 6:32:42  iter: 3619  total_loss: 0.8773  loss_cls: 0.1223  loss_box_reg: 0.3026  loss_mask: 0.1549  loss_rpn_cls: 0.05477  loss_rpn_loc: 0.2159  time: 3.6655  data_time: 0.0048  lr: 0.01  max_mem: 0M
[32m[11/16 10:32:52 d2.utils.events]: [0m eta: 6:31:22  iter: 3639  total_loss: 0.9369  loss_cls: 0.1309  loss_box_reg: 0.3266  loss_mask: 0.1604  loss_rpn_cls: 0.06382  loss_rpn_loc: 0.2368  time: 3.6663  data_time: 0.0054  lr: 0.01  max_mem: 0M
[32m[11/16 10:34:04 d2.utils.events]: [0m eta: 6:29:12  iter: 3659  total_loss: 0.8918  loss_cls: 0.1242  loss_box_reg: 0.3079  loss_mask: 0.151  loss_rpn_cls: 0.0662  loss_rpn_loc: 0.228  time: 3.6660  data_time: 0.0051  lr: 0.01  max_mem: 0M
[32m[11/16 10:35:16 d2.utils.events]: [0m eta: 6:27:23  iter: 3679  total_loss: 0.9925  loss_cls: 0.1316  loss_box_reg: 0.3139  loss_mask: 0.1563  loss_rpn_cls: 0.08919  loss_rpn_loc: 0.2528  time: 3.6656  data_time: 0.0047  lr: 0.01  max_mem: 0M
[32m[11/16 10:36:31 d2.utils.events]: [0m eta: 6:25:52  iter: 3699  total_loss: 0.9908  loss_cls: 0.1323  loss_box_reg: 0.3442  loss_mask: 0.1658  loss_rpn_cls: 0.09985  loss_rpn_loc: 0.257  time: 3.6659  data_time: 0.0042  lr: 0.01  max_mem: 0M
[32m[11/16 10:37:44 d2.utils.events]: [0m eta: 6:24:56  iter: 3719  total_loss: 0.947  loss_cls: 0.1388  loss_box_reg: 0.3291  loss_mask: 0.1615  loss_rpn_cls: 0.07861  loss_rpn_loc: 0.2269  time: 3.6660  data_time: 0.0038  lr: 0.01  max_mem: 0M
[32m[11/16 10:38:56 d2.utils.events]: [0m eta: 6:23:25  iter: 3739  total_loss: 0.9199  loss_cls: 0.1234  loss_box_reg: 0.3218  loss_mask: 0.1604  loss_rpn_cls: 0.07083  loss_rpn_loc: 0.2209  time: 3.6654  data_time: 0.0062  lr: 0.01  max_mem: 0M
[32m[11/16 10:40:11 d2.utils.events]: [0m eta: 6:22:12  iter: 3759  total_loss: 0.9185  loss_cls: 0.1304  loss_box_reg: 0.3284  loss_mask: 0.1625  loss_rpn_cls: 0.07424  loss_rpn_loc: 0.2464  time: 3.6659  data_time: 0.0041  lr: 0.01  max_mem: 0M
[32m[11/16 10:41:24 d2.utils.events]: [0m eta: 6:20:39  iter: 3779  total_loss: 0.9312  loss_cls: 0.1233  loss_box_reg: 0.309  loss_mask: 0.1596  loss_rpn_cls: 0.08633  loss_rpn_loc: 0.2347  time: 3.6658  data_time: 0.0044  lr: 0.01  max_mem: 0M
[32m[11/16 10:42:39 d2.utils.events]: [0m eta: 6:19:33  iter: 3799  total_loss: 0.9338  loss_cls: 0.1245  loss_box_reg: 0.2992  loss_mask: 0.1501  loss_rpn_cls: 0.08415  loss_rpn_loc: 0.2421  time: 3.6664  data_time: 0.0047  lr: 0.01  max_mem: 0M
[32m[11/16 10:43:52 d2.utils.events]: [0m eta: 6:18:01  iter: 3819  total_loss: 0.9074  loss_cls: 0.1201  loss_box_reg: 0.3059  loss_mask: 0.1572  loss_rpn_cls: 0.07653  loss_rpn_loc: 0.2396  time: 3.6663  data_time: 0.0087  lr: 0.01  max_mem: 0M
[32m[11/16 10:45:07 d2.utils.events]: [0m eta: 6:16:48  iter: 3839  total_loss: 0.9174  loss_cls: 0.128  loss_box_reg: 0.3233  loss_mask: 0.1603  loss_rpn_cls: 0.07936  loss_rpn_loc: 0.2366  time: 3.6667  data_time: 0.0072  lr: 0.01  max_mem: 0M
[32m[11/16 10:46:22 d2.utils.events]: [0m eta: 6:15:39  iter: 3859  total_loss: 0.9209  loss_cls: 0.1315  loss_box_reg: 0.338  loss_mask: 0.1582  loss_rpn_cls: 0.07495  loss_rpn_loc: 0.2326  time: 3.6672  data_time: 0.0033  lr: 0.01  max_mem: 0M
[32m[11/16 10:47:39 d2.utils.events]: [0m eta: 6:14:32  iter: 3879  total_loss: 0.8591  loss_cls: 0.123  loss_box_reg: 0.3102  loss_mask: 0.152  loss_rpn_cls: 0.05771  loss_rpn_loc: 0.2247  time: 3.6681  data_time: 0.0063  lr: 0.01  max_mem: 0M
[32m[11/16 10:48:53 d2.utils.events]: [0m eta: 6:13:30  iter: 3899  total_loss: 0.9484  loss_cls: 0.1199  loss_box_reg: 0.3097  loss_mask: 0.1671  loss_rpn_cls: 0.07257  loss_rpn_loc: 0.2368  time: 3.6682  data_time: 0.0038  lr: 0.01  max_mem: 0M
[32m[11/16 10:50:07 d2.utils.events]: [0m eta: 6:12:18  iter: 3919  total_loss: 0.8861  loss_cls: 0.1117  loss_box_reg: 0.3058  loss_mask: 0.1578  loss_rpn_cls: 0.07242  loss_rpn_loc: 0.2266  time: 3.6684  data_time: 0.0039  lr: 0.01  max_mem: 0M
[32m[11/16 10:51:21 d2.utils.events]: [0m eta: 6:11:04  iter: 3939  total_loss: 0.9656  loss_cls: 0.1311  loss_box_reg: 0.3226  loss_mask: 0.1653  loss_rpn_cls: 0.06748  loss_rpn_loc: 0.2509  time: 3.6686  data_time: 0.0025  lr: 0.01  max_mem: 0M
[32m[11/16 10:52:38 d2.utils.events]: [0m eta: 6:10:19  iter: 3959  total_loss: 0.9418  loss_cls: 0.1326  loss_box_reg: 0.3206  loss_mask: 0.1577  loss_rpn_cls: 0.07093  loss_rpn_loc: 0.2356  time: 3.6694  data_time: 0.0034  lr: 0.01  max_mem: 0M
[32m[11/16 10:53:51 d2.utils.events]: [0m eta: 6:08:24  iter: 3979  total_loss: 0.8932  loss_cls: 0.122  loss_box_reg: 0.2832  loss_mask: 0.1513  loss_rpn_cls: 0.08222  loss_rpn_loc: 0.2448  time: 3.6693  data_time: 0.0041  lr: 0.01  max_mem: 0M
[32m[11/16 10:55:07 d2.utils.events]: [0m eta: 6:07:01  iter: 3999  total_loss: 0.933  loss_cls: 0.1406  loss_box_reg: 0.3079  loss_mask: 0.1514  loss_rpn_cls: 0.0799  loss_rpn_loc: 0.2344  time: 3.6700  data_time: 0.0052  lr: 0.01  max_mem: 0M
[32m[11/16 10:56:20 d2.utils.events]: [0m eta: 6:04:54  iter: 4019  total_loss: 0.9577  loss_cls: 0.134  loss_box_reg: 0.316  loss_mask: 0.1574  loss_rpn_cls: 0.07152  loss_rpn_loc: 0.23  time: 3.6698  data_time: 0.0054  lr: 0.01  max_mem: 0M
[32m[11/16 10:57:38 d2.utils.events]: [0m eta: 6:03:41  iter: 4039  total_loss: 0.8824  loss_cls: 0.1196  loss_box_reg: 0.2852  loss_mask: 0.1519  loss_rpn_cls: 0.08122  loss_rpn_loc: 0.2233  time: 3.6710  data_time: 0.0034  lr: 0.01  max_mem: 0M
[32m[11/16 10:58:52 d2.utils.events]: [0m eta: 6:01:43  iter: 4059  total_loss: 0.8039  loss_cls: 0.1018  loss_box_reg: 0.284  loss_mask: 0.1486  loss_rpn_cls: 0.05774  loss_rpn_loc: 0.2299  time: 3.6711  data_time: 0.0048  lr: 0.01  max_mem: 0M
[32m[11/16 11:00:08 d2.utils.events]: [0m eta: 6:01:33  iter: 4079  total_loss: 0.8547  loss_cls: 0.1187  loss_box_reg: 0.2999  loss_mask: 0.1452  loss_rpn_cls: 0.0725  loss_rpn_loc: 0.2296  time: 3.6716  data_time: 0.0049  lr: 0.01  max_mem: 0M
[32m[11/16 11:01:23 d2.utils.events]: [0m eta: 6:00:20  iter: 4099  total_loss: 0.8348  loss_cls: 0.1113  loss_box_reg: 0.2842  loss_mask: 0.1483  loss_rpn_cls: 0.06335  loss_rpn_loc: 0.2179  time: 3.6722  data_time: 0.0070  lr: 0.01  max_mem: 0M
[32m[11/16 11:02:40 d2.utils.events]: [0m eta: 5:59:12  iter: 4119  total_loss: 0.8903  loss_cls: 0.1201  loss_box_reg: 0.3125  loss_mask: 0.1431  loss_rpn_cls: 0.07391  loss_rpn_loc: 0.2184  time: 3.6728  data_time: 0.0046  lr: 0.01  max_mem: 0M
[32m[11/16 11:03:48 d2.utils.events]: [0m eta: 5:57:35  iter: 4139  total_loss: 0.8694  loss_cls: 0.1154  loss_box_reg: 0.3095  loss_mask: 0.1483  loss_rpn_cls: 0.06236  loss_rpn_loc: 0.2319  time: 3.6717  data_time: 0.0074  lr: 0.01  max_mem: 0M
[32m[11/16 11:05:01 d2.utils.events]: [0m eta: 5:55:54  iter: 4159  total_loss: 0.9374  loss_cls: 0.1292  loss_box_reg: 0.3159  loss_mask: 0.151  loss_rpn_cls: 0.08346  loss_rpn_loc: 0.2392  time: 3.6715  data_time: 0.0069  lr: 0.01  max_mem: 0M
[32m[11/16 11:06:11 d2.utils.events]: [0m eta: 5:54:25  iter: 4179  total_loss: 0.8781  loss_cls: 0.117  loss_box_reg: 0.3071  loss_mask: 0.1557  loss_rpn_cls: 0.06301  loss_rpn_loc: 0.2281  time: 3.6706  data_time: 0.0033  lr: 0.01  max_mem: 0M
[32m[11/16 11:07:27 d2.utils.events]: [0m eta: 5:53:28  iter: 4199  total_loss: 0.8564  loss_cls: 0.1248  loss_box_reg: 0.3243  loss_mask: 0.155  loss_rpn_cls: 0.06093  loss_rpn_loc: 0.2099  time: 3.6712  data_time: 0.0032  lr: 0.01  max_mem: 0M
[32m[11/16 11:08:38 d2.utils.events]: [0m eta: 5:51:15  iter: 4219  total_loss: 0.9789  loss_cls: 0.1294  loss_box_reg: 0.311  loss_mask: 0.1547  loss_rpn_cls: 0.07508  loss_rpn_loc: 0.2629  time: 3.6706  data_time: 0.0032  lr: 0.01  max_mem: 0M
[32m[11/16 11:09:48 d2.utils.events]: [0m eta: 5:49:05  iter: 4239  total_loss: 0.9484  loss_cls: 0.1423  loss_box_reg: 0.3206  loss_mask: 0.151  loss_rpn_cls: 0.08283  loss_rpn_loc: 0.2292  time: 3.6700  data_time: 0.0040  lr: 0.01  max_mem: 0M
