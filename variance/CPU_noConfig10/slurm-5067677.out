Registered Datasets: ['satellite_Train', 'satellite_Val']
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S06_02_SE1_500X71.png
	num_instances: 104
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/HP743_4S_500x.png
	num_instances: 103
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/HP743_6S_250x.png
	num_instances: 102
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S08_03_SE1_1000X03.png
	num_instances: 88
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S06_01_SE1_500X67.png
	num_instances: 54
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S04_02_SE1_1000X50.png
	num_instances: 45
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S03_03_SE1_1250X41.png
	num_instances: 111
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S02_01_SE1_300X14.png
	num_instances: 98
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/HP743_2S_250x.png
	num_instances: 49
Weights not found, weights will be downloaded from source: https://dl.fbaipublicfiles.com/detectron2/COCO-InstanceSegmentation/mask_rcnn_R_50_FPN_3x/137849600/model_final_f10217.pkl
[32m[11/16 06:58:48 d2.engine.defaults]: [0mModel:
GeneralizedRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): StandardROIHeads(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): FastRCNNConvFCHead(
      (flatten): Flatten(start_dim=1, end_dim=-1)
      (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      (fc_relu1): ReLU()
      (fc2): Linear(in_features=1024, out_features=1024, bias=True)
      (fc_relu2): ReLU()
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=1024, out_features=2, bias=True)
      (bbox_pred): Linear(in_features=1024, out_features=4, bias=True)
    )
    (mask_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(14, 14), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(14, 14), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (mask_head): MaskRCNNConvUpsampleHead(
      (mask_fcn1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn2): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn3): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn4): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
      (deconv_relu): ReLU()
      (predictor): Conv2d(256, 1, kernel_size=(1, 1), stride=(1, 1))
    )
  )
)
[32m[11/16 06:58:48 d2.data.build]: [0mRemoved 0 images with no usable annotations. 20 images left.
[32m[11/16 06:58:48 d2.data.build]: [0mDistribution of instances among all 1 categories:
[36m|  category  | #instances   |
|:----------:|:-------------|
| satellite  | 1412         |
|            |              |[0m
[32m[11/16 06:58:48 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[32m[11/16 06:58:48 d2.data.build]: [0mUsing training sampler TrainingSampler
[32m[11/16 06:58:48 d2.data.common]: [0mSerializing 20 elements to byte tensors and concatenating them all ...
[32m[11/16 06:58:48 d2.data.common]: [0mSerialized dataset takes 0.46 MiB
[5m[31mWARNING[0m [32m[11/16 06:58:48 d2.solver.build]: [0mSOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[32m[11/16 06:58:49 d2.checkpoint.c2_model_loading]: [0mRenaming Caffe2 weights ......
[32m[11/16 06:58:49 d2.checkpoint.c2_model_loading]: [0mFollowing weights matched with submodule backbone.bottom_up:
| Names in Model    | Names in Checkpoint      | Shapes                                          |
|:------------------|:-------------------------|:------------------------------------------------|
| res2.0.conv1.*    | res2_0_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,1,1)             |
| res2.0.conv2.*    | res2_0_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.0.conv3.*    | res2_0_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.0.shortcut.* | res2_0_branch1_{bn_*,w}  | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.1.conv1.*    | res2_1_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,256,1,1)            |
| res2.1.conv2.*    | res2_1_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.1.conv3.*    | res2_1_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.2.conv1.*    | res2_2_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,256,1,1)            |
| res2.2.conv2.*    | res2_2_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.2.conv3.*    | res2_2_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res3.0.conv1.*    | res3_0_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,256,1,1)       |
| res3.0.conv2.*    | res3_0_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.0.conv3.*    | res3_0_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.0.shortcut.* | res3_0_branch1_{bn_*,w}  | (512,) (512,) (512,) (512,) (512,256,1,1)       |
| res3.1.conv1.*    | res3_1_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.1.conv2.*    | res3_1_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.1.conv3.*    | res3_1_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.2.conv1.*    | res3_2_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.2.conv2.*    | res3_2_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.2.conv3.*    | res3_2_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.3.conv1.*    | res3_3_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.3.conv2.*    | res3_3_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.3.conv3.*    | res3_3_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res4.0.conv1.*    | res4_0_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,512,1,1)       |
| res4.0.conv2.*    | res4_0_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.0.conv3.*    | res4_0_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.0.shortcut.* | res4_0_branch1_{bn_*,w}  | (1024,) (1024,) (1024,) (1024,) (1024,512,1,1)  |
| res4.1.conv1.*    | res4_1_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.1.conv2.*    | res4_1_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.1.conv3.*    | res4_1_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.2.conv1.*    | res4_2_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.2.conv2.*    | res4_2_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.2.conv3.*    | res4_2_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.3.conv1.*    | res4_3_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.3.conv2.*    | res4_3_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.3.conv3.*    | res4_3_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.4.conv1.*    | res4_4_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.4.conv2.*    | res4_4_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.4.conv3.*    | res4_4_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.5.conv1.*    | res4_5_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.5.conv2.*    | res4_5_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.5.conv3.*    | res4_5_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res5.0.conv1.*    | res5_0_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,1024,1,1)      |
| res5.0.conv2.*    | res5_0_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.0.conv3.*    | res5_0_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| res5.0.shortcut.* | res5_0_branch1_{bn_*,w}  | (2048,) (2048,) (2048,) (2048,) (2048,1024,1,1) |
| res5.1.conv1.*    | res5_1_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,2048,1,1)      |
| res5.1.conv2.*    | res5_1_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.1.conv3.*    | res5_1_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| res5.2.conv1.*    | res5_2_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,2048,1,1)      |
| res5.2.conv2.*    | res5_2_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.2.conv3.*    | res5_2_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| stem.conv1.norm.* | res_conv1_bn_*           | (64,) (64,) (64,) (64,)                         |
| stem.conv1.weight | conv1_w                  | (64, 3, 7, 7)                                   |
[32m[11/16 06:58:49 d2.engine.train_loop]: [0mStarting training from iteration 0
[32m[11/16 07:00:11 d2.utils.events]: [0m eta: 10:44:46  iter: 19  total_loss: 3.084  loss_cls: 0.5289  loss_box_reg: 0.02037  loss_mask: 0.6692  loss_rpn_cls: 0.6785  loss_rpn_loc: 1.145  time: 4.0223  data_time: 0.0186  lr: 0.00019981  max_mem: 0M
[32m[11/16 07:01:25 d2.utils.events]: [0m eta: 10:13:24  iter: 39  total_loss: 2.374  loss_cls: 0.2914  loss_box_reg: 0.02397  loss_mask: 0.5976  loss_rpn_cls: 0.6116  loss_rpn_loc: 0.7395  time: 3.8562  data_time: 0.0059  lr: 0.00039961  max_mem: 0M
[32m[11/16 07:02:38 d2.utils.events]: [0m eta: 10:16:26  iter: 59  total_loss: 2.117  loss_cls: 0.2285  loss_box_reg: 0.07601  loss_mask: 0.5768  loss_rpn_cls: 0.591  loss_rpn_loc: 0.6049  time: 3.7894  data_time: 0.0067  lr: 0.00059941  max_mem: 0M
[32m[11/16 07:03:56 d2.utils.events]: [0m eta: 10:24:44  iter: 79  total_loss: 2.029  loss_cls: 0.1979  loss_box_reg: 0.2195  loss_mask: 0.5655  loss_rpn_cls: 0.5361  loss_rpn_loc: 0.569  time: 3.8179  data_time: 0.0064  lr: 0.00079921  max_mem: 0M
[32m[11/16 07:05:12 d2.utils.events]: [0m eta: 10:30:34  iter: 99  total_loss: 2.017  loss_cls: 0.2163  loss_box_reg: 0.2678  loss_mask: 0.5511  loss_rpn_cls: 0.4502  loss_rpn_loc: 0.5373  time: 3.8180  data_time: 0.0038  lr: 0.00099901  max_mem: 0M
[32m[11/16 07:06:30 d2.utils.events]: [0m eta: 10:28:13  iter: 119  total_loss: 2.089  loss_cls: 0.3093  loss_box_reg: 0.2951  loss_mask: 0.5189  loss_rpn_cls: 0.4386  loss_rpn_loc: 0.5495  time: 3.8270  data_time: 0.0038  lr: 0.0011988  max_mem: 0M
[32m[11/16 07:07:49 d2.utils.events]: [0m eta: 10:28:40  iter: 139  total_loss: 2.103  loss_cls: 0.3169  loss_box_reg: 0.4225  loss_mask: 0.4865  loss_rpn_cls: 0.3366  loss_rpn_loc: 0.5194  time: 3.8455  data_time: 0.0048  lr: 0.0013986  max_mem: 0M
[32m[11/16 07:09:14 d2.utils.events]: [0m eta: 10:28:21  iter: 159  total_loss: 1.977  loss_cls: 0.2912  loss_box_reg: 0.4202  loss_mask: 0.4419  loss_rpn_cls: 0.279  loss_rpn_loc: 0.5023  time: 3.8990  data_time: 0.0039  lr: 0.0015984  max_mem: 0M
[32m[11/16 07:11:27 d2.utils.events]: [0m eta: 10:40:43  iter: 179  total_loss: 1.912  loss_cls: 0.2521  loss_box_reg: 0.4514  loss_mask: 0.4428  loss_rpn_cls: 0.2903  loss_rpn_loc: 0.4634  time: 4.2065  data_time: 0.0048  lr: 0.0017982  max_mem: 0M
[32m[11/16 07:13:18 d2.utils.events]: [0m eta: 10:55:19  iter: 199  total_loss: 1.894  loss_cls: 0.3013  loss_box_reg: 0.4535  loss_mask: 0.419  loss_rpn_cls: 0.2734  loss_rpn_loc: 0.4637  time: 4.3392  data_time: 0.0064  lr: 0.001998  max_mem: 0M
[32m[11/16 07:14:35 d2.utils.events]: [0m eta: 10:47:08  iter: 219  total_loss: 1.931  loss_cls: 0.2555  loss_box_reg: 0.4064  loss_mask: 0.4264  loss_rpn_cls: 0.3145  loss_rpn_loc: 0.4883  time: 4.2961  data_time: 0.0052  lr: 0.0021978  max_mem: 0M
[32m[11/16 07:16:00 d2.utils.events]: [0m eta: 10:47:22  iter: 239  total_loss: 1.887  loss_cls: 0.306  loss_box_reg: 0.4954  loss_mask: 0.3953  loss_rpn_cls: 0.2668  loss_rpn_loc: 0.4884  time: 4.2920  data_time: 0.0040  lr: 0.0023976  max_mem: 0M
[32m[11/16 07:17:21 d2.utils.events]: [0m eta: 10:46:39  iter: 259  total_loss: 1.793  loss_cls: 0.2638  loss_box_reg: 0.4878  loss_mask: 0.3541  loss_rpn_cls: 0.2734  loss_rpn_loc: 0.427  time: 4.2745  data_time: 0.0062  lr: 0.0025974  max_mem: 0M
[32m[11/16 07:18:42 d2.utils.events]: [0m eta: 10:47:00  iter: 279  total_loss: 1.728  loss_cls: 0.2337  loss_box_reg: 0.4848  loss_mask: 0.3458  loss_rpn_cls: 0.2426  loss_rpn_loc: 0.4626  time: 4.2556  data_time: 0.0052  lr: 0.0027972  max_mem: 0M
[32m[11/16 07:20:00 d2.utils.events]: [0m eta: 10:44:53  iter: 299  total_loss: 1.764  loss_cls: 0.2752  loss_box_reg: 0.52  loss_mask: 0.3556  loss_rpn_cls: 0.2342  loss_rpn_loc: 0.4063  time: 4.2341  data_time: 0.0042  lr: 0.002997  max_mem: 0M
[32m[11/16 07:21:22 d2.utils.events]: [0m eta: 10:44:21  iter: 319  total_loss: 1.771  loss_cls: 0.2905  loss_box_reg: 0.5234  loss_mask: 0.3162  loss_rpn_cls: 0.202  loss_rpn_loc: 0.4084  time: 4.2259  data_time: 0.0041  lr: 0.0031968  max_mem: 0M
[32m[11/16 07:22:43 d2.utils.events]: [0m eta: 10:43:01  iter: 339  total_loss: 1.7  loss_cls: 0.2673  loss_box_reg: 0.4985  loss_mask: 0.3234  loss_rpn_cls: 0.1846  loss_rpn_loc: 0.422  time: 4.2152  data_time: 0.0055  lr: 0.0033966  max_mem: 0M
[32m[11/16 07:24:02 d2.utils.events]: [0m eta: 10:40:54  iter: 359  total_loss: 1.708  loss_cls: 0.2527  loss_box_reg: 0.4833  loss_mask: 0.3377  loss_rpn_cls: 0.2191  loss_rpn_loc: 0.4223  time: 4.1994  data_time: 0.0048  lr: 0.0035964  max_mem: 0M
[32m[11/16 07:25:21 d2.utils.events]: [0m eta: 10:39:34  iter: 379  total_loss: 1.641  loss_cls: 0.2481  loss_box_reg: 0.4638  loss_mask: 0.3178  loss_rpn_cls: 0.1911  loss_rpn_loc: 0.4032  time: 4.1850  data_time: 0.0040  lr: 0.0037962  max_mem: 0M
[32m[11/16 07:26:44 d2.utils.events]: [0m eta: 10:39:08  iter: 399  total_loss: 1.706  loss_cls: 0.2159  loss_box_reg: 0.4593  loss_mask: 0.322  loss_rpn_cls: 0.1929  loss_rpn_loc: 0.4731  time: 4.1830  data_time: 0.0028  lr: 0.003996  max_mem: 0M
[32m[11/16 07:28:49 d2.utils.events]: [0m eta: 10:41:37  iter: 419  total_loss: 1.745  loss_cls: 0.2606  loss_box_reg: 0.4266  loss_mask: 0.3372  loss_rpn_cls: 0.2308  loss_rpn_loc: 0.4498  time: 4.2840  data_time: 0.0058  lr: 0.0041958  max_mem: 0M
[32m[11/16 07:31:07 d2.utils.events]: [0m eta: 10:44:25  iter: 439  total_loss: 1.675  loss_cls: 0.2271  loss_box_reg: 0.4634  loss_mask: 0.294  loss_rpn_cls: 0.1943  loss_rpn_loc: 0.4338  time: 4.4019  data_time: 0.0043  lr: 0.0043956  max_mem: 0M
[32m[11/16 07:32:28 d2.utils.events]: [0m eta: 10:43:04  iter: 459  total_loss: 1.615  loss_cls: 0.2495  loss_box_reg: 0.4907  loss_mask: 0.292  loss_rpn_cls: 0.2009  loss_rpn_loc: 0.4002  time: 4.3873  data_time: 0.0058  lr: 0.0045954  max_mem: 0M
[32m[11/16 07:33:52 d2.utils.events]: [0m eta: 10:43:46  iter: 479  total_loss: 1.574  loss_cls: 0.2304  loss_box_reg: 0.4502  loss_mask: 0.2806  loss_rpn_cls: 0.1922  loss_rpn_loc: 0.4116  time: 4.3781  data_time: 0.0036  lr: 0.0047952  max_mem: 0M
[32m[11/16 07:35:12 d2.utils.events]: [0m eta: 10:41:51  iter: 499  total_loss: 1.527  loss_cls: 0.2205  loss_box_reg: 0.4086  loss_mask: 0.3079  loss_rpn_cls: 0.1953  loss_rpn_loc: 0.4324  time: 4.3639  data_time: 0.0038  lr: 0.004995  max_mem: 0M
[32m[11/16 07:36:35 d2.utils.events]: [0m eta: 10:41:31  iter: 519  total_loss: 1.568  loss_cls: 0.2197  loss_box_reg: 0.4398  loss_mask: 0.2744  loss_rpn_cls: 0.222  loss_rpn_loc: 0.3829  time: 4.3560  data_time: 0.0059  lr: 0.0051948  max_mem: 0M
[32m[11/16 07:37:58 d2.utils.events]: [0m eta: 10:40:10  iter: 539  total_loss: 1.715  loss_cls: 0.2789  loss_box_reg: 0.4846  loss_mask: 0.275  loss_rpn_cls: 0.2069  loss_rpn_loc: 0.449  time: 4.3480  data_time: 0.0030  lr: 0.0053946  max_mem: 0M
[32m[11/16 07:39:21 d2.utils.events]: [0m eta: 10:40:21  iter: 559  total_loss: 1.558  loss_cls: 0.2585  loss_box_reg: 0.4889  loss_mask: 0.2712  loss_rpn_cls: 0.1857  loss_rpn_loc: 0.3859  time: 4.3414  data_time: 0.0036  lr: 0.0055944  max_mem: 0M
[32m[11/16 07:40:46 d2.utils.events]: [0m eta: 10:41:04  iter: 579  total_loss: 1.634  loss_cls: 0.2673  loss_box_reg: 0.5119  loss_mask: 0.2607  loss_rpn_cls: 0.1663  loss_rpn_loc: 0.387  time: 4.3371  data_time: 0.0038  lr: 0.0057942  max_mem: 0M
[32m[11/16 07:42:11 d2.utils.events]: [0m eta: 10:40:28  iter: 599  total_loss: 1.581  loss_cls: 0.2258  loss_box_reg: 0.44  loss_mask: 0.2824  loss_rpn_cls: 0.1781  loss_rpn_loc: 0.4224  time: 4.3351  data_time: 0.0039  lr: 0.005994  max_mem: 0M
[32m[11/16 07:43:33 d2.utils.events]: [0m eta: 10:38:52  iter: 619  total_loss: 1.447  loss_cls: 0.2082  loss_box_reg: 0.4411  loss_mask: 0.2628  loss_rpn_cls: 0.1553  loss_rpn_loc: 0.3824  time: 4.3273  data_time: 0.0045  lr: 0.0061938  max_mem: 0M
[32m[11/16 07:44:53 d2.utils.events]: [0m eta: 10:36:59  iter: 639  total_loss: 1.47  loss_cls: 0.1845  loss_box_reg: 0.3656  loss_mask: 0.2577  loss_rpn_cls: 0.1914  loss_rpn_loc: 0.4445  time: 4.3168  data_time: 0.0059  lr: 0.0063936  max_mem: 0M
[32m[11/16 07:46:15 d2.utils.events]: [0m eta: 10:35:06  iter: 659  total_loss: 1.446  loss_cls: 0.1992  loss_box_reg: 0.4146  loss_mask: 0.2479  loss_rpn_cls: 0.1868  loss_rpn_loc: 0.4142  time: 4.3100  data_time: 0.0068  lr: 0.0065934  max_mem: 0M
[32m[11/16 07:47:35 d2.utils.events]: [0m eta: 10:31:37  iter: 679  total_loss: 1.518  loss_cls: 0.2239  loss_box_reg: 0.4574  loss_mask: 0.2542  loss_rpn_cls: 0.1978  loss_rpn_loc: 0.3937  time: 4.3014  data_time: 0.0037  lr: 0.0067932  max_mem: 0M
[32m[11/16 07:49:01 d2.utils.events]: [0m eta: 10:32:23  iter: 699  total_loss: 1.572  loss_cls: 0.2662  loss_box_reg: 0.4779  loss_mask: 0.2505  loss_rpn_cls: 0.1562  loss_rpn_loc: 0.3924  time: 4.3000  data_time: 0.0052  lr: 0.006993  max_mem: 0M
[32m[11/16 07:50:24 d2.utils.events]: [0m eta: 10:31:32  iter: 719  total_loss: 1.617  loss_cls: 0.281  loss_box_reg: 0.472  loss_mask: 0.2463  loss_rpn_cls: 0.1948  loss_rpn_loc: 0.3889  time: 4.2966  data_time: 0.0032  lr: 0.0071928  max_mem: 0M
[32m[11/16 07:51:45 d2.utils.events]: [0m eta: 10:29:39  iter: 739  total_loss: 1.512  loss_cls: 0.2367  loss_box_reg: 0.4566  loss_mask: 0.2525  loss_rpn_cls: 0.1764  loss_rpn_loc: 0.3872  time: 4.2896  data_time: 0.0069  lr: 0.0073926  max_mem: 0M
[32m[11/16 07:53:08 d2.utils.events]: [0m eta: 10:29:00  iter: 759  total_loss: 1.482  loss_cls: 0.223  loss_box_reg: 0.4929  loss_mask: 0.2495  loss_rpn_cls: 0.1851  loss_rpn_loc: 0.3642  time: 4.2862  data_time: 0.0057  lr: 0.0075924  max_mem: 0M
[32m[11/16 07:54:29 d2.utils.events]: [0m eta: 10:27:35  iter: 779  total_loss: 1.439  loss_cls: 0.2119  loss_box_reg: 0.4435  loss_mask: 0.2421  loss_rpn_cls: 0.1529  loss_rpn_loc: 0.3885  time: 4.2804  data_time: 0.0049  lr: 0.0077922  max_mem: 0M
[32m[11/16 07:55:48 d2.utils.events]: [0m eta: 10:25:35  iter: 799  total_loss: 1.523  loss_cls: 0.2195  loss_box_reg: 0.4335  loss_mask: 0.243  loss_rpn_cls: 0.1999  loss_rpn_loc: 0.4281  time: 4.2715  data_time: 0.0045  lr: 0.007992  max_mem: 0M
[32m[11/16 07:57:09 d2.utils.events]: [0m eta: 10:24:36  iter: 819  total_loss: 1.489  loss_cls: 0.2025  loss_box_reg: 0.4056  loss_mask: 0.2467  loss_rpn_cls: 0.1727  loss_rpn_loc: 0.4134  time: 4.2665  data_time: 0.0045  lr: 0.0081918  max_mem: 0M
[32m[11/16 07:58:31 d2.utils.events]: [0m eta: 10:22:09  iter: 839  total_loss: 1.412  loss_cls: 0.2105  loss_box_reg: 0.411  loss_mask: 0.2511  loss_rpn_cls: 0.1578  loss_rpn_loc: 0.3685  time: 4.2626  data_time: 0.0035  lr: 0.0083916  max_mem: 0M
[32m[11/16 07:59:56 d2.utils.events]: [0m eta: 10:21:53  iter: 859  total_loss: 1.404  loss_cls: 0.2004  loss_box_reg: 0.4208  loss_mask: 0.2328  loss_rpn_cls: 0.188  loss_rpn_loc: 0.3978  time: 4.2617  data_time: 0.0042  lr: 0.0085914  max_mem: 0M
[32m[11/16 08:01:22 d2.utils.events]: [0m eta: 10:20:39  iter: 879  total_loss: 1.554  loss_cls: 0.2665  loss_box_reg: 0.4801  loss_mask: 0.2341  loss_rpn_cls: 0.161  loss_rpn_loc: 0.3852  time: 4.2624  data_time: 0.0047  lr: 0.0087912  max_mem: 0M
[32m[11/16 08:02:45 d2.utils.events]: [0m eta: 10:19:25  iter: 899  total_loss: 1.559  loss_cls: 0.2656  loss_box_reg: 0.5179  loss_mask: 0.2466  loss_rpn_cls: 0.184  loss_rpn_loc: 0.3811  time: 4.2602  data_time: 0.0061  lr: 0.008991  max_mem: 0M
[32m[11/16 08:04:09 d2.utils.events]: [0m eta: 10:18:27  iter: 919  total_loss: 1.508  loss_cls: 0.225  loss_box_reg: 0.4443  loss_mask: 0.2436  loss_rpn_cls: 0.1794  loss_rpn_loc: 0.4226  time: 4.2583  data_time: 0.0059  lr: 0.0091908  max_mem: 0M
[32m[11/16 08:05:30 d2.utils.events]: [0m eta: 10:17:05  iter: 939  total_loss: 1.545  loss_cls: 0.2499  loss_box_reg: 0.4419  loss_mask: 0.2408  loss_rpn_cls: 0.1812  loss_rpn_loc: 0.4099  time: 4.2538  data_time: 0.0047  lr: 0.0093906  max_mem: 0M
[32m[11/16 08:06:58 d2.utils.events]: [0m eta: 10:16:23  iter: 959  total_loss: 1.451  loss_cls: 0.2189  loss_box_reg: 0.4247  loss_mask: 0.2293  loss_rpn_cls: 0.17  loss_rpn_loc: 0.428  time: 4.2569  data_time: 0.0067  lr: 0.0095904  max_mem: 0M
[32m[11/16 08:08:17 d2.utils.events]: [0m eta: 10:14:22  iter: 979  total_loss: 1.406  loss_cls: 0.194  loss_box_reg: 0.4126  loss_mask: 0.2459  loss_rpn_cls: 0.168  loss_rpn_loc: 0.4145  time: 4.2505  data_time: 0.0051  lr: 0.0097902  max_mem: 0M
[32m[11/16 08:09:40 d2.utils.events]: [0m eta: 10:13:20  iter: 999  total_loss: 1.447  loss_cls: 0.219  loss_box_reg: 0.4543  loss_mask: 0.2372  loss_rpn_cls: 0.1679  loss_rpn_loc: 0.3726  time: 4.2489  data_time: 0.0036  lr: 0.00999  max_mem: 0M
[32m[11/16 08:11:09 d2.utils.events]: [0m eta: 10:13:58  iter: 1019  total_loss: 1.432  loss_cls: 0.2208  loss_box_reg: 0.4593  loss_mask: 0.231  loss_rpn_cls: 0.1355  loss_rpn_loc: 0.3659  time: 4.2525  data_time: 0.0057  lr: 0.01  max_mem: 0M
[32m[11/16 08:12:30 d2.utils.events]: [0m eta: 10:14:25  iter: 1039  total_loss: 1.416  loss_cls: 0.2216  loss_box_reg: 0.4526  loss_mask: 0.2258  loss_rpn_cls: 0.1564  loss_rpn_loc: 0.3785  time: 4.2485  data_time: 0.0032  lr: 0.01  max_mem: 0M
[32m[11/16 08:13:53 d2.utils.events]: [0m eta: 10:13:34  iter: 1059  total_loss: 1.497  loss_cls: 0.2316  loss_box_reg: 0.4525  loss_mask: 0.2271  loss_rpn_cls: 0.1663  loss_rpn_loc: 0.3699  time: 4.2470  data_time: 0.0050  lr: 0.01  max_mem: 0M
[32m[11/16 08:15:17 d2.utils.events]: [0m eta: 10:12:59  iter: 1079  total_loss: 1.396  loss_cls: 0.2179  loss_box_reg: 0.4323  loss_mask: 0.235  loss_rpn_cls: 0.1578  loss_rpn_loc: 0.3829  time: 4.2459  data_time: 0.0062  lr: 0.01  max_mem: 0M
[32m[11/16 08:16:46 d2.utils.events]: [0m eta: 10:12:41  iter: 1099  total_loss: 1.292  loss_cls: 0.1861  loss_box_reg: 0.4039  loss_mask: 0.2267  loss_rpn_cls: 0.1234  loss_rpn_loc: 0.3572  time: 4.2499  data_time: 0.0043  lr: 0.01  max_mem: 0M
[32m[11/16 08:18:09 d2.utils.events]: [0m eta: 10:12:22  iter: 1119  total_loss: 1.412  loss_cls: 0.2068  loss_box_reg: 0.4119  loss_mask: 0.2427  loss_rpn_cls: 0.1708  loss_rpn_loc: 0.3948  time: 4.2481  data_time: 0.0043  lr: 0.01  max_mem: 0M
[32m[11/16 08:19:34 d2.utils.events]: [0m eta: 10:12:13  iter: 1139  total_loss: 1.5  loss_cls: 0.2457  loss_box_reg: 0.4787  loss_mask: 0.239  loss_rpn_cls: 0.1281  loss_rpn_loc: 0.3722  time: 4.2475  data_time: 0.0063  lr: 0.01  max_mem: 0M
[32m[11/16 08:20:59 d2.utils.events]: [0m eta: 10:11:35  iter: 1159  total_loss: 1.433  loss_cls: 0.2359  loss_box_reg: 0.4611  loss_mask: 0.2269  loss_rpn_cls: 0.1346  loss_rpn_loc: 0.3867  time: 4.2479  data_time: 0.0030  lr: 0.01  max_mem: 0M
[32m[11/16 08:22:19 d2.utils.events]: [0m eta: 10:07:42  iter: 1179  total_loss: 1.44  loss_cls: 0.2415  loss_box_reg: 0.4474  loss_mask: 0.2355  loss_rpn_cls: 0.1372  loss_rpn_loc: 0.3962  time: 4.2435  data_time: 0.0045  lr: 0.01  max_mem: 0M
[32m[11/16 08:23:38 d2.utils.events]: [0m eta: 10:05:10  iter: 1199  total_loss: 1.454  loss_cls: 0.2467  loss_box_reg: 0.4772  loss_mask: 0.2357  loss_rpn_cls: 0.1473  loss_rpn_loc: 0.3653  time: 4.2386  data_time: 0.0035  lr: 0.01  max_mem: 0M
[32m[11/16 08:24:59 d2.utils.events]: [0m eta: 10:04:19  iter: 1219  total_loss: 1.38  loss_cls: 0.2107  loss_box_reg: 0.4346  loss_mask: 0.2169  loss_rpn_cls: 0.2252  loss_rpn_loc: 0.3701  time: 4.2357  data_time: 0.0056  lr: 0.01  max_mem: 0M
[32m[11/16 08:26:18 d2.utils.events]: [0m eta: 10:02:47  iter: 1239  total_loss: 1.357  loss_cls: 0.2054  loss_box_reg: 0.4493  loss_mask: 0.2164  loss_rpn_cls: 0.1561  loss_rpn_loc: 0.341  time: 4.2309  data_time: 0.0044  lr: 0.01  max_mem: 0M
[32m[11/16 08:27:33 d2.utils.events]: [0m eta: 10:00:12  iter: 1259  total_loss: 1.362  loss_cls: 0.2207  loss_box_reg: 0.4416  loss_mask: 0.2129  loss_rpn_cls: 0.169  loss_rpn_loc: 0.3628  time: 4.2229  data_time: 0.0041  lr: 0.01  max_mem: 0M
[32m[11/16 08:28:51 d2.utils.events]: [0m eta: 9:58:29  iter: 1279  total_loss: 1.343  loss_cls: 0.2212  loss_box_reg: 0.4436  loss_mask: 0.2412  loss_rpn_cls: 0.1364  loss_rpn_loc: 0.346  time: 4.2178  data_time: 0.0051  lr: 0.01  max_mem: 0M
[32m[11/16 08:30:13 d2.utils.events]: [0m eta: 9:57:52  iter: 1299  total_loss: 1.352  loss_cls: 0.2247  loss_box_reg: 0.4594  loss_mask: 0.2081  loss_rpn_cls: 0.1416  loss_rpn_loc: 0.342  time: 4.2160  data_time: 0.0064  lr: 0.01  max_mem: 0M
[32m[11/16 08:31:50 d2.utils.events]: [0m eta: 9:58:03  iter: 1319  total_loss: 1.379  loss_cls: 0.2174  loss_box_reg: 0.4613  loss_mask: 0.2173  loss_rpn_cls: 0.1304  loss_rpn_loc: 0.3511  time: 4.2255  data_time: 0.0051  lr: 0.01  max_mem: 0M
[32m[11/16 08:33:26 d2.utils.events]: [0m eta: 9:58:24  iter: 1339  total_loss: 1.421  loss_cls: 0.2187  loss_box_reg: 0.4552  loss_mask: 0.2245  loss_rpn_cls: 0.1512  loss_rpn_loc: 0.3443  time: 4.2342  data_time: 0.0045  lr: 0.01  max_mem: 0M
[32m[11/16 08:34:53 d2.utils.events]: [0m eta: 9:57:18  iter: 1359  total_loss: 1.345  loss_cls: 0.223  loss_box_reg: 0.4487  loss_mask: 0.2086  loss_rpn_cls: 0.1266  loss_rpn_loc: 0.3289  time: 4.2356  data_time: 0.0046  lr: 0.01  max_mem: 0M
[32m[11/16 08:36:17 d2.utils.events]: [0m eta: 9:56:41  iter: 1379  total_loss: 1.424  loss_cls: 0.2129  loss_box_reg: 0.4045  loss_mask: 0.2217  loss_rpn_cls: 0.2069  loss_rpn_loc: 0.3626  time: 4.2351  data_time: 0.0039  lr: 0.01  max_mem: 0M
[32m[11/16 08:37:35 d2.utils.events]: [0m eta: 9:54:21  iter: 1399  total_loss: 1.432  loss_cls: 0.2336  loss_box_reg: 0.4515  loss_mask: 0.2372  loss_rpn_cls: 0.1239  loss_rpn_loc: 0.3571  time: 4.2306  data_time: 0.0057  lr: 0.01  max_mem: 0M
[32m[11/16 08:38:53 d2.utils.events]: [0m eta: 9:50:15  iter: 1419  total_loss: 1.325  loss_cls: 0.2016  loss_box_reg: 0.4334  loss_mask: 0.2282  loss_rpn_cls: 0.123  loss_rpn_loc: 0.3381  time: 4.2259  data_time: 0.0040  lr: 0.01  max_mem: 0M
[32m[11/16 08:40:15 d2.utils.events]: [0m eta: 9:46:15  iter: 1439  total_loss: 1.254  loss_cls: 0.2097  loss_box_reg: 0.3837  loss_mask: 0.203  loss_rpn_cls: 0.1263  loss_rpn_loc: 0.3636  time: 4.2238  data_time: 0.0063  lr: 0.01  max_mem: 0M
[32m[11/16 08:41:33 d2.utils.events]: [0m eta: 9:44:37  iter: 1459  total_loss: 1.449  loss_cls: 0.213  loss_box_reg: 0.4328  loss_mask: 0.2286  loss_rpn_cls: 0.2119  loss_rpn_loc: 0.3639  time: 4.2196  data_time: 0.0060  lr: 0.01  max_mem: 0M
[32m[11/16 08:42:55 d2.utils.events]: [0m eta: 9:43:15  iter: 1479  total_loss: 1.403  loss_cls: 0.225  loss_box_reg: 0.4158  loss_mask: 0.2173  loss_rpn_cls: 0.1601  loss_rpn_loc: 0.3777  time: 4.2178  data_time: 0.0060  lr: 0.01  max_mem: 0M
[32m[11/16 08:44:11 d2.utils.events]: [0m eta: 9:41:37  iter: 1499  total_loss: 1.342  loss_cls: 0.2035  loss_box_reg: 0.4183  loss_mask: 0.2146  loss_rpn_cls: 0.1294  loss_rpn_loc: 0.3596  time: 4.2123  data_time: 0.0052  lr: 0.01  max_mem: 0M
[32m[11/16 08:45:30 d2.utils.events]: [0m eta: 9:38:44  iter: 1519  total_loss: 1.271  loss_cls: 0.187  loss_box_reg: 0.3908  loss_mask: 0.2108  loss_rpn_cls: 0.1201  loss_rpn_loc: 0.3477  time: 4.2091  data_time: 0.0060  lr: 0.01  max_mem: 0M
[32m[11/16 08:46:53 d2.utils.events]: [0m eta: 9:36:50  iter: 1539  total_loss: 1.259  loss_cls: 0.19  loss_box_reg: 0.413  loss_mask: 0.1977  loss_rpn_cls: 0.1161  loss_rpn_loc: 0.3371  time: 4.2081  data_time: 0.0060  lr: 0.01  max_mem: 0M
[32m[11/16 08:48:14 d2.utils.events]: [0m eta: 9:34:34  iter: 1559  total_loss: 1.296  loss_cls: 0.2046  loss_box_reg: 0.4236  loss_mask: 0.2153  loss_rpn_cls: 0.1196  loss_rpn_loc: 0.3402  time: 4.2061  data_time: 0.0066  lr: 0.01  max_mem: 0M
[32m[11/16 08:49:33 d2.utils.events]: [0m eta: 9:32:20  iter: 1579  total_loss: 1.339  loss_cls: 0.1995  loss_box_reg: 0.4175  loss_mask: 0.215  loss_rpn_cls: 0.1754  loss_rpn_loc: 0.3511  time: 4.2028  data_time: 0.0054  lr: 0.01  max_mem: 0M
[32m[11/16 08:50:55 d2.utils.events]: [0m eta: 9:30:42  iter: 1599  total_loss: 1.271  loss_cls: 0.1997  loss_box_reg: 0.4126  loss_mask: 0.2064  loss_rpn_cls: 0.1141  loss_rpn_loc: 0.3566  time: 4.2013  data_time: 0.0058  lr: 0.01  max_mem: 0M
[32m[11/16 08:52:12 d2.utils.events]: [0m eta: 9:28:38  iter: 1619  total_loss: 1.414  loss_cls: 0.1946  loss_box_reg: 0.4286  loss_mask: 0.2113  loss_rpn_cls: 0.1538  loss_rpn_loc: 0.3989  time: 4.1967  data_time: 0.0063  lr: 0.01  max_mem: 0M
[32m[11/16 08:53:27 d2.utils.events]: [0m eta: 9:27:03  iter: 1639  total_loss: 1.307  loss_cls: 0.1944  loss_box_reg: 0.4055  loss_mask: 0.1981  loss_rpn_cls: 0.1412  loss_rpn_loc: 0.3629  time: 4.1917  data_time: 0.0029  lr: 0.01  max_mem: 0M
[32m[11/16 08:54:46 d2.utils.events]: [0m eta: 9:23:44  iter: 1659  total_loss: 1.307  loss_cls: 0.2057  loss_box_reg: 0.4399  loss_mask: 0.1952  loss_rpn_cls: 0.1406  loss_rpn_loc: 0.3325  time: 4.1886  data_time: 0.0036  lr: 0.01  max_mem: 0M
[32m[11/16 08:56:07 d2.utils.events]: [0m eta: 9:23:27  iter: 1679  total_loss: 1.258  loss_cls: 0.1668  loss_box_reg: 0.4205  loss_mask: 0.2137  loss_rpn_cls: 0.1045  loss_rpn_loc: 0.3334  time: 4.1870  data_time: 0.0043  lr: 0.01  max_mem: 0M
[32m[11/16 08:57:24 d2.utils.events]: [0m eta: 9:20:14  iter: 1699  total_loss: 1.231  loss_cls: 0.1926  loss_box_reg: 0.4186  loss_mask: 0.1951  loss_rpn_cls: 0.1268  loss_rpn_loc: 0.3105  time: 4.1831  data_time: 0.0037  lr: 0.01  max_mem: 0M
[32m[11/16 08:58:44 d2.utils.events]: [0m eta: 9:18:42  iter: 1719  total_loss: 1.266  loss_cls: 0.2084  loss_box_reg: 0.4257  loss_mask: 0.207  loss_rpn_cls: 0.1287  loss_rpn_loc: 0.3185  time: 4.1809  data_time: 0.0039  lr: 0.01  max_mem: 0M
[32m[11/16 09:00:04 d2.utils.events]: [0m eta: 9:17:27  iter: 1739  total_loss: 1.249  loss_cls: 0.2036  loss_box_reg: 0.4399  loss_mask: 0.203  loss_rpn_cls: 0.1187  loss_rpn_loc: 0.3219  time: 4.1790  data_time: 0.0050  lr: 0.01  max_mem: 0M
[32m[11/16 09:01:28 d2.utils.events]: [0m eta: 9:15:35  iter: 1759  total_loss: 1.199  loss_cls: 0.1979  loss_box_reg: 0.4092  loss_mask: 0.2009  loss_rpn_cls: 0.1154  loss_rpn_loc: 0.2968  time: 4.1792  data_time: 0.0031  lr: 0.01  max_mem: 0M
[32m[11/16 09:02:49 d2.utils.events]: [0m eta: 9:14:39  iter: 1779  total_loss: 1.261  loss_cls: 0.1966  loss_box_reg: 0.428  loss_mask: 0.2024  loss_rpn_cls: 0.1028  loss_rpn_loc: 0.3192  time: 4.1773  data_time: 0.0044  lr: 0.01  max_mem: 0M
[32m[11/16 09:04:08 d2.utils.events]: [0m eta: 9:13:24  iter: 1799  total_loss: 1.257  loss_cls: 0.1947  loss_box_reg: 0.3891  loss_mask: 0.2024  loss_rpn_cls: 0.1161  loss_rpn_loc: 0.3368  time: 4.1747  data_time: 0.0050  lr: 0.01  max_mem: 0M
[32m[11/16 09:05:27 d2.utils.events]: [0m eta: 9:11:30  iter: 1819  total_loss: 1.21  loss_cls: 0.1713  loss_box_reg: 0.3918  loss_mask: 0.2015  loss_rpn_cls: 0.1011  loss_rpn_loc: 0.3351  time: 4.1723  data_time: 0.0071  lr: 0.01  max_mem: 0M
[32m[11/16 09:06:48 d2.utils.events]: [0m eta: 9:09:54  iter: 1839  total_loss: 1.214  loss_cls: 0.1612  loss_box_reg: 0.3999  loss_mask: 0.202  loss_rpn_cls: 0.1028  loss_rpn_loc: 0.3306  time: 4.1713  data_time: 0.0058  lr: 0.01  max_mem: 0M
[32m[11/16 09:08:08 d2.utils.events]: [0m eta: 9:07:36  iter: 1859  total_loss: 1.205  loss_cls: 0.187  loss_box_reg: 0.3947  loss_mask: 0.2012  loss_rpn_cls: 0.08679  loss_rpn_loc: 0.2922  time: 4.1692  data_time: 0.0052  lr: 0.01  max_mem: 0M
[32m[11/16 09:09:28 d2.utils.events]: [0m eta: 9:05:49  iter: 1879  total_loss: 1.304  loss_cls: 0.2122  loss_box_reg: 0.4196  loss_mask: 0.1976  loss_rpn_cls: 0.1413  loss_rpn_loc: 0.2999  time: 4.1676  data_time: 0.0046  lr: 0.01  max_mem: 0M
[32m[11/16 09:10:49 d2.utils.events]: [0m eta: 9:04:19  iter: 1899  total_loss: 1.233  loss_cls: 0.1971  loss_box_reg: 0.4058  loss_mask: 0.2037  loss_rpn_cls: 0.1226  loss_rpn_loc: 0.3107  time: 4.1661  data_time: 0.0053  lr: 0.01  max_mem: 0M
[32m[11/16 09:12:13 d2.utils.events]: [0m eta: 9:02:58  iter: 1919  total_loss: 1.2  loss_cls: 0.2068  loss_box_reg: 0.4141  loss_mask: 0.1924  loss_rpn_cls: 0.09015  loss_rpn_loc: 0.2805  time: 4.1665  data_time: 0.0042  lr: 0.01  max_mem: 0M
[32m[11/16 09:13:34 d2.utils.events]: [0m eta: 9:01:33  iter: 1939  total_loss: 1.201  loss_cls: 0.198  loss_box_reg: 0.4036  loss_mask: 0.2141  loss_rpn_cls: 0.09786  loss_rpn_loc: 0.3097  time: 4.1650  data_time: 0.0047  lr: 0.01  max_mem: 0M
[32m[11/16 09:14:51 d2.utils.events]: [0m eta: 8:58:42  iter: 1959  total_loss: 1.23  loss_cls: 0.1772  loss_box_reg: 0.3999  loss_mask: 0.2086  loss_rpn_cls: 0.1086  loss_rpn_loc: 0.3142  time: 4.1619  data_time: 0.0045  lr: 0.01  max_mem: 0M
[32m[11/16 09:16:13 d2.utils.events]: [0m eta: 8:58:05  iter: 1979  total_loss: 1.183  loss_cls: 0.1685  loss_box_reg: 0.3819  loss_mask: 0.1949  loss_rpn_cls: 0.1272  loss_rpn_loc: 0.3191  time: 4.1612  data_time: 0.0064  lr: 0.01  max_mem: 0M
[32m[11/16 09:17:31 d2.utils.events]: [0m eta: 8:55:25  iter: 1999  total_loss: 1.24  loss_cls: 0.1932  loss_box_reg: 0.3955  loss_mask: 0.1857  loss_rpn_cls: 0.1397  loss_rpn_loc: 0.3236  time: 4.1586  data_time: 0.0044  lr: 0.01  max_mem: 0M
[32m[11/16 09:18:47 d2.utils.events]: [0m eta: 8:52:45  iter: 2019  total_loss: 1.24  loss_cls: 0.1801  loss_box_reg: 0.3974  loss_mask: 0.205  loss_rpn_cls: 0.1423  loss_rpn_loc: 0.3206  time: 4.1551  data_time: 0.0057  lr: 0.01  max_mem: 0M
[32m[11/16 09:20:08 d2.utils.events]: [0m eta: 8:51:24  iter: 2039  total_loss: 1.185  loss_cls: 0.1946  loss_box_reg: 0.4119  loss_mask: 0.1912  loss_rpn_cls: 0.09657  loss_rpn_loc: 0.2971  time: 4.1540  data_time: 0.0039  lr: 0.01  max_mem: 0M
[32m[11/16 09:21:31 d2.utils.events]: [0m eta: 8:49:34  iter: 2059  total_loss: 1.195  loss_cls: 0.1759  loss_box_reg: 0.3973  loss_mask: 0.1791  loss_rpn_cls: 0.1034  loss_rpn_loc: 0.2953  time: 4.1542  data_time: 0.0049  lr: 0.01  max_mem: 0M
[32m[11/16 09:22:48 d2.utils.events]: [0m eta: 8:47:14  iter: 2079  total_loss: 1.198  loss_cls: 0.1597  loss_box_reg: 0.3735  loss_mask: 0.2015  loss_rpn_cls: 0.0988  loss_rpn_loc: 0.3569  time: 4.1512  data_time: 0.0041  lr: 0.01  max_mem: 0M
[32m[11/16 09:24:09 d2.utils.events]: [0m eta: 8:45:47  iter: 2099  total_loss: 1.204  loss_cls: 0.1619  loss_box_reg: 0.3864  loss_mask: 0.2109  loss_rpn_cls: 0.1045  loss_rpn_loc: 0.3195  time: 4.1500  data_time: 0.0037  lr: 0.01  max_mem: 0M
[32m[11/16 09:25:26 d2.utils.events]: [0m eta: 8:42:43  iter: 2119  total_loss: 1.227  loss_cls: 0.1773  loss_box_reg: 0.4036  loss_mask: 0.1936  loss_rpn_cls: 0.08832  loss_rpn_loc: 0.302  time: 4.1474  data_time: 0.0040  lr: 0.01  max_mem: 0M
[32m[11/16 09:26:47 d2.utils.events]: [0m eta: 8:39:01  iter: 2139  total_loss: 1.212  loss_cls: 0.1802  loss_box_reg: 0.4365  loss_mask: 0.1856  loss_rpn_cls: 0.111  loss_rpn_loc: 0.2907  time: 4.1463  data_time: 0.0035  lr: 0.01  max_mem: 0M
[32m[11/16 09:28:05 d2.utils.events]: [0m eta: 8:37:00  iter: 2159  total_loss: 1.193  loss_cls: 0.1748  loss_box_reg: 0.4011  loss_mask: 0.1902  loss_rpn_cls: 0.1213  loss_rpn_loc: 0.297  time: 4.1442  data_time: 0.0042  lr: 0.01  max_mem: 0M
[32m[11/16 09:29:26 d2.utils.events]: [0m eta: 8:35:47  iter: 2179  total_loss: 1.249  loss_cls: 0.2113  loss_box_reg: 0.3925  loss_mask: 0.1907  loss_rpn_cls: 0.1298  loss_rpn_loc: 0.3124  time: 4.1433  data_time: 0.0045  lr: 0.01  max_mem: 0M
[32m[11/16 09:30:50 d2.utils.events]: [0m eta: 8:35:03  iter: 2199  total_loss: 1.149  loss_cls: 0.1696  loss_box_reg: 0.3785  loss_mask: 0.1905  loss_rpn_cls: 0.09315  loss_rpn_loc: 0.3198  time: 4.1435  data_time: 0.0087  lr: 0.01  max_mem: 0M
[32m[11/16 09:32:14 d2.utils.events]: [0m eta: 8:33:31  iter: 2219  total_loss: 1.069  loss_cls: 0.1687  loss_box_reg: 0.3728  loss_mask: 0.1857  loss_rpn_cls: 0.07903  loss_rpn_loc: 0.298  time: 4.1439  data_time: 0.0040  lr: 0.01  max_mem: 0M
[32m[11/16 09:33:32 d2.utils.events]: [0m eta: 8:32:12  iter: 2239  total_loss: 1.133  loss_cls: 0.1615  loss_box_reg: 0.3896  loss_mask: 0.19  loss_rpn_cls: 0.08494  loss_rpn_loc: 0.3134  time: 4.1420  data_time: 0.0033  lr: 0.01  max_mem: 0M
[32m[11/16 09:34:53 d2.utils.events]: [0m eta: 8:32:23  iter: 2259  total_loss: 1.118  loss_cls: 0.1738  loss_box_reg: 0.3996  loss_mask: 0.1852  loss_rpn_cls: 0.07861  loss_rpn_loc: 0.2843  time: 4.1409  data_time: 0.0060  lr: 0.01  max_mem: 0M
[32m[11/16 09:36:10 d2.utils.events]: [0m eta: 8:30:48  iter: 2279  total_loss: 1.255  loss_cls: 0.1881  loss_box_reg: 0.3894  loss_mask: 0.2068  loss_rpn_cls: 0.1391  loss_rpn_loc: 0.2993  time: 4.1384  data_time: 0.0045  lr: 0.01  max_mem: 0M
[32m[11/16 09:37:29 d2.utils.events]: [0m eta: 8:29:18  iter: 2299  total_loss: 1.254  loss_cls: 0.1884  loss_box_reg: 0.3844  loss_mask: 0.199  loss_rpn_cls: 0.1208  loss_rpn_loc: 0.3353  time: 4.1369  data_time: 0.0045  lr: 0.01  max_mem: 0M
[32m[11/16 09:38:49 d2.utils.events]: [0m eta: 8:25:55  iter: 2319  total_loss: 1.205  loss_cls: 0.1711  loss_box_reg: 0.3836  loss_mask: 0.196  loss_rpn_cls: 0.1087  loss_rpn_loc: 0.3123  time: 4.1355  data_time: 0.0039  lr: 0.01  max_mem: 0M
[32m[11/16 09:40:13 d2.utils.events]: [0m eta: 8:23:58  iter: 2339  total_loss: 1.201  loss_cls: 0.1911  loss_box_reg: 0.4036  loss_mask: 0.1798  loss_rpn_cls: 0.07975  loss_rpn_loc: 0.3027  time: 4.1361  data_time: 0.0044  lr: 0.01  max_mem: 0M
[32m[11/16 09:41:31 d2.utils.events]: [0m eta: 8:21:35  iter: 2359  total_loss: 1.136  loss_cls: 0.1758  loss_box_reg: 0.3948  loss_mask: 0.1968  loss_rpn_cls: 0.1175  loss_rpn_loc: 0.2786  time: 4.1342  data_time: 0.0041  lr: 0.01  max_mem: 0M
[32m[11/16 09:43:12 d2.utils.events]: [0m eta: 8:20:56  iter: 2379  total_loss: 1.169  loss_cls: 0.1804  loss_box_reg: 0.3982  loss_mask: 0.1846  loss_rpn_cls: 0.1162  loss_rpn_loc: 0.2907  time: 4.1418  data_time: 0.0068  lr: 0.01  max_mem: 0M
[32m[11/16 09:45:27 d2.utils.events]: [0m eta: 8:21:35  iter: 2399  total_loss: 1.108  loss_cls: 0.1792  loss_box_reg: 0.3818  loss_mask: 0.1799  loss_rpn_cls: 0.07358  loss_rpn_loc: 0.2763  time: 4.1637  data_time: 0.0042  lr: 0.01  max_mem: 0M
[32m[11/16 09:47:07 d2.utils.events]: [0m eta: 8:23:28  iter: 2419  total_loss: 1.122  loss_cls: 0.1643  loss_box_reg: 0.3739  loss_mask: 0.1813  loss_rpn_cls: 0.08995  loss_rpn_loc: 0.2913  time: 4.1705  data_time: 0.0048  lr: 0.01  max_mem: 0M
[32m[11/16 09:48:28 d2.utils.events]: [0m eta: 8:22:09  iter: 2439  total_loss: 1.085  loss_cls: 0.1547  loss_box_reg: 0.3777  loss_mask: 0.1821  loss_rpn_cls: 0.09249  loss_rpn_loc: 0.2675  time: 4.1695  data_time: 0.0037  lr: 0.01  max_mem: 0M
[32m[11/16 09:49:52 d2.utils.events]: [0m eta: 8:21:56  iter: 2459  total_loss: 1.061  loss_cls: 0.1635  loss_box_reg: 0.3647  loss_mask: 0.1843  loss_rpn_cls: 0.08487  loss_rpn_loc: 0.2697  time: 4.1697  data_time: 0.0040  lr: 0.01  max_mem: 0M
[32m[11/16 09:51:19 d2.utils.events]: [0m eta: 8:20:44  iter: 2479  total_loss: 1.127  loss_cls: 0.1562  loss_box_reg: 0.3631  loss_mask: 0.1769  loss_rpn_cls: 0.1052  loss_rpn_loc: 0.2872  time: 4.1714  data_time: 0.0052  lr: 0.01  max_mem: 0M
[32m[11/16 09:52:38 d2.utils.events]: [0m eta: 8:19:16  iter: 2499  total_loss: 1.085  loss_cls: 0.1485  loss_box_reg: 0.3653  loss_mask: 0.1918  loss_rpn_cls: 0.09622  loss_rpn_loc: 0.2592  time: 4.1694  data_time: 0.0049  lr: 0.01  max_mem: 0M
[32m[11/16 09:54:00 d2.utils.events]: [0m eta: 8:18:16  iter: 2519  total_loss: 1.098  loss_cls: 0.1615  loss_box_reg: 0.3861  loss_mask: 0.1854  loss_rpn_cls: 0.1029  loss_rpn_loc: 0.2625  time: 4.1689  data_time: 0.0062  lr: 0.01  max_mem: 0M
[32m[11/16 09:55:24 d2.utils.events]: [0m eta: 8:16:56  iter: 2539  total_loss: 1.126  loss_cls: 0.1702  loss_box_reg: 0.3756  loss_mask: 0.1856  loss_rpn_cls: 0.1039  loss_rpn_loc: 0.285  time: 4.1690  data_time: 0.0037  lr: 0.01  max_mem: 0M
[32m[11/16 09:56:52 d2.utils.events]: [0m eta: 8:15:58  iter: 2559  total_loss: 1.109  loss_cls: 0.1644  loss_box_reg: 0.3783  loss_mask: 0.1751  loss_rpn_cls: 0.09161  loss_rpn_loc: 0.289  time: 4.1707  data_time: 0.0040  lr: 0.01  max_mem: 0M
[32m[11/16 09:58:45 d2.utils.events]: [0m eta: 8:17:07  iter: 2579  total_loss: 1.006  loss_cls: 0.1719  loss_box_reg: 0.3584  loss_mask: 0.1738  loss_rpn_cls: 0.0884  loss_rpn_loc: 0.2538  time: 4.1824  data_time: 0.0048  lr: 0.01  max_mem: 0M
[32m[11/16 10:01:06 d2.utils.events]: [0m eta: 8:17:56  iter: 2599  total_loss: 1.117  loss_cls: 0.1686  loss_box_reg: 0.3549  loss_mask: 0.1699  loss_rpn_cls: 0.1183  loss_rpn_loc: 0.2556  time: 4.2043  data_time: 0.0051  lr: 0.01  max_mem: 0M
[32m[11/16 10:03:17 d2.utils.events]: [0m eta: 8:18:20  iter: 2619  total_loss: 1.067  loss_cls: 0.1534  loss_box_reg: 0.3754  loss_mask: 0.1756  loss_rpn_cls: 0.08939  loss_rpn_loc: 0.2642  time: 4.2224  data_time: 0.0031  lr: 0.01  max_mem: 0M
[32m[11/16 10:05:34 d2.utils.events]: [0m eta: 8:19:30  iter: 2639  total_loss: 1.051  loss_cls: 0.1626  loss_box_reg: 0.3348  loss_mask: 0.1826  loss_rpn_cls: 0.06981  loss_rpn_loc: 0.2778  time: 4.2424  data_time: 0.0050  lr: 0.01  max_mem: 0M
[32m[11/16 10:08:05 d2.utils.events]: [0m eta: 8:21:40  iter: 2659  total_loss: 1.01  loss_cls: 0.1737  loss_box_reg: 0.3599  loss_mask: 0.1689  loss_rpn_cls: 0.07881  loss_rpn_loc: 0.2757  time: 4.2672  data_time: 0.0050  lr: 0.01  max_mem: 0M
[32m[11/16 10:10:24 d2.utils.events]: [0m eta: 8:23:06  iter: 2679  total_loss: 1.071  loss_cls: 0.1703  loss_box_reg: 0.3595  loss_mask: 0.173  loss_rpn_cls: 0.1065  loss_rpn_loc: 0.2479  time: 4.2870  data_time: 0.0036  lr: 0.01  max_mem: 0M
[32m[11/16 10:12:09 d2.utils.events]: [0m eta: 8:26:13  iter: 2699  total_loss: 0.9878  loss_cls: 0.1259  loss_box_reg: 0.3331  loss_mask: 0.1707  loss_rpn_cls: 0.09891  loss_rpn_loc: 0.2704  time: 4.2942  data_time: 0.0042  lr: 0.01  max_mem: 0M
[32m[11/16 10:14:24 d2.utils.events]: [0m eta: 8:30:43  iter: 2719  total_loss: 1.031  loss_cls: 0.1371  loss_box_reg: 0.3391  loss_mask: 0.1693  loss_rpn_cls: 0.08677  loss_rpn_loc: 0.2691  time: 4.3123  data_time: 0.0043  lr: 0.01  max_mem: 0M
[32m[11/16 10:16:50 d2.utils.events]: [0m eta: 8:30:23  iter: 2739  total_loss: 1.048  loss_cls: 0.164  loss_box_reg: 0.3499  loss_mask: 0.1699  loss_rpn_cls: 0.1055  loss_rpn_loc: 0.2832  time: 4.3342  data_time: 0.0046  lr: 0.01  max_mem: 0M
[32m[11/16 10:19:06 d2.utils.events]: [0m eta: 8:31:21  iter: 2759  total_loss: 1.053  loss_cls: 0.1531  loss_box_reg: 0.356  loss_mask: 0.1844  loss_rpn_cls: 0.08681  loss_rpn_loc: 0.2735  time: 4.3519  data_time: 0.0043  lr: 0.01  max_mem: 0M
[32m[11/16 10:20:31 d2.utils.events]: [0m eta: 8:30:38  iter: 2779  total_loss: 1.019  loss_cls: 0.149  loss_box_reg: 0.3446  loss_mask: 0.1815  loss_rpn_cls: 0.06864  loss_rpn_loc: 0.2687  time: 4.3512  data_time: 0.0035  lr: 0.01  max_mem: 0M
[32m[11/16 10:21:51 d2.utils.events]: [0m eta: 8:28:27  iter: 2799  total_loss: 1.084  loss_cls: 0.1689  loss_box_reg: 0.3448  loss_mask: 0.1728  loss_rpn_cls: 0.117  loss_rpn_loc: 0.2945  time: 4.3488  data_time: 0.0041  lr: 0.01  max_mem: 0M
[32m[11/16 10:23:10 d2.utils.events]: [0m eta: 8:26:57  iter: 2819  total_loss: 1.035  loss_cls: 0.1507  loss_box_reg: 0.3488  loss_mask: 0.161  loss_rpn_cls: 0.08377  loss_rpn_loc: 0.2539  time: 4.3459  data_time: 0.0032  lr: 0.01  max_mem: 0M
[32m[11/16 10:24:33 d2.utils.events]: [0m eta: 8:25:37  iter: 2839  total_loss: 1.09  loss_cls: 0.1626  loss_box_reg: 0.3524  loss_mask: 0.1705  loss_rpn_cls: 0.08018  loss_rpn_loc: 0.2817  time: 4.3443  data_time: 0.0038  lr: 0.01  max_mem: 0M
[32m[11/16 10:25:56 d2.utils.events]: [0m eta: 8:24:37  iter: 2859  total_loss: 1.043  loss_cls: 0.1509  loss_box_reg: 0.3489  loss_mask: 0.1746  loss_rpn_cls: 0.08229  loss_rpn_loc: 0.2626  time: 4.3430  data_time: 0.0063  lr: 0.01  max_mem: 0M
[32m[11/16 10:27:15 d2.utils.events]: [0m eta: 8:22:53  iter: 2879  total_loss: 1.049  loss_cls: 0.1347  loss_box_reg: 0.362  loss_mask: 0.184  loss_rpn_cls: 0.07654  loss_rpn_loc: 0.2649  time: 4.3404  data_time: 0.0036  lr: 0.01  max_mem: 0M
[32m[11/16 10:28:35 d2.utils.events]: [0m eta: 8:21:53  iter: 2899  total_loss: 1.064  loss_cls: 0.1567  loss_box_reg: 0.3458  loss_mask: 0.1754  loss_rpn_cls: 0.08249  loss_rpn_loc: 0.2729  time: 4.3381  data_time: 0.0034  lr: 0.01  max_mem: 0M
[32m[11/16 10:29:52 d2.utils.events]: [0m eta: 8:19:16  iter: 2919  total_loss: 1.128  loss_cls: 0.1686  loss_box_reg: 0.3505  loss_mask: 0.1782  loss_rpn_cls: 0.08551  loss_rpn_loc: 0.3151  time: 4.3348  data_time: 0.0034  lr: 0.01  max_mem: 0M
[32m[11/16 10:31:19 d2.utils.events]: [0m eta: 8:18:04  iter: 2939  total_loss: 1.039  loss_cls: 0.1599  loss_box_reg: 0.3369  loss_mask: 0.1753  loss_rpn_cls: 0.08297  loss_rpn_loc: 0.2593  time: 4.3348  data_time: 0.0036  lr: 0.01  max_mem: 0M
[32m[11/16 10:32:43 d2.utils.events]: [0m eta: 8:16:58  iter: 2959  total_loss: 1.027  loss_cls: 0.1565  loss_box_reg: 0.3335  loss_mask: 0.1691  loss_rpn_cls: 0.09071  loss_rpn_loc: 0.2657  time: 4.3336  data_time: 0.0040  lr: 0.01  max_mem: 0M
[32m[11/16 10:34:06 d2.utils.events]: [0m eta: 8:15:21  iter: 2979  total_loss: 1.043  loss_cls: 0.1534  loss_box_reg: 0.3309  loss_mask: 0.1697  loss_rpn_cls: 0.08852  loss_rpn_loc: 0.2752  time: 4.3323  data_time: 0.0043  lr: 0.01  max_mem: 0M
[32m[11/16 10:35:29 d2.utils.events]: [0m eta: 8:14:08  iter: 2999  total_loss: 1.081  loss_cls: 0.151  loss_box_reg: 0.3557  loss_mask: 0.1753  loss_rpn_cls: 0.104  loss_rpn_loc: 0.2667  time: 4.3311  data_time: 0.0040  lr: 0.01  max_mem: 0M
[32m[11/16 10:36:53 d2.utils.events]: [0m eta: 8:15:06  iter: 3019  total_loss: 1.047  loss_cls: 0.1541  loss_box_reg: 0.3476  loss_mask: 0.1695  loss_rpn_cls: 0.1088  loss_rpn_loc: 0.2522  time: 4.3301  data_time: 0.0042  lr: 0.01  max_mem: 0M
[32m[11/16 10:38:14 d2.utils.events]: [0m eta: 8:13:07  iter: 3039  total_loss: 1.068  loss_cls: 0.1616  loss_box_reg: 0.3394  loss_mask: 0.1626  loss_rpn_cls: 0.1103  loss_rpn_loc: 0.2852  time: 4.3285  data_time: 0.0054  lr: 0.01  max_mem: 0M
[32m[11/16 10:39:33 d2.utils.events]: [0m eta: 8:11:22  iter: 3059  total_loss: 1.042  loss_cls: 0.1487  loss_box_reg: 0.3483  loss_mask: 0.1658  loss_rpn_cls: 0.09067  loss_rpn_loc: 0.2564  time: 4.3260  data_time: 0.0053  lr: 0.01  max_mem: 0M
[32m[11/16 10:40:58 d2.utils.events]: [0m eta: 8:10:38  iter: 3079  total_loss: 1.025  loss_cls: 0.1392  loss_box_reg: 0.3347  loss_mask: 0.158  loss_rpn_cls: 0.09302  loss_rpn_loc: 0.2585  time: 4.3254  data_time: 0.0048  lr: 0.01  max_mem: 0M
[32m[11/16 10:42:19 d2.utils.events]: [0m eta: 8:09:25  iter: 3099  total_loss: 0.947  loss_cls: 0.1221  loss_box_reg: 0.3232  loss_mask: 0.1644  loss_rpn_cls: 0.08515  loss_rpn_loc: 0.2515  time: 4.3235  data_time: 0.0043  lr: 0.01  max_mem: 0M
[32m[11/16 10:43:39 d2.utils.events]: [0m eta: 8:08:00  iter: 3119  total_loss: 0.9383  loss_cls: 0.1274  loss_box_reg: 0.3216  loss_mask: 0.1616  loss_rpn_cls: 0.07661  loss_rpn_loc: 0.2386  time: 4.3215  data_time: 0.0041  lr: 0.01  max_mem: 0M
[32m[11/16 10:45:01 d2.utils.events]: [0m eta: 8:06:47  iter: 3139  total_loss: 0.9976  loss_cls: 0.1533  loss_box_reg: 0.3568  loss_mask: 0.1722  loss_rpn_cls: 0.07431  loss_rpn_loc: 0.2545  time: 4.3202  data_time: 0.0042  lr: 0.01  max_mem: 0M
[32m[11/16 10:46:25 d2.utils.events]: [0m eta: 8:06:37  iter: 3159  total_loss: 1.033  loss_cls: 0.1516  loss_box_reg: 0.3414  loss_mask: 0.1701  loss_rpn_cls: 0.1004  loss_rpn_loc: 0.2641  time: 4.3194  data_time: 0.0045  lr: 0.01  max_mem: 0M
[32m[11/16 10:47:47 d2.utils.events]: [0m eta: 8:05:03  iter: 3179  total_loss: 1.041  loss_cls: 0.1429  loss_box_reg: 0.3573  loss_mask: 0.1854  loss_rpn_cls: 0.08064  loss_rpn_loc: 0.2444  time: 4.3178  data_time: 0.0040  lr: 0.01  max_mem: 0M
[32m[11/16 10:49:10 d2.utils.events]: [0m eta: 8:03:38  iter: 3199  total_loss: 0.944  loss_cls: 0.1391  loss_box_reg: 0.3423  loss_mask: 0.1733  loss_rpn_cls: 0.07126  loss_rpn_loc: 0.2453  time: 4.3169  data_time: 0.0040  lr: 0.01  max_mem: 0M
[32m[11/16 10:50:30 d2.utils.events]: [0m eta: 8:00:46  iter: 3219  total_loss: 1.061  loss_cls: 0.1326  loss_box_reg: 0.3483  loss_mask: 0.1696  loss_rpn_cls: 0.08634  loss_rpn_loc: 0.2601  time: 4.3149  data_time: 0.0049  lr: 0.01  max_mem: 0M
[32m[11/16 10:52:03 d2.utils.events]: [0m eta: 8:01:22  iter: 3239  total_loss: 1.018  loss_cls: 0.1333  loss_box_reg: 0.3369  loss_mask: 0.1736  loss_rpn_cls: 0.09161  loss_rpn_loc: 0.2505  time: 4.3171  data_time: 0.0082  lr: 0.01  max_mem: 0M
[32m[11/16 10:53:26 d2.utils.events]: [0m eta: 7:59:56  iter: 3259  total_loss: 0.966  loss_cls: 0.1434  loss_box_reg: 0.3133  loss_mask: 0.157  loss_rpn_cls: 0.09348  loss_rpn_loc: 0.2535  time: 4.3158  data_time: 0.0038  lr: 0.01  max_mem: 0M
[32m[11/16 10:54:48 d2.utils.events]: [0m eta: 8:00:47  iter: 3279  total_loss: 0.9484  loss_cls: 0.1387  loss_box_reg: 0.3245  loss_mask: 0.1551  loss_rpn_cls: 0.06881  loss_rpn_loc: 0.2273  time: 4.3145  data_time: 0.0039  lr: 0.01  max_mem: 0M
[32m[11/16 10:56:11 d2.utils.events]: [0m eta: 7:58:52  iter: 3299  total_loss: 0.8888  loss_cls: 0.1253  loss_box_reg: 0.3153  loss_mask: 0.1569  loss_rpn_cls: 0.05822  loss_rpn_loc: 0.2395  time: 4.3136  data_time: 0.0039  lr: 0.01  max_mem: 0M
[32m[11/16 10:57:30 d2.utils.events]: [0m eta: 7:57:26  iter: 3319  total_loss: 0.9014  loss_cls: 0.12  loss_box_reg: 0.3145  loss_mask: 0.1611  loss_rpn_cls: 0.07145  loss_rpn_loc: 0.2354  time: 4.3114  data_time: 0.0049  lr: 0.01  max_mem: 0M
[32m[11/16 10:58:53 d2.utils.events]: [0m eta: 7:56:29  iter: 3339  total_loss: 0.898  loss_cls: 0.1334  loss_box_reg: 0.3197  loss_mask: 0.1573  loss_rpn_cls: 0.06355  loss_rpn_loc: 0.2227  time: 4.3103  data_time: 0.0042  lr: 0.01  max_mem: 0M
[32m[11/16 11:00:14 d2.utils.events]: [0m eta: 7:55:39  iter: 3359  total_loss: 0.9784  loss_cls: 0.1284  loss_box_reg: 0.3278  loss_mask: 0.1624  loss_rpn_cls: 0.08232  loss_rpn_loc: 0.2643  time: 4.3089  data_time: 0.0033  lr: 0.01  max_mem: 0M
[32m[11/16 11:01:56 d2.utils.events]: [0m eta: 7:54:13  iter: 3379  total_loss: 0.9832  loss_cls: 0.1424  loss_box_reg: 0.3456  loss_mask: 0.1696  loss_rpn_cls: 0.0717  loss_rpn_loc: 0.2602  time: 4.3134  data_time: 0.0035  lr: 0.01  max_mem: 0M
[32m[11/16 11:03:29 d2.utils.events]: [0m eta: 7:51:08  iter: 3399  total_loss: 1.019  loss_cls: 0.1386  loss_box_reg: 0.3491  loss_mask: 0.1769  loss_rpn_cls: 0.08901  loss_rpn_loc: 0.253  time: 4.3154  data_time: 0.0036  lr: 0.01  max_mem: 0M
[32m[11/16 11:04:57 d2.utils.events]: [0m eta: 7:49:07  iter: 3419  total_loss: 0.956  loss_cls: 0.1415  loss_box_reg: 0.3312  loss_mask: 0.1639  loss_rpn_cls: 0.07054  loss_rpn_loc: 0.2406  time: 4.3159  data_time: 0.0051  lr: 0.01  max_mem: 0M
[32m[11/16 11:06:26 d2.utils.events]: [0m eta: 7:50:26  iter: 3439  total_loss: 1.003  loss_cls: 0.1498  loss_box_reg: 0.3496  loss_mask: 0.1696  loss_rpn_cls: 0.08656  loss_rpn_loc: 0.2535  time: 4.3168  data_time: 0.0042  lr: 0.01  max_mem: 0M
[32m[11/16 11:07:57 d2.utils.events]: [0m eta: 7:50:27  iter: 3459  total_loss: 0.9999  loss_cls: 0.1453  loss_box_reg: 0.329  loss_mask: 0.1707  loss_rpn_cls: 0.09994  loss_rpn_loc: 0.2578  time: 4.3180  data_time: 0.0041  lr: 0.01  max_mem: 0M
[32m[11/16 11:09:17 d2.utils.events]: [0m eta: 7:48:13  iter: 3479  total_loss: 0.9697  loss_cls: 0.1486  loss_box_reg: 0.3267  loss_mask: 0.1603  loss_rpn_cls: 0.08953  loss_rpn_loc: 0.2426  time: 4.3163  data_time: 0.0040  lr: 0.01  max_mem: 0M
[32m[11/16 11:10:40 d2.utils.events]: [0m eta: 7:47:48  iter: 3499  total_loss: 0.9644  loss_cls: 0.1399  loss_box_reg: 0.3248  loss_mask: 0.1586  loss_rpn_cls: 0.06995  loss_rpn_loc: 0.2531  time: 4.3154  data_time: 0.0037  lr: 0.01  max_mem: 0M
