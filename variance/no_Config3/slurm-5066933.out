Registered Datasets: ['satellite_Train', 'satellite_Val']
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S06_02_SE1_500X71.png
	num_instances: 104
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S03_02_SE1_1250X35.png
	num_instances: 128
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/HP743_6S_250x.png
	num_instances: 102
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S08_03_SE1_1000X03.png
	num_instances: 88
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S06_01_SE1_500X67.png
	num_instances: 54
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S04_02_SE1_1000X50.png
	num_instances: 45
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S03_03_SE1_1250X41.png
	num_instances: 111
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S02_01_SE1_300X14.png
	num_instances: 98
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/HP743_2S_250x.png
	num_instances: 49
Weights not found, weights will be downloaded from source: https://dl.fbaipublicfiles.com/detectron2/COCO-InstanceSegmentation/mask_rcnn_R_50_FPN_3x/137849600/model_final_f10217.pkl
[32m[11/16 00:04:36 d2.engine.defaults]: [0mModel:
GeneralizedRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): StandardROIHeads(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): FastRCNNConvFCHead(
      (flatten): Flatten(start_dim=1, end_dim=-1)
      (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      (fc_relu1): ReLU()
      (fc2): Linear(in_features=1024, out_features=1024, bias=True)
      (fc_relu2): ReLU()
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=1024, out_features=2, bias=True)
      (bbox_pred): Linear(in_features=1024, out_features=4, bias=True)
    )
    (mask_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(14, 14), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(14, 14), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (mask_head): MaskRCNNConvUpsampleHead(
      (mask_fcn1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn2): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn3): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn4): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
      (deconv_relu): ReLU()
      (predictor): Conv2d(256, 1, kernel_size=(1, 1), stride=(1, 1))
    )
  )
)
[32m[11/16 00:04:36 d2.data.build]: [0mRemoved 0 images with no usable annotations. 20 images left.
[32m[11/16 00:04:36 d2.data.build]: [0mDistribution of instances among all 1 categories:
[36m|  category  | #instances   |
|:----------:|:-------------|
| satellite  | 1412         |
|            |              |[0m
[32m[11/16 00:04:36 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[32m[11/16 00:04:36 d2.data.build]: [0mUsing training sampler TrainingSampler
[32m[11/16 00:04:36 d2.data.common]: [0mSerializing 20 elements to byte tensors and concatenating them all ...
[32m[11/16 00:04:36 d2.data.common]: [0mSerialized dataset takes 0.46 MiB
[5m[31mWARNING[0m [32m[11/16 00:04:37 d2.solver.build]: [0mSOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[32m[11/16 00:04:37 d2.checkpoint.c2_model_loading]: [0mRenaming Caffe2 weights ......
[32m[11/16 00:04:37 d2.checkpoint.c2_model_loading]: [0mFollowing weights matched with submodule backbone.bottom_up:
| Names in Model    | Names in Checkpoint      | Shapes                                          |
|:------------------|:-------------------------|:------------------------------------------------|
| res2.0.conv1.*    | res2_0_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,1,1)             |
| res2.0.conv2.*    | res2_0_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.0.conv3.*    | res2_0_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.0.shortcut.* | res2_0_branch1_{bn_*,w}  | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.1.conv1.*    | res2_1_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,256,1,1)            |
| res2.1.conv2.*    | res2_1_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.1.conv3.*    | res2_1_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.2.conv1.*    | res2_2_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,256,1,1)            |
| res2.2.conv2.*    | res2_2_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.2.conv3.*    | res2_2_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res3.0.conv1.*    | res3_0_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,256,1,1)       |
| res3.0.conv2.*    | res3_0_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.0.conv3.*    | res3_0_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.0.shortcut.* | res3_0_branch1_{bn_*,w}  | (512,) (512,) (512,) (512,) (512,256,1,1)       |
| res3.1.conv1.*    | res3_1_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.1.conv2.*    | res3_1_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.1.conv3.*    | res3_1_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.2.conv1.*    | res3_2_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.2.conv2.*    | res3_2_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.2.conv3.*    | res3_2_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.3.conv1.*    | res3_3_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.3.conv2.*    | res3_3_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.3.conv3.*    | res3_3_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res4.0.conv1.*    | res4_0_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,512,1,1)       |
| res4.0.conv2.*    | res4_0_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.0.conv3.*    | res4_0_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.0.shortcut.* | res4_0_branch1_{bn_*,w}  | (1024,) (1024,) (1024,) (1024,) (1024,512,1,1)  |
| res4.1.conv1.*    | res4_1_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.1.conv2.*    | res4_1_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.1.conv3.*    | res4_1_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.2.conv1.*    | res4_2_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.2.conv2.*    | res4_2_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.2.conv3.*    | res4_2_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.3.conv1.*    | res4_3_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.3.conv2.*    | res4_3_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.3.conv3.*    | res4_3_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.4.conv1.*    | res4_4_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.4.conv2.*    | res4_4_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.4.conv3.*    | res4_4_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.5.conv1.*    | res4_5_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.5.conv2.*    | res4_5_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.5.conv3.*    | res4_5_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res5.0.conv1.*    | res5_0_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,1024,1,1)      |
| res5.0.conv2.*    | res5_0_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.0.conv3.*    | res5_0_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| res5.0.shortcut.* | res5_0_branch1_{bn_*,w}  | (2048,) (2048,) (2048,) (2048,) (2048,1024,1,1) |
| res5.1.conv1.*    | res5_1_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,2048,1,1)      |
| res5.1.conv2.*    | res5_1_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.1.conv3.*    | res5_1_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| res5.2.conv1.*    | res5_2_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,2048,1,1)      |
| res5.2.conv2.*    | res5_2_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.2.conv3.*    | res5_2_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| stem.conv1.norm.* | res_conv1_bn_*           | (64,) (64,) (64,) (64,)                         |
| stem.conv1.weight | conv1_w                  | (64, 3, 7, 7)                                   |
[32m[11/16 00:04:37 d2.engine.train_loop]: [0mStarting training from iteration 0
[32m[11/16 00:04:40 d2.utils.events]: [0m eta: 0:16:53  iter: 19  total_loss: 3.096  loss_cls: 0.5494  loss_box_reg: 0.04485  loss_mask: 0.6709  loss_rpn_cls: 0.6908  loss_rpn_loc: 1.255  time: 0.1046  data_time: 0.0260  lr: 0.00019981  max_mem: 1710M
[32m[11/16 00:04:42 d2.utils.events]: [0m eta: 0:16:47  iter: 39  total_loss: 2.303  loss_cls: 0.2964  loss_box_reg: 0.03512  loss_mask: 0.6024  loss_rpn_cls: 0.6148  loss_rpn_loc: 0.7421  time: 0.1040  data_time: 0.0018  lr: 0.00039961  max_mem: 1710M
[32m[11/16 00:04:44 d2.utils.events]: [0m eta: 0:16:41  iter: 59  total_loss: 2.04  loss_cls: 0.2292  loss_box_reg: 0.04157  loss_mask: 0.5812  loss_rpn_cls: 0.5433  loss_rpn_loc: 0.6109  time: 0.1030  data_time: 0.0019  lr: 0.00059941  max_mem: 1804M
[32m[11/16 00:04:46 d2.utils.events]: [0m eta: 0:16:45  iter: 79  total_loss: 2.13  loss_cls: 0.2269  loss_box_reg: 0.1492  loss_mask: 0.556  loss_rpn_cls: 0.5665  loss_rpn_loc: 0.5606  time: 0.1032  data_time: 0.0019  lr: 0.00079921  max_mem: 1804M
[32m[11/16 00:04:48 d2.utils.events]: [0m eta: 0:16:50  iter: 99  total_loss: 2.197  loss_cls: 0.2734  loss_box_reg: 0.2643  loss_mask: 0.5559  loss_rpn_cls: 0.4645  loss_rpn_loc: 0.6217  time: 0.1039  data_time: 0.0019  lr: 0.00099901  max_mem: 1804M
[32m[11/16 00:04:50 d2.utils.events]: [0m eta: 0:17:00  iter: 119  total_loss: 2.176  loss_cls: 0.2646  loss_box_reg: 0.3511  loss_mask: 0.5223  loss_rpn_cls: 0.4311  loss_rpn_loc: 0.4894  time: 0.1044  data_time: 0.0018  lr: 0.0011988  max_mem: 1804M
[32m[11/16 00:04:53 d2.utils.events]: [0m eta: 0:17:07  iter: 139  total_loss: 2.104  loss_cls: 0.2788  loss_box_reg: 0.4493  loss_mask: 0.4895  loss_rpn_cls: 0.3282  loss_rpn_loc: 0.519  time: 0.1050  data_time: 0.0018  lr: 0.0013986  max_mem: 1804M
[32m[11/16 00:04:55 d2.utils.events]: [0m eta: 0:17:10  iter: 159  total_loss: 2.152  loss_cls: 0.3227  loss_box_reg: 0.4439  loss_mask: 0.4599  loss_rpn_cls: 0.3468  loss_rpn_loc: 0.4969  time: 0.1053  data_time: 0.0018  lr: 0.0015984  max_mem: 1804M
[32m[11/16 00:04:57 d2.utils.events]: [0m eta: 0:17:11  iter: 179  total_loss: 1.951  loss_cls: 0.248  loss_box_reg: 0.4211  loss_mask: 0.4285  loss_rpn_cls: 0.295  loss_rpn_loc: 0.4648  time: 0.1058  data_time: 0.0018  lr: 0.0017982  max_mem: 1804M
[32m[11/16 00:04:59 d2.utils.events]: [0m eta: 0:17:17  iter: 199  total_loss: 1.896  loss_cls: 0.2463  loss_box_reg: 0.3587  loss_mask: 0.4119  loss_rpn_cls: 0.2841  loss_rpn_loc: 0.4546  time: 0.1061  data_time: 0.0019  lr: 0.001998  max_mem: 1804M
[32m[11/16 00:05:01 d2.utils.events]: [0m eta: 0:17:25  iter: 219  total_loss: 1.781  loss_cls: 0.2276  loss_box_reg: 0.4293  loss_mask: 0.3894  loss_rpn_cls: 0.2483  loss_rpn_loc: 0.4447  time: 0.1067  data_time: 0.0017  lr: 0.0021978  max_mem: 1804M
[32m[11/16 00:05:04 d2.utils.events]: [0m eta: 0:17:27  iter: 239  total_loss: 1.662  loss_cls: 0.2325  loss_box_reg: 0.3861  loss_mask: 0.3492  loss_rpn_cls: 0.2278  loss_rpn_loc: 0.433  time: 0.1070  data_time: 0.0018  lr: 0.0023976  max_mem: 1804M
[32m[11/16 00:05:06 d2.utils.events]: [0m eta: 0:17:28  iter: 259  total_loss: 1.714  loss_cls: 0.2377  loss_box_reg: 0.4088  loss_mask: 0.3675  loss_rpn_cls: 0.2479  loss_rpn_loc: 0.4146  time: 0.1073  data_time: 0.0019  lr: 0.0025974  max_mem: 1829M
[32m[11/16 00:05:08 d2.utils.events]: [0m eta: 0:17:28  iter: 279  total_loss: 1.568  loss_cls: 0.2161  loss_box_reg: 0.4228  loss_mask: 0.351  loss_rpn_cls: 0.2286  loss_rpn_loc: 0.438  time: 0.1075  data_time: 0.0017  lr: 0.0027972  max_mem: 1829M
[32m[11/16 00:05:10 d2.utils.events]: [0m eta: 0:17:27  iter: 299  total_loss: 1.712  loss_cls: 0.229  loss_box_reg: 0.3364  loss_mask: 0.3323  loss_rpn_cls: 0.2662  loss_rpn_loc: 0.4763  time: 0.1077  data_time: 0.0018  lr: 0.002997  max_mem: 1829M
[32m[11/16 00:05:13 d2.utils.events]: [0m eta: 0:17:22  iter: 319  total_loss: 1.799  loss_cls: 0.2563  loss_box_reg: 0.3821  loss_mask: 0.329  loss_rpn_cls: 0.2759  loss_rpn_loc: 0.5475  time: 0.1076  data_time: 0.0019  lr: 0.0031968  max_mem: 1829M
[32m[11/16 00:05:15 d2.utils.events]: [0m eta: 0:17:20  iter: 339  total_loss: 1.795  loss_cls: 0.2211  loss_box_reg: 0.4239  loss_mask: 0.3699  loss_rpn_cls: 0.2688  loss_rpn_loc: 0.4807  time: 0.1077  data_time: 0.0018  lr: 0.0033966  max_mem: 1829M
[32m[11/16 00:05:17 d2.utils.events]: [0m eta: 0:17:20  iter: 359  total_loss: 1.503  loss_cls: 0.1964  loss_box_reg: 0.3611  loss_mask: 0.3089  loss_rpn_cls: 0.1829  loss_rpn_loc: 0.4216  time: 0.1078  data_time: 0.0020  lr: 0.0035964  max_mem: 1829M
[32m[11/16 00:05:19 d2.utils.events]: [0m eta: 0:17:18  iter: 379  total_loss: 1.568  loss_cls: 0.2466  loss_box_reg: 0.4208  loss_mask: 0.2941  loss_rpn_cls: 0.2343  loss_rpn_loc: 0.4415  time: 0.1080  data_time: 0.0017  lr: 0.0037962  max_mem: 1829M
[32m[11/16 00:05:21 d2.utils.events]: [0m eta: 0:17:18  iter: 399  total_loss: 1.71  loss_cls: 0.2529  loss_box_reg: 0.4714  loss_mask: 0.3002  loss_rpn_cls: 0.2638  loss_rpn_loc: 0.438  time: 0.1082  data_time: 0.0017  lr: 0.003996  max_mem: 1829M
[32m[11/16 00:05:24 d2.utils.events]: [0m eta: 0:17:18  iter: 419  total_loss: 1.723  loss_cls: 0.2586  loss_box_reg: 0.4837  loss_mask: 0.3134  loss_rpn_cls: 0.2175  loss_rpn_loc: 0.417  time: 0.1084  data_time: 0.0019  lr: 0.0041958  max_mem: 1829M
[32m[11/16 00:05:26 d2.utils.events]: [0m eta: 0:17:19  iter: 439  total_loss: 1.746  loss_cls: 0.2789  loss_box_reg: 0.4961  loss_mask: 0.2882  loss_rpn_cls: 0.2595  loss_rpn_loc: 0.4562  time: 0.1087  data_time: 0.0019  lr: 0.0043956  max_mem: 1829M
[32m[11/16 00:05:28 d2.utils.events]: [0m eta: 0:17:19  iter: 459  total_loss: 1.681  loss_cls: 0.263  loss_box_reg: 0.4259  loss_mask: 0.2829  loss_rpn_cls: 0.2308  loss_rpn_loc: 0.4432  time: 0.1089  data_time: 0.0018  lr: 0.0045954  max_mem: 1829M
[32m[11/16 00:05:31 d2.utils.events]: [0m eta: 0:17:19  iter: 479  total_loss: 1.697  loss_cls: 0.2561  loss_box_reg: 0.4636  loss_mask: 0.2968  loss_rpn_cls: 0.2366  loss_rpn_loc: 0.454  time: 0.1091  data_time: 0.0018  lr: 0.0047952  max_mem: 1829M
[32m[11/16 00:05:33 d2.utils.events]: [0m eta: 0:17:15  iter: 499  total_loss: 1.719  loss_cls: 0.2651  loss_box_reg: 0.4811  loss_mask: 0.2841  loss_rpn_cls: 0.2428  loss_rpn_loc: 0.3918  time: 0.1091  data_time: 0.0018  lr: 0.004995  max_mem: 1829M
[32m[11/16 00:05:35 d2.utils.events]: [0m eta: 0:17:20  iter: 519  total_loss: 1.61  loss_cls: 0.2514  loss_box_reg: 0.5209  loss_mask: 0.2679  loss_rpn_cls: 0.1858  loss_rpn_loc: 0.3983  time: 0.1093  data_time: 0.0018  lr: 0.0051948  max_mem: 1829M
[32m[11/16 00:05:38 d2.utils.events]: [0m eta: 0:17:22  iter: 539  total_loss: 1.68  loss_cls: 0.2739  loss_box_reg: 0.5308  loss_mask: 0.2705  loss_rpn_cls: 0.215  loss_rpn_loc: 0.4237  time: 0.1095  data_time: 0.0015  lr: 0.0053946  max_mem: 1829M
[32m[11/16 00:05:40 d2.utils.events]: [0m eta: 0:17:23  iter: 559  total_loss: 1.597  loss_cls: 0.2336  loss_box_reg: 0.4842  loss_mask: 0.2804  loss_rpn_cls: 0.179  loss_rpn_loc: 0.4179  time: 0.1096  data_time: 0.0020  lr: 0.0055944  max_mem: 1829M
[32m[11/16 00:05:42 d2.utils.events]: [0m eta: 0:17:21  iter: 579  total_loss: 1.502  loss_cls: 0.2169  loss_box_reg: 0.3678  loss_mask: 0.2733  loss_rpn_cls: 0.1999  loss_rpn_loc: 0.4616  time: 0.1097  data_time: 0.0017  lr: 0.0057942  max_mem: 1829M
[32m[11/16 00:05:44 d2.utils.events]: [0m eta: 0:17:19  iter: 599  total_loss: 1.518  loss_cls: 0.2158  loss_box_reg: 0.4386  loss_mask: 0.2554  loss_rpn_cls: 0.1745  loss_rpn_loc: 0.4015  time: 0.1098  data_time: 0.0018  lr: 0.005994  max_mem: 1829M
[32m[11/16 00:05:47 d2.utils.events]: [0m eta: 0:17:16  iter: 619  total_loss: 1.641  loss_cls: 0.2459  loss_box_reg: 0.454  loss_mask: 0.2797  loss_rpn_cls: 0.2093  loss_rpn_loc: 0.4299  time: 0.1098  data_time: 0.0018  lr: 0.0061938  max_mem: 1829M
[32m[11/16 00:05:49 d2.utils.events]: [0m eta: 0:17:17  iter: 639  total_loss: 1.533  loss_cls: 0.2344  loss_box_reg: 0.4362  loss_mask: 0.263  loss_rpn_cls: 0.165  loss_rpn_loc: 0.3865  time: 0.1099  data_time: 0.0020  lr: 0.0063936  max_mem: 1829M
[32m[11/16 00:05:51 d2.utils.events]: [0m eta: 0:17:16  iter: 659  total_loss: 1.588  loss_cls: 0.2442  loss_box_reg: 0.4836  loss_mask: 0.2581  loss_rpn_cls: 0.1965  loss_rpn_loc: 0.4123  time: 0.1100  data_time: 0.0018  lr: 0.0065934  max_mem: 1829M
[32m[11/16 00:05:53 d2.utils.events]: [0m eta: 0:17:13  iter: 679  total_loss: 1.566  loss_cls: 0.2427  loss_box_reg: 0.4781  loss_mask: 0.2574  loss_rpn_cls: 0.1602  loss_rpn_loc: 0.406  time: 0.1100  data_time: 0.0017  lr: 0.0067932  max_mem: 1829M
[32m[11/16 00:05:56 d2.utils.events]: [0m eta: 0:17:13  iter: 699  total_loss: 1.638  loss_cls: 0.2426  loss_box_reg: 0.5113  loss_mask: 0.2601  loss_rpn_cls: 0.1992  loss_rpn_loc: 0.3937  time: 0.1101  data_time: 0.0017  lr: 0.006993  max_mem: 1829M
[32m[11/16 00:05:58 d2.utils.events]: [0m eta: 0:17:10  iter: 719  total_loss: 1.627  loss_cls: 0.2725  loss_box_reg: 0.4914  loss_mask: 0.2722  loss_rpn_cls: 0.1777  loss_rpn_loc: 0.4074  time: 0.1102  data_time: 0.0018  lr: 0.0071928  max_mem: 1829M
[32m[11/16 00:06:00 d2.utils.events]: [0m eta: 0:17:10  iter: 739  total_loss: 1.538  loss_cls: 0.2504  loss_box_reg: 0.4971  loss_mask: 0.2695  loss_rpn_cls: 0.1938  loss_rpn_loc: 0.3882  time: 0.1102  data_time: 0.0018  lr: 0.0073926  max_mem: 1829M
[32m[11/16 00:06:03 d2.utils.events]: [0m eta: 0:17:11  iter: 759  total_loss: 1.558  loss_cls: 0.247  loss_box_reg: 0.4795  loss_mask: 0.256  loss_rpn_cls: 0.1734  loss_rpn_loc: 0.3649  time: 0.1104  data_time: 0.0018  lr: 0.0075924  max_mem: 1829M
[32m[11/16 00:06:05 d2.utils.events]: [0m eta: 0:17:09  iter: 779  total_loss: 1.47  loss_cls: 0.2242  loss_box_reg: 0.4842  loss_mask: 0.256  loss_rpn_cls: 0.1554  loss_rpn_loc: 0.4115  time: 0.1105  data_time: 0.0019  lr: 0.0077922  max_mem: 1829M
[32m[11/16 00:06:07 d2.utils.events]: [0m eta: 0:17:06  iter: 799  total_loss: 1.53  loss_cls: 0.2027  loss_box_reg: 0.4488  loss_mask: 0.2386  loss_rpn_cls: 0.1999  loss_rpn_loc: 0.4211  time: 0.1105  data_time: 0.0019  lr: 0.007992  max_mem: 1829M
[32m[11/16 00:06:10 d2.utils.events]: [0m eta: 0:17:05  iter: 819  total_loss: 1.416  loss_cls: 0.1971  loss_box_reg: 0.3923  loss_mask: 0.2381  loss_rpn_cls: 0.1731  loss_rpn_loc: 0.428  time: 0.1106  data_time: 0.0019  lr: 0.0081918  max_mem: 1829M
[32m[11/16 00:06:12 d2.utils.events]: [0m eta: 0:17:05  iter: 839  total_loss: 1.467  loss_cls: 0.2078  loss_box_reg: 0.4444  loss_mask: 0.2479  loss_rpn_cls: 0.1711  loss_rpn_loc: 0.3848  time: 0.1107  data_time: 0.0018  lr: 0.0083916  max_mem: 1829M
[32m[11/16 00:06:14 d2.utils.events]: [0m eta: 0:17:03  iter: 859  total_loss: 1.523  loss_cls: 0.222  loss_box_reg: 0.452  loss_mask: 0.2457  loss_rpn_cls: 0.1813  loss_rpn_loc: 0.3692  time: 0.1108  data_time: 0.0018  lr: 0.0085914  max_mem: 1829M
[32m[11/16 00:06:16 d2.utils.events]: [0m eta: 0:17:01  iter: 879  total_loss: 1.491  loss_cls: 0.2166  loss_box_reg: 0.4341  loss_mask: 0.2438  loss_rpn_cls: 0.1778  loss_rpn_loc: 0.4142  time: 0.1108  data_time: 0.0016  lr: 0.0087912  max_mem: 1829M
[32m[11/16 00:06:19 d2.utils.events]: [0m eta: 0:16:59  iter: 899  total_loss: 1.494  loss_cls: 0.2103  loss_box_reg: 0.4301  loss_mask: 0.2444  loss_rpn_cls: 0.1736  loss_rpn_loc: 0.4281  time: 0.1109  data_time: 0.0018  lr: 0.008991  max_mem: 1829M
[32m[11/16 00:06:21 d2.utils.events]: [0m eta: 0:16:57  iter: 919  total_loss: 1.431  loss_cls: 0.2193  loss_box_reg: 0.4367  loss_mask: 0.2423  loss_rpn_cls: 0.1486  loss_rpn_loc: 0.4084  time: 0.1109  data_time: 0.0019  lr: 0.0091908  max_mem: 1829M
[32m[11/16 00:06:23 d2.utils.events]: [0m eta: 0:16:55  iter: 939  total_loss: 1.409  loss_cls: 0.2212  loss_box_reg: 0.4228  loss_mask: 0.233  loss_rpn_cls: 0.1534  loss_rpn_loc: 0.3895  time: 0.1110  data_time: 0.0018  lr: 0.0093906  max_mem: 1829M
[32m[11/16 00:06:26 d2.utils.events]: [0m eta: 0:16:53  iter: 959  total_loss: 1.474  loss_cls: 0.1972  loss_box_reg: 0.4471  loss_mask: 0.2381  loss_rpn_cls: 0.1879  loss_rpn_loc: 0.4158  time: 0.1110  data_time: 0.0018  lr: 0.0095904  max_mem: 1829M
[32m[11/16 00:06:28 d2.utils.events]: [0m eta: 0:16:51  iter: 979  total_loss: 1.464  loss_cls: 0.2104  loss_box_reg: 0.4455  loss_mask: 0.2246  loss_rpn_cls: 0.2008  loss_rpn_loc: 0.3954  time: 0.1110  data_time: 0.0018  lr: 0.0097902  max_mem: 1829M
[32m[11/16 00:06:30 d2.utils.events]: [0m eta: 0:16:49  iter: 999  total_loss: 1.413  loss_cls: 0.1956  loss_box_reg: 0.4294  loss_mask: 0.2395  loss_rpn_cls: 0.1686  loss_rpn_loc: 0.3791  time: 0.1110  data_time: 0.0018  lr: 0.00999  max_mem: 1829M
[32m[11/16 00:06:32 d2.utils.events]: [0m eta: 0:16:48  iter: 1019  total_loss: 1.474  loss_cls: 0.2223  loss_box_reg: 0.4204  loss_mask: 0.2311  loss_rpn_cls: 0.2035  loss_rpn_loc: 0.3902  time: 0.1110  data_time: 0.0018  lr: 0.01  max_mem: 1829M
[32m[11/16 00:06:35 d2.utils.events]: [0m eta: 0:16:49  iter: 1039  total_loss: 1.469  loss_cls: 0.2343  loss_box_reg: 0.4385  loss_mask: 0.2286  loss_rpn_cls: 0.1617  loss_rpn_loc: 0.3962  time: 0.1111  data_time: 0.0017  lr: 0.01  max_mem: 1829M
[32m[11/16 00:06:37 d2.utils.events]: [0m eta: 0:16:47  iter: 1059  total_loss: 1.446  loss_cls: 0.2234  loss_box_reg: 0.4479  loss_mask: 0.2331  loss_rpn_cls: 0.1752  loss_rpn_loc: 0.3727  time: 0.1111  data_time: 0.0019  lr: 0.01  max_mem: 1829M
[32m[11/16 00:06:39 d2.utils.events]: [0m eta: 0:16:47  iter: 1079  total_loss: 1.411  loss_cls: 0.2328  loss_box_reg: 0.4585  loss_mask: 0.2272  loss_rpn_cls: 0.1542  loss_rpn_loc: 0.351  time: 0.1111  data_time: 0.0017  lr: 0.01  max_mem: 1829M
[32m[11/16 00:06:42 d2.utils.events]: [0m eta: 0:16:46  iter: 1099  total_loss: 1.398  loss_cls: 0.1991  loss_box_reg: 0.4433  loss_mask: 0.2342  loss_rpn_cls: 0.1704  loss_rpn_loc: 0.3734  time: 0.1112  data_time: 0.0017  lr: 0.01  max_mem: 1829M
[32m[11/16 00:06:44 d2.utils.events]: [0m eta: 0:16:43  iter: 1119  total_loss: 1.475  loss_cls: 0.2325  loss_box_reg: 0.466  loss_mask: 0.23  loss_rpn_cls: 0.1841  loss_rpn_loc: 0.3534  time: 0.1112  data_time: 0.0019  lr: 0.01  max_mem: 1829M
[32m[11/16 00:06:46 d2.utils.events]: [0m eta: 0:16:41  iter: 1139  total_loss: 1.455  loss_cls: 0.2193  loss_box_reg: 0.4459  loss_mask: 0.2269  loss_rpn_cls: 0.1332  loss_rpn_loc: 0.3822  time: 0.1112  data_time: 0.0019  lr: 0.01  max_mem: 1829M
[32m[11/16 00:06:49 d2.utils.events]: [0m eta: 0:16:41  iter: 1159  total_loss: 1.454  loss_cls: 0.2125  loss_box_reg: 0.4605  loss_mask: 0.2345  loss_rpn_cls: 0.172  loss_rpn_loc: 0.3763  time: 0.1113  data_time: 0.0019  lr: 0.01  max_mem: 1829M
[32m[11/16 00:06:51 d2.utils.events]: [0m eta: 0:16:39  iter: 1179  total_loss: 1.397  loss_cls: 0.1874  loss_box_reg: 0.4332  loss_mask: 0.2234  loss_rpn_cls: 0.1533  loss_rpn_loc: 0.3835  time: 0.1114  data_time: 0.0020  lr: 0.01  max_mem: 1829M
[32m[11/16 00:06:53 d2.utils.events]: [0m eta: 0:16:37  iter: 1199  total_loss: 1.268  loss_cls: 0.1592  loss_box_reg: 0.3925  loss_mask: 0.2234  loss_rpn_cls: 0.1458  loss_rpn_loc: 0.3885  time: 0.1114  data_time: 0.0018  lr: 0.01  max_mem: 1829M
[32m[11/16 00:06:55 d2.utils.events]: [0m eta: 0:16:35  iter: 1219  total_loss: 1.427  loss_cls: 0.2209  loss_box_reg: 0.4468  loss_mask: 0.2343  loss_rpn_cls: 0.1397  loss_rpn_loc: 0.3607  time: 0.1114  data_time: 0.0018  lr: 0.01  max_mem: 1829M
[32m[11/16 00:06:58 d2.utils.events]: [0m eta: 0:16:33  iter: 1239  total_loss: 1.414  loss_cls: 0.2259  loss_box_reg: 0.4646  loss_mask: 0.2263  loss_rpn_cls: 0.1237  loss_rpn_loc: 0.3463  time: 0.1115  data_time: 0.0017  lr: 0.01  max_mem: 1829M
[32m[11/16 00:07:00 d2.utils.events]: [0m eta: 0:16:31  iter: 1259  total_loss: 1.359  loss_cls: 0.2052  loss_box_reg: 0.4499  loss_mask: 0.2165  loss_rpn_cls: 0.1604  loss_rpn_loc: 0.3687  time: 0.1115  data_time: 0.0017  lr: 0.01  max_mem: 1829M
[32m[11/16 00:07:02 d2.utils.events]: [0m eta: 0:16:29  iter: 1279  total_loss: 1.31  loss_cls: 0.2082  loss_box_reg: 0.4096  loss_mask: 0.2104  loss_rpn_cls: 0.1669  loss_rpn_loc: 0.3579  time: 0.1115  data_time: 0.0018  lr: 0.01  max_mem: 1829M
[32m[11/16 00:07:05 d2.utils.events]: [0m eta: 0:16:29  iter: 1299  total_loss: 1.372  loss_cls: 0.2211  loss_box_reg: 0.4513  loss_mask: 0.2343  loss_rpn_cls: 0.1615  loss_rpn_loc: 0.3388  time: 0.1115  data_time: 0.0018  lr: 0.01  max_mem: 1829M
[32m[11/16 00:07:07 d2.utils.events]: [0m eta: 0:16:27  iter: 1319  total_loss: 1.345  loss_cls: 0.2217  loss_box_reg: 0.4537  loss_mask: 0.2006  loss_rpn_cls: 0.1642  loss_rpn_loc: 0.3325  time: 0.1116  data_time: 0.0019  lr: 0.01  max_mem: 1829M
[32m[11/16 00:07:09 d2.utils.events]: [0m eta: 0:16:26  iter: 1339  total_loss: 1.303  loss_cls: 0.2052  loss_box_reg: 0.4553  loss_mask: 0.2042  loss_rpn_cls: 0.1325  loss_rpn_loc: 0.3472  time: 0.1117  data_time: 0.0018  lr: 0.01  max_mem: 1829M
[32m[11/16 00:07:12 d2.utils.events]: [0m eta: 0:16:24  iter: 1359  total_loss: 1.371  loss_cls: 0.2342  loss_box_reg: 0.4486  loss_mask: 0.2168  loss_rpn_cls: 0.1514  loss_rpn_loc: 0.3521  time: 0.1117  data_time: 0.0019  lr: 0.01  max_mem: 1829M
[32m[11/16 00:07:14 d2.utils.events]: [0m eta: 0:16:22  iter: 1379  total_loss: 1.361  loss_cls: 0.2139  loss_box_reg: 0.4524  loss_mask: 0.2144  loss_rpn_cls: 0.1205  loss_rpn_loc: 0.3558  time: 0.1118  data_time: 0.0018  lr: 0.01  max_mem: 1829M
[32m[11/16 00:07:16 d2.utils.events]: [0m eta: 0:16:20  iter: 1399  total_loss: 1.31  loss_cls: 0.1987  loss_box_reg: 0.4144  loss_mask: 0.2135  loss_rpn_cls: 0.1251  loss_rpn_loc: 0.3643  time: 0.1118  data_time: 0.0019  lr: 0.01  max_mem: 1829M
[32m[11/16 00:07:19 d2.utils.events]: [0m eta: 0:16:17  iter: 1419  total_loss: 1.309  loss_cls: 0.2279  loss_box_reg: 0.4399  loss_mask: 0.2164  loss_rpn_cls: 0.125  loss_rpn_loc: 0.3432  time: 0.1118  data_time: 0.0018  lr: 0.01  max_mem: 1829M
[32m[11/16 00:07:21 d2.utils.events]: [0m eta: 0:16:15  iter: 1439  total_loss: 1.316  loss_cls: 0.1996  loss_box_reg: 0.4246  loss_mask: 0.2081  loss_rpn_cls: 0.1119  loss_rpn_loc: 0.3454  time: 0.1119  data_time: 0.0018  lr: 0.01  max_mem: 1829M
[32m[11/16 00:07:23 d2.utils.events]: [0m eta: 0:16:13  iter: 1459  total_loss: 1.304  loss_cls: 0.1892  loss_box_reg: 0.4077  loss_mask: 0.2158  loss_rpn_cls: 0.1616  loss_rpn_loc: 0.3752  time: 0.1120  data_time: 0.0018  lr: 0.01  max_mem: 1829M
[32m[11/16 00:07:26 d2.utils.events]: [0m eta: 0:16:11  iter: 1479  total_loss: 1.37  loss_cls: 0.2024  loss_box_reg: 0.4254  loss_mask: 0.2319  loss_rpn_cls: 0.1177  loss_rpn_loc: 0.361  time: 0.1120  data_time: 0.0018  lr: 0.01  max_mem: 1829M
[32m[11/16 00:07:28 d2.utils.events]: [0m eta: 0:16:09  iter: 1499  total_loss: 1.363  loss_cls: 0.2269  loss_box_reg: 0.4622  loss_mask: 0.2066  loss_rpn_cls: 0.1462  loss_rpn_loc: 0.319  time: 0.1120  data_time: 0.0019  lr: 0.01  max_mem: 1829M
[32m[11/16 00:07:30 d2.utils.events]: [0m eta: 0:16:06  iter: 1519  total_loss: 1.286  loss_cls: 0.1882  loss_box_reg: 0.4098  loss_mask: 0.213  loss_rpn_cls: 0.1472  loss_rpn_loc: 0.3218  time: 0.1120  data_time: 0.0017  lr: 0.01  max_mem: 1829M
[32m[11/16 00:07:32 d2.utils.events]: [0m eta: 0:16:04  iter: 1539  total_loss: 1.343  loss_cls: 0.2156  loss_box_reg: 0.4295  loss_mask: 0.2089  loss_rpn_cls: 0.1053  loss_rpn_loc: 0.3468  time: 0.1120  data_time: 0.0019  lr: 0.01  max_mem: 1829M
[32m[11/16 00:07:35 d2.utils.events]: [0m eta: 0:16:02  iter: 1559  total_loss: 1.219  loss_cls: 0.1879  loss_box_reg: 0.4029  loss_mask: 0.2047  loss_rpn_cls: 0.1304  loss_rpn_loc: 0.317  time: 0.1121  data_time: 0.0018  lr: 0.01  max_mem: 1829M
[32m[11/16 00:07:37 d2.utils.events]: [0m eta: 0:16:01  iter: 1579  total_loss: 1.315  loss_cls: 0.2061  loss_box_reg: 0.4109  loss_mask: 0.2085  loss_rpn_cls: 0.1275  loss_rpn_loc: 0.3319  time: 0.1121  data_time: 0.0019  lr: 0.01  max_mem: 1829M
[32m[11/16 00:07:39 d2.utils.events]: [0m eta: 0:15:58  iter: 1599  total_loss: 1.271  loss_cls: 0.1975  loss_box_reg: 0.4128  loss_mask: 0.2059  loss_rpn_cls: 0.1527  loss_rpn_loc: 0.3295  time: 0.1121  data_time: 0.0018  lr: 0.01  max_mem: 1829M
[32m[11/16 00:07:42 d2.utils.events]: [0m eta: 0:15:56  iter: 1619  total_loss: 1.297  loss_cls: 0.2053  loss_box_reg: 0.4288  loss_mask: 0.2025  loss_rpn_cls: 0.1305  loss_rpn_loc: 0.33  time: 0.1121  data_time: 0.0018  lr: 0.01  max_mem: 1829M
[32m[11/16 00:07:44 d2.utils.events]: [0m eta: 0:15:54  iter: 1639  total_loss: 1.281  loss_cls: 0.2107  loss_box_reg: 0.4026  loss_mask: 0.196  loss_rpn_cls: 0.1166  loss_rpn_loc: 0.3447  time: 0.1121  data_time: 0.0018  lr: 0.01  max_mem: 1829M
[32m[11/16 00:07:46 d2.utils.events]: [0m eta: 0:15:51  iter: 1659  total_loss: 1.249  loss_cls: 0.1896  loss_box_reg: 0.4175  loss_mask: 0.1967  loss_rpn_cls: 0.1242  loss_rpn_loc: 0.3466  time: 0.1121  data_time: 0.0015  lr: 0.01  max_mem: 1829M
[32m[11/16 00:07:48 d2.utils.events]: [0m eta: 0:15:49  iter: 1679  total_loss: 1.234  loss_cls: 0.1836  loss_box_reg: 0.4013  loss_mask: 0.2012  loss_rpn_cls: 0.1386  loss_rpn_loc: 0.3154  time: 0.1121  data_time: 0.0019  lr: 0.01  max_mem: 1829M
[32m[11/16 00:07:51 d2.utils.events]: [0m eta: 0:15:47  iter: 1699  total_loss: 1.25  loss_cls: 0.2161  loss_box_reg: 0.43  loss_mask: 0.2061  loss_rpn_cls: 0.1365  loss_rpn_loc: 0.3183  time: 0.1121  data_time: 0.0017  lr: 0.01  max_mem: 1829M
[32m[11/16 00:07:53 d2.utils.events]: [0m eta: 0:15:45  iter: 1719  total_loss: 1.31  loss_cls: 0.196  loss_box_reg: 0.4203  loss_mask: 0.2  loss_rpn_cls: 0.1471  loss_rpn_loc: 0.3307  time: 0.1121  data_time: 0.0021  lr: 0.01  max_mem: 1829M
[32m[11/16 00:07:55 d2.utils.events]: [0m eta: 0:15:43  iter: 1739  total_loss: 1.234  loss_cls: 0.1994  loss_box_reg: 0.4101  loss_mask: 0.2018  loss_rpn_cls: 0.09485  loss_rpn_loc: 0.3139  time: 0.1122  data_time: 0.0019  lr: 0.01  max_mem: 1829M
[32m[11/16 00:07:58 d2.utils.events]: [0m eta: 0:15:41  iter: 1759  total_loss: 1.245  loss_cls: 0.191  loss_box_reg: 0.4073  loss_mask: 0.2046  loss_rpn_cls: 0.109  loss_rpn_loc: 0.3161  time: 0.1122  data_time: 0.0018  lr: 0.01  max_mem: 1829M
[32m[11/16 00:08:00 d2.utils.events]: [0m eta: 0:15:38  iter: 1779  total_loss: 1.264  loss_cls: 0.2061  loss_box_reg: 0.4079  loss_mask: 0.1962  loss_rpn_cls: 0.1442  loss_rpn_loc: 0.3062  time: 0.1122  data_time: 0.0019  lr: 0.01  max_mem: 1829M
[32m[11/16 00:08:02 d2.utils.events]: [0m eta: 0:15:36  iter: 1799  total_loss: 1.27  loss_cls: 0.2084  loss_box_reg: 0.4262  loss_mask: 0.2103  loss_rpn_cls: 0.1093  loss_rpn_loc: 0.313  time: 0.1122  data_time: 0.0017  lr: 0.01  max_mem: 1829M
[32m[11/16 00:08:04 d2.utils.events]: [0m eta: 0:15:34  iter: 1819  total_loss: 1.239  loss_cls: 0.1836  loss_box_reg: 0.4095  loss_mask: 0.1996  loss_rpn_cls: 0.1045  loss_rpn_loc: 0.3464  time: 0.1122  data_time: 0.0017  lr: 0.01  max_mem: 1829M
[32m[11/16 00:08:07 d2.utils.events]: [0m eta: 0:15:31  iter: 1839  total_loss: 1.23  loss_cls: 0.1725  loss_box_reg: 0.3923  loss_mask: 0.1932  loss_rpn_cls: 0.1383  loss_rpn_loc: 0.3115  time: 0.1122  data_time: 0.0019  lr: 0.01  max_mem: 1829M
[32m[11/16 00:08:09 d2.utils.events]: [0m eta: 0:15:29  iter: 1859  total_loss: 1.203  loss_cls: 0.1829  loss_box_reg: 0.4021  loss_mask: 0.2031  loss_rpn_cls: 0.1284  loss_rpn_loc: 0.3005  time: 0.1122  data_time: 0.0018  lr: 0.01  max_mem: 1829M
[32m[11/16 00:08:11 d2.utils.events]: [0m eta: 0:15:28  iter: 1879  total_loss: 1.242  loss_cls: 0.1874  loss_box_reg: 0.396  loss_mask: 0.1984  loss_rpn_cls: 0.09126  loss_rpn_loc: 0.3177  time: 0.1122  data_time: 0.0017  lr: 0.01  max_mem: 1829M
[32m[11/16 00:08:14 d2.utils.events]: [0m eta: 0:15:25  iter: 1899  total_loss: 1.248  loss_cls: 0.1951  loss_box_reg: 0.4221  loss_mask: 0.2032  loss_rpn_cls: 0.1118  loss_rpn_loc: 0.3136  time: 0.1123  data_time: 0.0020  lr: 0.01  max_mem: 1829M
[32m[11/16 00:08:16 d2.utils.events]: [0m eta: 0:15:23  iter: 1919  total_loss: 1.309  loss_cls: 0.1995  loss_box_reg: 0.4393  loss_mask: 0.2063  loss_rpn_cls: 0.1087  loss_rpn_loc: 0.3026  time: 0.1123  data_time: 0.0018  lr: 0.01  max_mem: 1829M
[32m[11/16 00:08:19 d2.utils.events]: [0m eta: 0:15:21  iter: 1939  total_loss: 1.215  loss_cls: 0.188  loss_box_reg: 0.4197  loss_mask: 0.2018  loss_rpn_cls: 0.09953  loss_rpn_loc: 0.3016  time: 0.1123  data_time: 0.0019  lr: 0.01  max_mem: 1829M
[32m[11/16 00:08:21 d2.utils.events]: [0m eta: 0:15:18  iter: 1959  total_loss: 1.197  loss_cls: 0.1903  loss_box_reg: 0.4123  loss_mask: 0.1992  loss_rpn_cls: 0.105  loss_rpn_loc: 0.2913  time: 0.1123  data_time: 0.0018  lr: 0.01  max_mem: 1829M
[32m[11/16 00:08:23 d2.utils.events]: [0m eta: 0:15:17  iter: 1979  total_loss: 1.182  loss_cls: 0.1913  loss_box_reg: 0.4205  loss_mask: 0.202  loss_rpn_cls: 0.1029  loss_rpn_loc: 0.2959  time: 0.1123  data_time: 0.0019  lr: 0.01  max_mem: 1829M
[32m[11/16 00:08:26 d2.utils.events]: [0m eta: 0:15:14  iter: 1999  total_loss: 1.214  loss_cls: 0.2056  loss_box_reg: 0.4215  loss_mask: 0.1854  loss_rpn_cls: 0.08699  loss_rpn_loc: 0.3073  time: 0.1123  data_time: 0.0017  lr: 0.01  max_mem: 1829M
[32m[11/16 00:08:28 d2.utils.events]: [0m eta: 0:15:12  iter: 2019  total_loss: 1.161  loss_cls: 0.1833  loss_box_reg: 0.3831  loss_mask: 0.1987  loss_rpn_cls: 0.105  loss_rpn_loc: 0.2777  time: 0.1123  data_time: 0.0018  lr: 0.01  max_mem: 1829M
[32m[11/16 00:08:30 d2.utils.events]: [0m eta: 0:15:10  iter: 2039  total_loss: 1.177  loss_cls: 0.1806  loss_box_reg: 0.4012  loss_mask: 0.1947  loss_rpn_cls: 0.1023  loss_rpn_loc: 0.2849  time: 0.1123  data_time: 0.0018  lr: 0.01  max_mem: 1829M
[32m[11/16 00:08:32 d2.utils.events]: [0m eta: 0:15:09  iter: 2059  total_loss: 1.199  loss_cls: 0.1875  loss_box_reg: 0.397  loss_mask: 0.2011  loss_rpn_cls: 0.1052  loss_rpn_loc: 0.309  time: 0.1124  data_time: 0.0019  lr: 0.01  max_mem: 1829M
[32m[11/16 00:08:35 d2.utils.events]: [0m eta: 0:15:06  iter: 2079  total_loss: 1.234  loss_cls: 0.1973  loss_box_reg: 0.4101  loss_mask: 0.1916  loss_rpn_cls: 0.1106  loss_rpn_loc: 0.3152  time: 0.1124  data_time: 0.0018  lr: 0.01  max_mem: 1829M
[32m[11/16 00:08:37 d2.utils.events]: [0m eta: 0:15:05  iter: 2099  total_loss: 1.265  loss_cls: 0.1925  loss_box_reg: 0.4018  loss_mask: 0.1935  loss_rpn_cls: 0.1039  loss_rpn_loc: 0.3188  time: 0.1124  data_time: 0.0018  lr: 0.01  max_mem: 1829M
[32m[11/16 00:08:39 d2.utils.events]: [0m eta: 0:15:03  iter: 2119  total_loss: 1.158  loss_cls: 0.1764  loss_box_reg: 0.3985  loss_mask: 0.1907  loss_rpn_cls: 0.09741  loss_rpn_loc: 0.2951  time: 0.1124  data_time: 0.0018  lr: 0.01  max_mem: 1829M
[32m[11/16 00:08:42 d2.utils.events]: [0m eta: 0:15:00  iter: 2139  total_loss: 1.133  loss_cls: 0.1565  loss_box_reg: 0.377  loss_mask: 0.1871  loss_rpn_cls: 0.1039  loss_rpn_loc: 0.298  time: 0.1124  data_time: 0.0018  lr: 0.01  max_mem: 1829M
[32m[11/16 00:08:44 d2.utils.events]: [0m eta: 0:14:57  iter: 2159  total_loss: 1.161  loss_cls: 0.1568  loss_box_reg: 0.3772  loss_mask: 0.1812  loss_rpn_cls: 0.1257  loss_rpn_loc: 0.3234  time: 0.1125  data_time: 0.0017  lr: 0.01  max_mem: 1829M
[32m[11/16 00:08:46 d2.utils.events]: [0m eta: 0:14:54  iter: 2179  total_loss: 1.169  loss_cls: 0.1699  loss_box_reg: 0.3729  loss_mask: 0.1869  loss_rpn_cls: 0.1131  loss_rpn_loc: 0.3015  time: 0.1124  data_time: 0.0018  lr: 0.01  max_mem: 1829M
[32m[11/16 00:08:49 d2.utils.events]: [0m eta: 0:14:52  iter: 2199  total_loss: 1.194  loss_cls: 0.203  loss_box_reg: 0.3933  loss_mask: 0.1861  loss_rpn_cls: 0.1049  loss_rpn_loc: 0.3026  time: 0.1125  data_time: 0.0018  lr: 0.01  max_mem: 1829M
[32m[11/16 00:08:51 d2.utils.events]: [0m eta: 0:14:50  iter: 2219  total_loss: 1.235  loss_cls: 0.1869  loss_box_reg: 0.4022  loss_mask: 0.1944  loss_rpn_cls: 0.135  loss_rpn_loc: 0.3163  time: 0.1125  data_time: 0.0018  lr: 0.01  max_mem: 1829M
[32m[11/16 00:08:53 d2.utils.events]: [0m eta: 0:14:48  iter: 2239  total_loss: 1.124  loss_cls: 0.1842  loss_box_reg: 0.3811  loss_mask: 0.1766  loss_rpn_cls: 0.06625  loss_rpn_loc: 0.2954  time: 0.1125  data_time: 0.0018  lr: 0.01  max_mem: 1829M
[32m[11/16 00:08:56 d2.utils.events]: [0m eta: 0:14:45  iter: 2259  total_loss: 1.16  loss_cls: 0.1768  loss_box_reg: 0.386  loss_mask: 0.1813  loss_rpn_cls: 0.09091  loss_rpn_loc: 0.2994  time: 0.1125  data_time: 0.0018  lr: 0.01  max_mem: 1829M
[32m[11/16 00:08:58 d2.utils.events]: [0m eta: 0:14:43  iter: 2279  total_loss: 1.128  loss_cls: 0.1878  loss_box_reg: 0.393  loss_mask: 0.1942  loss_rpn_cls: 0.1008  loss_rpn_loc: 0.2838  time: 0.1125  data_time: 0.0018  lr: 0.01  max_mem: 1829M
[32m[11/16 00:09:00 d2.utils.events]: [0m eta: 0:14:41  iter: 2299  total_loss: 1.183  loss_cls: 0.1716  loss_box_reg: 0.3962  loss_mask: 0.1908  loss_rpn_cls: 0.08281  loss_rpn_loc: 0.3352  time: 0.1125  data_time: 0.0019  lr: 0.01  max_mem: 1829M
[32m[11/16 00:09:02 d2.utils.events]: [0m eta: 0:14:39  iter: 2319  total_loss: 1.201  loss_cls: 0.1626  loss_box_reg: 0.3797  loss_mask: 0.2002  loss_rpn_cls: 0.09333  loss_rpn_loc: 0.3144  time: 0.1126  data_time: 0.0017  lr: 0.01  max_mem: 1829M
[32m[11/16 00:09:05 d2.utils.events]: [0m eta: 0:14:36  iter: 2339  total_loss: 1.126  loss_cls: 0.1635  loss_box_reg: 0.3856  loss_mask: 0.1792  loss_rpn_cls: 0.1107  loss_rpn_loc: 0.295  time: 0.1126  data_time: 0.0018  lr: 0.01  max_mem: 1829M
[32m[11/16 00:09:07 d2.utils.events]: [0m eta: 0:14:34  iter: 2359  total_loss: 1.178  loss_cls: 0.1732  loss_box_reg: 0.3836  loss_mask: 0.1923  loss_rpn_cls: 0.1042  loss_rpn_loc: 0.3057  time: 0.1125  data_time: 0.0018  lr: 0.01  max_mem: 1829M
[32m[11/16 00:09:09 d2.utils.events]: [0m eta: 0:14:31  iter: 2379  total_loss: 1.084  loss_cls: 0.1551  loss_box_reg: 0.3653  loss_mask: 0.1796  loss_rpn_cls: 0.106  loss_rpn_loc: 0.2652  time: 0.1126  data_time: 0.0018  lr: 0.01  max_mem: 1829M
[32m[11/16 00:09:12 d2.utils.events]: [0m eta: 0:14:29  iter: 2399  total_loss: 1.154  loss_cls: 0.1624  loss_box_reg: 0.391  loss_mask: 0.182  loss_rpn_cls: 0.1317  loss_rpn_loc: 0.2884  time: 0.1126  data_time: 0.0019  lr: 0.01  max_mem: 1829M
[32m[11/16 00:09:14 d2.utils.events]: [0m eta: 0:14:27  iter: 2419  total_loss: 1.115  loss_cls: 0.1589  loss_box_reg: 0.3657  loss_mask: 0.1796  loss_rpn_cls: 0.07657  loss_rpn_loc: 0.2847  time: 0.1126  data_time: 0.0016  lr: 0.01  max_mem: 1829M
[32m[11/16 00:09:16 d2.utils.events]: [0m eta: 0:14:23  iter: 2439  total_loss: 1.098  loss_cls: 0.1697  loss_box_reg: 0.3776  loss_mask: 0.1784  loss_rpn_cls: 0.1004  loss_rpn_loc: 0.2734  time: 0.1126  data_time: 0.0017  lr: 0.01  max_mem: 1829M
[32m[11/16 00:09:18 d2.utils.events]: [0m eta: 0:14:20  iter: 2459  total_loss: 1.041  loss_cls: 0.1422  loss_box_reg: 0.3483  loss_mask: 0.1878  loss_rpn_cls: 0.1036  loss_rpn_loc: 0.2871  time: 0.1126  data_time: 0.0018  lr: 0.01  max_mem: 1829M
[32m[11/16 00:09:21 d2.utils.events]: [0m eta: 0:14:18  iter: 2479  total_loss: 1.116  loss_cls: 0.1732  loss_box_reg: 0.3768  loss_mask: 0.1881  loss_rpn_cls: 0.1086  loss_rpn_loc: 0.2794  time: 0.1126  data_time: 0.0018  lr: 0.01  max_mem: 1829M
[32m[11/16 00:09:23 d2.utils.events]: [0m eta: 0:14:16  iter: 2499  total_loss: 1.114  loss_cls: 0.1777  loss_box_reg: 0.3669  loss_mask: 0.1755  loss_rpn_cls: 0.09396  loss_rpn_loc: 0.2736  time: 0.1126  data_time: 0.0019  lr: 0.01  max_mem: 1829M
[32m[11/16 00:09:25 d2.utils.events]: [0m eta: 0:14:13  iter: 2519  total_loss: 1.033  loss_cls: 0.1586  loss_box_reg: 0.3528  loss_mask: 0.1773  loss_rpn_cls: 0.1073  loss_rpn_loc: 0.2598  time: 0.1126  data_time: 0.0019  lr: 0.01  max_mem: 1829M
[32m[11/16 00:09:28 d2.utils.events]: [0m eta: 0:14:10  iter: 2539  total_loss: 1.033  loss_cls: 0.1406  loss_box_reg: 0.3578  loss_mask: 0.1634  loss_rpn_cls: 0.1054  loss_rpn_loc: 0.2598  time: 0.1126  data_time: 0.0016  lr: 0.01  max_mem: 1829M
[32m[11/16 00:09:30 d2.utils.events]: [0m eta: 0:14:08  iter: 2559  total_loss: 1.073  loss_cls: 0.1693  loss_box_reg: 0.3646  loss_mask: 0.1812  loss_rpn_cls: 0.09187  loss_rpn_loc: 0.253  time: 0.1126  data_time: 0.0019  lr: 0.01  max_mem: 1829M
[32m[11/16 00:09:32 d2.utils.events]: [0m eta: 0:14:05  iter: 2579  total_loss: 1.141  loss_cls: 0.1586  loss_box_reg: 0.3768  loss_mask: 0.1692  loss_rpn_cls: 0.1006  loss_rpn_loc: 0.2918  time: 0.1126  data_time: 0.0018  lr: 0.01  max_mem: 1829M
[32m[11/16 00:09:34 d2.utils.events]: [0m eta: 0:14:03  iter: 2599  total_loss: 1.095  loss_cls: 0.1412  loss_box_reg: 0.3527  loss_mask: 0.1873  loss_rpn_cls: 0.09251  loss_rpn_loc: 0.2567  time: 0.1126  data_time: 0.0017  lr: 0.01  max_mem: 1829M
[32m[11/16 00:09:37 d2.utils.events]: [0m eta: 0:14:00  iter: 2619  total_loss: 1.078  loss_cls: 0.1613  loss_box_reg: 0.3652  loss_mask: 0.176  loss_rpn_cls: 0.09525  loss_rpn_loc: 0.2607  time: 0.1126  data_time: 0.0018  lr: 0.01  max_mem: 1829M
[32m[11/16 00:09:39 d2.utils.events]: [0m eta: 0:13:58  iter: 2639  total_loss: 1.046  loss_cls: 0.1692  loss_box_reg: 0.3596  loss_mask: 0.175  loss_rpn_cls: 0.08569  loss_rpn_loc: 0.2733  time: 0.1126  data_time: 0.0019  lr: 0.01  max_mem: 1829M
[32m[11/16 00:09:41 d2.utils.events]: [0m eta: 0:13:56  iter: 2659  total_loss: 1.049  loss_cls: 0.1644  loss_box_reg: 0.3455  loss_mask: 0.1762  loss_rpn_cls: 0.1028  loss_rpn_loc: 0.2632  time: 0.1126  data_time: 0.0019  lr: 0.01  max_mem: 1829M
[32m[11/16 00:09:44 d2.utils.events]: [0m eta: 0:13:54  iter: 2679  total_loss: 1.103  loss_cls: 0.1613  loss_box_reg: 0.3635  loss_mask: 0.1792  loss_rpn_cls: 0.09565  loss_rpn_loc: 0.2818  time: 0.1126  data_time: 0.0018  lr: 0.01  max_mem: 1829M
[32m[11/16 00:09:46 d2.utils.events]: [0m eta: 0:13:52  iter: 2699  total_loss: 1.031  loss_cls: 0.1544  loss_box_reg: 0.3442  loss_mask: 0.1785  loss_rpn_cls: 0.08219  loss_rpn_loc: 0.2703  time: 0.1126  data_time: 0.0018  lr: 0.01  max_mem: 1829M
[32m[11/16 00:09:48 d2.utils.events]: [0m eta: 0:13:50  iter: 2719  total_loss: 1.078  loss_cls: 0.1627  loss_box_reg: 0.3754  loss_mask: 0.1809  loss_rpn_cls: 0.08244  loss_rpn_loc: 0.2616  time: 0.1126  data_time: 0.0019  lr: 0.01  max_mem: 1829M
[32m[11/16 00:09:51 d2.utils.events]: [0m eta: 0:13:47  iter: 2739  total_loss: 1.05  loss_cls: 0.1457  loss_box_reg: 0.3506  loss_mask: 0.1818  loss_rpn_cls: 0.08812  loss_rpn_loc: 0.2586  time: 0.1126  data_time: 0.0019  lr: 0.01  max_mem: 1829M
[32m[11/16 00:09:53 d2.utils.events]: [0m eta: 0:13:44  iter: 2759  total_loss: 1.04  loss_cls: 0.1377  loss_box_reg: 0.3558  loss_mask: 0.1695  loss_rpn_cls: 0.08499  loss_rpn_loc: 0.2653  time: 0.1126  data_time: 0.0015  lr: 0.01  max_mem: 1829M
[32m[11/16 00:09:55 d2.utils.events]: [0m eta: 0:13:42  iter: 2779  total_loss: 1.042  loss_cls: 0.1622  loss_box_reg: 0.3433  loss_mask: 0.1733  loss_rpn_cls: 0.09456  loss_rpn_loc: 0.2678  time: 0.1126  data_time: 0.0018  lr: 0.01  max_mem: 1829M
[32m[11/16 00:09:57 d2.utils.events]: [0m eta: 0:13:40  iter: 2799  total_loss: 1.02  loss_cls: 0.155  loss_box_reg: 0.3601  loss_mask: 0.1772  loss_rpn_cls: 0.08695  loss_rpn_loc: 0.2555  time: 0.1126  data_time: 0.0018  lr: 0.01  max_mem: 1829M
[32m[11/16 00:10:00 d2.utils.events]: [0m eta: 0:13:37  iter: 2819  total_loss: 0.993  loss_cls: 0.1461  loss_box_reg: 0.3319  loss_mask: 0.1682  loss_rpn_cls: 0.08597  loss_rpn_loc: 0.2614  time: 0.1126  data_time: 0.0017  lr: 0.01  max_mem: 1829M
[32m[11/16 00:10:02 d2.utils.events]: [0m eta: 0:13:35  iter: 2839  total_loss: 1.057  loss_cls: 0.1653  loss_box_reg: 0.3711  loss_mask: 0.1768  loss_rpn_cls: 0.09504  loss_rpn_loc: 0.2594  time: 0.1126  data_time: 0.0018  lr: 0.01  max_mem: 1829M
[32m[11/16 00:10:04 d2.utils.events]: [0m eta: 0:13:33  iter: 2859  total_loss: 1.092  loss_cls: 0.16  loss_box_reg: 0.3399  loss_mask: 0.1758  loss_rpn_cls: 0.1025  loss_rpn_loc: 0.2757  time: 0.1126  data_time: 0.0018  lr: 0.01  max_mem: 1829M
[32m[11/16 00:10:06 d2.utils.events]: [0m eta: 0:13:30  iter: 2879  total_loss: 0.9817  loss_cls: 0.1461  loss_box_reg: 0.3294  loss_mask: 0.1716  loss_rpn_cls: 0.08346  loss_rpn_loc: 0.276  time: 0.1126  data_time: 0.0018  lr: 0.01  max_mem: 1829M
[32m[11/16 00:10:09 d2.utils.events]: [0m eta: 0:13:28  iter: 2899  total_loss: 1.081  loss_cls: 0.1619  loss_box_reg: 0.3745  loss_mask: 0.1762  loss_rpn_cls: 0.0807  loss_rpn_loc: 0.2882  time: 0.1126  data_time: 0.0018  lr: 0.01  max_mem: 1829M
[32m[11/16 00:10:11 d2.utils.events]: [0m eta: 0:13:25  iter: 2919  total_loss: 1.08  loss_cls: 0.1783  loss_box_reg: 0.3541  loss_mask: 0.1829  loss_rpn_cls: 0.09201  loss_rpn_loc: 0.2742  time: 0.1126  data_time: 0.0018  lr: 0.01  max_mem: 1829M
[32m[11/16 00:10:13 d2.utils.events]: [0m eta: 0:13:23  iter: 2939  total_loss: 1.066  loss_cls: 0.1409  loss_box_reg: 0.3538  loss_mask: 0.1763  loss_rpn_cls: 0.08945  loss_rpn_loc: 0.2632  time: 0.1127  data_time: 0.0019  lr: 0.01  max_mem: 1829M
[32m[11/16 00:10:16 d2.utils.events]: [0m eta: 0:13:21  iter: 2959  total_loss: 1.043  loss_cls: 0.1502  loss_box_reg: 0.3674  loss_mask: 0.1709  loss_rpn_cls: 0.08579  loss_rpn_loc: 0.2813  time: 0.1127  data_time: 0.0018  lr: 0.01  max_mem: 1829M
[32m[11/16 00:10:18 d2.utils.events]: [0m eta: 0:13:18  iter: 2979  total_loss: 1  loss_cls: 0.1541  loss_box_reg: 0.3509  loss_mask: 0.163  loss_rpn_cls: 0.08491  loss_rpn_loc: 0.2609  time: 0.1127  data_time: 0.0020  lr: 0.01  max_mem: 1829M
[32m[11/16 00:10:20 d2.utils.events]: [0m eta: 0:13:16  iter: 2999  total_loss: 0.9474  loss_cls: 0.1387  loss_box_reg: 0.3413  loss_mask: 0.1631  loss_rpn_cls: 0.0567  loss_rpn_loc: 0.2433  time: 0.1127  data_time: 0.0019  lr: 0.01  max_mem: 1829M
[32m[11/16 00:10:23 d2.utils.events]: [0m eta: 0:13:14  iter: 3019  total_loss: 0.9905  loss_cls: 0.136  loss_box_reg: 0.3388  loss_mask: 0.1652  loss_rpn_cls: 0.0848  loss_rpn_loc: 0.2374  time: 0.1127  data_time: 0.0017  lr: 0.01  max_mem: 1829M
[32m[11/16 00:10:25 d2.utils.events]: [0m eta: 0:13:11  iter: 3039  total_loss: 1.007  loss_cls: 0.1332  loss_box_reg: 0.3242  loss_mask: 0.1752  loss_rpn_cls: 0.07036  loss_rpn_loc: 0.2384  time: 0.1127  data_time: 0.0018  lr: 0.01  max_mem: 1829M
[32m[11/16 00:10:27 d2.utils.events]: [0m eta: 0:13:08  iter: 3059  total_loss: 0.9849  loss_cls: 0.1373  loss_box_reg: 0.3329  loss_mask: 0.1695  loss_rpn_cls: 0.07884  loss_rpn_loc: 0.2592  time: 0.1127  data_time: 0.0018  lr: 0.01  max_mem: 1829M
[32m[11/16 00:10:30 d2.utils.events]: [0m eta: 0:13:06  iter: 3079  total_loss: 1.039  loss_cls: 0.1317  loss_box_reg: 0.3309  loss_mask: 0.1607  loss_rpn_cls: 0.06797  loss_rpn_loc: 0.282  time: 0.1127  data_time: 0.0017  lr: 0.01  max_mem: 1829M
[32m[11/16 00:10:32 d2.utils.events]: [0m eta: 0:13:03  iter: 3099  total_loss: 1.04  loss_cls: 0.1496  loss_box_reg: 0.3558  loss_mask: 0.1799  loss_rpn_cls: 0.09463  loss_rpn_loc: 0.2757  time: 0.1127  data_time: 0.0018  lr: 0.01  max_mem: 1829M
[32m[11/16 00:10:34 d2.utils.events]: [0m eta: 0:13:01  iter: 3119  total_loss: 0.9922  loss_cls: 0.1551  loss_box_reg: 0.3481  loss_mask: 0.1713  loss_rpn_cls: 0.07936  loss_rpn_loc: 0.262  time: 0.1127  data_time: 0.0019  lr: 0.01  max_mem: 1829M
[32m[11/16 00:10:36 d2.utils.events]: [0m eta: 0:13:00  iter: 3139  total_loss: 1.054  loss_cls: 0.1466  loss_box_reg: 0.3686  loss_mask: 0.1852  loss_rpn_cls: 0.08969  loss_rpn_loc: 0.2389  time: 0.1127  data_time: 0.0017  lr: 0.01  max_mem: 1829M
