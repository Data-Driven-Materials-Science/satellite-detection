Registered Datasets: ['satellite_Train', 'satellite_Val']
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/HP743_6S_250x.png
	num_instances: 102
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S02_03_SE1_300X22.png
	num_instances: 83
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/HP743_1S_500x.png
	num_instances: 37
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S08_03_SE1_1000X03.png
	num_instances: 88
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S06_01_SE1_500X67.png
	num_instances: 54
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S04_02_SE1_1000X50.png
	num_instances: 45
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S03_03_SE1_1250X41.png
	num_instances: 111
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S02_01_SE1_300X14.png
	num_instances: 98
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/HP743_2S_250x.png
	num_instances: 49
Weights not found, weights will be downloaded from source: https://dl.fbaipublicfiles.com/detectron2/COCO-InstanceSegmentation/mask_rcnn_R_50_FPN_3x/137849600/model_final_f10217.pkl
[32m[11/14 23:17:28 d2.engine.defaults]: [0mModel:
GeneralizedRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): StandardROIHeads(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): FastRCNNConvFCHead(
      (flatten): Flatten(start_dim=1, end_dim=-1)
      (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      (fc_relu1): ReLU()
      (fc2): Linear(in_features=1024, out_features=1024, bias=True)
      (fc_relu2): ReLU()
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=1024, out_features=2, bias=True)
      (bbox_pred): Linear(in_features=1024, out_features=4, bias=True)
    )
    (mask_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(14, 14), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(14, 14), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (mask_head): MaskRCNNConvUpsampleHead(
      (mask_fcn1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn2): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn3): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn4): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
      (deconv_relu): ReLU()
      (predictor): Conv2d(256, 1, kernel_size=(1, 1), stride=(1, 1))
    )
  )
)
[32m[11/14 23:17:29 d2.data.build]: [0mRemoved 0 images with no usable annotations. 20 images left.
[32m[11/14 23:17:29 d2.data.build]: [0mDistribution of instances among all 1 categories:
[36m|  category  | #instances   |
|:----------:|:-------------|
| satellite  | 1412         |
|            |              |[0m
[32m[11/14 23:17:29 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[32m[11/14 23:17:29 d2.data.build]: [0mUsing training sampler TrainingSampler
[32m[11/14 23:17:29 d2.data.common]: [0mSerializing 20 elements to byte tensors and concatenating them all ...
[32m[11/14 23:17:29 d2.data.common]: [0mSerialized dataset takes 0.46 MiB
[5m[31mWARNING[0m [32m[11/14 23:17:29 d2.solver.build]: [0mSOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[32m[11/14 23:17:29 d2.checkpoint.c2_model_loading]: [0mRenaming Caffe2 weights ......
[32m[11/14 23:17:29 d2.checkpoint.c2_model_loading]: [0mFollowing weights matched with submodule backbone.bottom_up:
| Names in Model    | Names in Checkpoint      | Shapes                                          |
|:------------------|:-------------------------|:------------------------------------------------|
| res2.0.conv1.*    | res2_0_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,1,1)             |
| res2.0.conv2.*    | res2_0_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.0.conv3.*    | res2_0_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.0.shortcut.* | res2_0_branch1_{bn_*,w}  | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.1.conv1.*    | res2_1_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,256,1,1)            |
| res2.1.conv2.*    | res2_1_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.1.conv3.*    | res2_1_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.2.conv1.*    | res2_2_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,256,1,1)            |
| res2.2.conv2.*    | res2_2_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.2.conv3.*    | res2_2_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res3.0.conv1.*    | res3_0_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,256,1,1)       |
| res3.0.conv2.*    | res3_0_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.0.conv3.*    | res3_0_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.0.shortcut.* | res3_0_branch1_{bn_*,w}  | (512,) (512,) (512,) (512,) (512,256,1,1)       |
| res3.1.conv1.*    | res3_1_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.1.conv2.*    | res3_1_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.1.conv3.*    | res3_1_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.2.conv1.*    | res3_2_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.2.conv2.*    | res3_2_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.2.conv3.*    | res3_2_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.3.conv1.*    | res3_3_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.3.conv2.*    | res3_3_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.3.conv3.*    | res3_3_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res4.0.conv1.*    | res4_0_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,512,1,1)       |
| res4.0.conv2.*    | res4_0_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.0.conv3.*    | res4_0_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.0.shortcut.* | res4_0_branch1_{bn_*,w}  | (1024,) (1024,) (1024,) (1024,) (1024,512,1,1)  |
| res4.1.conv1.*    | res4_1_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.1.conv2.*    | res4_1_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.1.conv3.*    | res4_1_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.2.conv1.*    | res4_2_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.2.conv2.*    | res4_2_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.2.conv3.*    | res4_2_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.3.conv1.*    | res4_3_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.3.conv2.*    | res4_3_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.3.conv3.*    | res4_3_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.4.conv1.*    | res4_4_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.4.conv2.*    | res4_4_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.4.conv3.*    | res4_4_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.5.conv1.*    | res4_5_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.5.conv2.*    | res4_5_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.5.conv3.*    | res4_5_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res5.0.conv1.*    | res5_0_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,1024,1,1)      |
| res5.0.conv2.*    | res5_0_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.0.conv3.*    | res5_0_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| res5.0.shortcut.* | res5_0_branch1_{bn_*,w}  | (2048,) (2048,) (2048,) (2048,) (2048,1024,1,1) |
| res5.1.conv1.*    | res5_1_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,2048,1,1)      |
| res5.1.conv2.*    | res5_1_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.1.conv3.*    | res5_1_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| res5.2.conv1.*    | res5_2_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,2048,1,1)      |
| res5.2.conv2.*    | res5_2_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.2.conv3.*    | res5_2_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| stem.conv1.norm.* | res_conv1_bn_*           | (64,) (64,) (64,) (64,)                         |
| stem.conv1.weight | conv1_w                  | (64, 3, 7, 7)                                   |
[32m[11/14 23:17:29 d2.engine.train_loop]: [0mStarting training from iteration 0
[32m[11/14 23:18:37 d2.utils.events]: [0m eta: 2:37:07  iter: 19  total_loss: 3.267  loss_cls: 0.5449  loss_box_reg: 0.05818  loss_mask: 0.6675  loss_rpn_cls: 0.6902  loss_rpn_loc: 1.322  time: 3.3065  data_time: 0.0148  lr: 0.00019981  max_mem: 0M
[32m[11/14 23:19:41 d2.utils.events]: [0m eta: 2:38:23  iter: 39  total_loss: 2.413  loss_cls: 0.3377  loss_box_reg: 0.04487  loss_mask: 0.5979  loss_rpn_cls: 0.6033  loss_rpn_loc: 0.7962  time: 3.2330  data_time: 0.0056  lr: 0.00039961  max_mem: 0M
[32m[11/14 23:20:44 d2.utils.events]: [0m eta: 2:37:05  iter: 59  total_loss: 2.073  loss_cls: 0.1784  loss_box_reg: 0.05376  loss_mask: 0.5839  loss_rpn_cls: 0.5864  loss_rpn_loc: 0.618  time: 3.2140  data_time: 0.0048  lr: 0.00059941  max_mem: 0M
[32m[11/14 23:21:52 d2.utils.events]: [0m eta: 2:38:44  iter: 79  total_loss: 1.918  loss_cls: 0.1631  loss_box_reg: 0.1172  loss_mask: 0.5588  loss_rpn_cls: 0.5499  loss_rpn_loc: 0.5601  time: 3.2548  data_time: 0.0050  lr: 0.00079921  max_mem: 0M
[32m[11/14 23:23:05 d2.utils.events]: [0m eta: 2:38:12  iter: 99  total_loss: 1.946  loss_cls: 0.2394  loss_box_reg: 0.1826  loss_mask: 0.555  loss_rpn_cls: 0.5001  loss_rpn_loc: 0.5175  time: 3.3350  data_time: 0.0042  lr: 0.00099901  max_mem: 0M
[32m[11/14 23:24:15 d2.utils.events]: [0m eta: 2:38:12  iter: 119  total_loss: 2.119  loss_cls: 0.2519  loss_box_reg: 0.3584  loss_mask: 0.5247  loss_rpn_cls: 0.3967  loss_rpn_loc: 0.521  time: 3.3621  data_time: 0.0044  lr: 0.0011988  max_mem: 0M
[32m[11/14 23:25:20 d2.utils.events]: [0m eta: 2:36:29  iter: 139  total_loss: 2.087  loss_cls: 0.2734  loss_box_reg: 0.3783  loss_mask: 0.5204  loss_rpn_cls: 0.3934  loss_rpn_loc: 0.5401  time: 3.3500  data_time: 0.0049  lr: 0.0013986  max_mem: 0M
[32m[11/14 23:26:28 d2.utils.events]: [0m eta: 2:35:41  iter: 159  total_loss: 1.924  loss_cls: 0.2472  loss_box_reg: 0.3165  loss_mask: 0.4824  loss_rpn_cls: 0.3742  loss_rpn_loc: 0.5148  time: 3.3533  data_time: 0.0045  lr: 0.0015984  max_mem: 0M
[32m[11/14 23:27:40 d2.utils.events]: [0m eta: 2:35:14  iter: 179  total_loss: 1.991  loss_cls: 0.2757  loss_box_reg: 0.4782  loss_mask: 0.4319  loss_rpn_cls: 0.3118  loss_rpn_loc: 0.4679  time: 3.3842  data_time: 0.0036  lr: 0.0017982  max_mem: 0M
[32m[11/14 23:28:54 d2.utils.events]: [0m eta: 2:36:29  iter: 199  total_loss: 1.895  loss_cls: 0.2505  loss_box_reg: 0.4562  loss_mask: 0.4175  loss_rpn_cls: 0.2722  loss_rpn_loc: 0.451  time: 3.4161  data_time: 0.0049  lr: 0.001998  max_mem: 0M
[32m[11/14 23:30:09 d2.utils.events]: [0m eta: 2:38:25  iter: 219  total_loss: 1.835  loss_cls: 0.2527  loss_box_reg: 0.4311  loss_mask: 0.3946  loss_rpn_cls: 0.2543  loss_rpn_loc: 0.4606  time: 3.4443  data_time: 0.0038  lr: 0.0021978  max_mem: 0M
[32m[11/14 23:31:22 d2.utils.events]: [0m eta: 2:37:42  iter: 239  total_loss: 1.837  loss_cls: 0.2543  loss_box_reg: 0.5016  loss_mask: 0.3671  loss_rpn_cls: 0.2961  loss_rpn_loc: 0.4312  time: 3.4605  data_time: 0.0039  lr: 0.0023976  max_mem: 0M
[32m[11/14 23:32:41 d2.utils.events]: [0m eta: 2:37:32  iter: 259  total_loss: 1.758  loss_cls: 0.2558  loss_box_reg: 0.4885  loss_mask: 0.352  loss_rpn_cls: 0.2388  loss_rpn_loc: 0.4323  time: 3.5007  data_time: 0.0060  lr: 0.0025974  max_mem: 0M
[32m[11/14 23:33:49 d2.utils.events]: [0m eta: 2:35:40  iter: 279  total_loss: 1.757  loss_cls: 0.2402  loss_box_reg: 0.4055  loss_mask: 0.3822  loss_rpn_cls: 0.2444  loss_rpn_loc: 0.4559  time: 3.4920  data_time: 0.0036  lr: 0.0027972  max_mem: 0M
[32m[11/14 23:34:58 d2.utils.events]: [0m eta: 2:34:53  iter: 299  total_loss: 1.702  loss_cls: 0.2271  loss_box_reg: 0.4312  loss_mask: 0.3528  loss_rpn_cls: 0.2598  loss_rpn_loc: 0.4351  time: 3.4884  data_time: 0.0055  lr: 0.002997  max_mem: 0M
[32m[11/14 23:36:08 d2.utils.events]: [0m eta: 2:33:44  iter: 319  total_loss: 1.783  loss_cls: 0.2765  loss_box_reg: 0.5109  loss_mask: 0.3306  loss_rpn_cls: 0.203  loss_rpn_loc: 0.4202  time: 3.4880  data_time: 0.0051  lr: 0.0031968  max_mem: 0M
[32m[11/14 23:37:14 d2.utils.events]: [0m eta: 2:32:25  iter: 339  total_loss: 1.718  loss_cls: 0.2568  loss_box_reg: 0.4019  loss_mask: 0.3234  loss_rpn_cls: 0.2354  loss_rpn_loc: 0.4831  time: 3.4771  data_time: 0.0033  lr: 0.0033966  max_mem: 0M
[32m[11/14 23:38:21 d2.utils.events]: [0m eta: 2:30:59  iter: 359  total_loss: 1.598  loss_cls: 0.2256  loss_box_reg: 0.4036  loss_mask: 0.3339  loss_rpn_cls: 0.2353  loss_rpn_loc: 0.4529  time: 3.4721  data_time: 0.0049  lr: 0.0035964  max_mem: 0M
[32m[11/14 23:39:28 d2.utils.events]: [0m eta: 2:29:46  iter: 379  total_loss: 1.642  loss_cls: 0.2361  loss_box_reg: 0.4083  loss_mask: 0.3175  loss_rpn_cls: 0.2128  loss_rpn_loc: 0.413  time: 3.4639  data_time: 0.0033  lr: 0.0037962  max_mem: 0M
[32m[11/14 23:40:36 d2.utils.events]: [0m eta: 2:28:33  iter: 399  total_loss: 1.507  loss_cls: 0.1938  loss_box_reg: 0.3605  loss_mask: 0.292  loss_rpn_cls: 0.2569  loss_rpn_loc: 0.4334  time: 3.4620  data_time: 0.0040  lr: 0.003996  max_mem: 0M
[32m[11/14 23:41:46 d2.utils.events]: [0m eta: 2:27:28  iter: 419  total_loss: 1.595  loss_cls: 0.2266  loss_box_reg: 0.4377  loss_mask: 0.3009  loss_rpn_cls: 0.245  loss_rpn_loc: 0.3992  time: 3.4624  data_time: 0.0057  lr: 0.0041958  max_mem: 0M
[32m[11/14 23:43:02 d2.utils.events]: [0m eta: 2:26:52  iter: 439  total_loss: 1.569  loss_cls: 0.2249  loss_box_reg: 0.4263  loss_mask: 0.2874  loss_rpn_cls: 0.2031  loss_rpn_loc: 0.3732  time: 3.4779  data_time: 0.0043  lr: 0.0043956  max_mem: 0M
[32m[11/14 23:44:15 d2.utils.events]: [0m eta: 2:26:23  iter: 459  total_loss: 1.606  loss_cls: 0.267  loss_box_reg: 0.4864  loss_mask: 0.2933  loss_rpn_cls: 0.1786  loss_rpn_loc: 0.3809  time: 3.4854  data_time: 0.0047  lr: 0.0045954  max_mem: 0M
[32m[11/14 23:45:28 d2.utils.events]: [0m eta: 2:25:35  iter: 479  total_loss: 1.61  loss_cls: 0.247  loss_box_reg: 0.4755  loss_mask: 0.2958  loss_rpn_cls: 0.2177  loss_rpn_loc: 0.4022  time: 3.4918  data_time: 0.0029  lr: 0.0047952  max_mem: 0M
[32m[11/14 23:46:37 d2.utils.events]: [0m eta: 2:24:13  iter: 499  total_loss: 1.734  loss_cls: 0.2804  loss_box_reg: 0.4925  loss_mask: 0.2842  loss_rpn_cls: 0.2374  loss_rpn_loc: 0.4315  time: 3.4903  data_time: 0.0044  lr: 0.004995  max_mem: 0M
[32m[11/14 23:47:51 d2.utils.events]: [0m eta: 2:23:23  iter: 519  total_loss: 1.731  loss_cls: 0.2676  loss_box_reg: 0.49  loss_mask: 0.2888  loss_rpn_cls: 0.2378  loss_rpn_loc: 0.411  time: 3.4991  data_time: 0.0038  lr: 0.0051948  max_mem: 0M
[32m[11/14 23:49:04 d2.utils.events]: [0m eta: 2:22:32  iter: 539  total_loss: 1.617  loss_cls: 0.2644  loss_box_reg: 0.473  loss_mask: 0.2877  loss_rpn_cls: 0.2023  loss_rpn_loc: 0.3997  time: 3.5033  data_time: 0.0033  lr: 0.0053946  max_mem: 0M
[32m[11/14 23:50:13 d2.utils.events]: [0m eta: 2:21:07  iter: 559  total_loss: 1.611  loss_cls: 0.2398  loss_box_reg: 0.4767  loss_mask: 0.2787  loss_rpn_cls: 0.1797  loss_rpn_loc: 0.4037  time: 3.5016  data_time: 0.0043  lr: 0.0055944  max_mem: 0M
[32m[11/14 23:51:25 d2.utils.events]: [0m eta: 2:20:13  iter: 579  total_loss: 1.565  loss_cls: 0.2727  loss_box_reg: 0.5151  loss_mask: 0.2758  loss_rpn_cls: 0.1711  loss_rpn_loc: 0.3813  time: 3.5050  data_time: 0.0033  lr: 0.0057942  max_mem: 0M
[32m[11/14 23:52:36 d2.utils.events]: [0m eta: 2:19:12  iter: 599  total_loss: 1.529  loss_cls: 0.2377  loss_box_reg: 0.4127  loss_mask: 0.2726  loss_rpn_cls: 0.1817  loss_rpn_loc: 0.3969  time: 3.5072  data_time: 0.0047  lr: 0.005994  max_mem: 0M
[32m[11/14 23:53:45 d2.utils.events]: [0m eta: 2:18:02  iter: 619  total_loss: 1.584  loss_cls: 0.2059  loss_box_reg: 0.4333  loss_mask: 0.2744  loss_rpn_cls: 0.204  loss_rpn_loc: 0.4453  time: 3.5057  data_time: 0.0084  lr: 0.0061938  max_mem: 0M
[32m[11/14 23:54:58 d2.utils.events]: [0m eta: 2:17:04  iter: 639  total_loss: 1.555  loss_cls: 0.2537  loss_box_reg: 0.4833  loss_mask: 0.2665  loss_rpn_cls: 0.1844  loss_rpn_loc: 0.3889  time: 3.5090  data_time: 0.0032  lr: 0.0063936  max_mem: 0M
[32m[11/14 23:56:08 d2.utils.events]: [0m eta: 2:15:54  iter: 659  total_loss: 1.659  loss_cls: 0.2625  loss_box_reg: 0.4578  loss_mask: 0.2624  loss_rpn_cls: 0.179  loss_rpn_loc: 0.4554  time: 3.5095  data_time: 0.0037  lr: 0.0065934  max_mem: 0M
[32m[11/14 23:57:20 d2.utils.events]: [0m eta: 2:14:51  iter: 679  total_loss: 1.506  loss_cls: 0.2312  loss_box_reg: 0.4569  loss_mask: 0.2703  loss_rpn_cls: 0.1694  loss_rpn_loc: 0.4002  time: 3.5112  data_time: 0.0036  lr: 0.0067932  max_mem: 0M
[32m[11/14 23:58:32 d2.utils.events]: [0m eta: 2:13:56  iter: 699  total_loss: 1.626  loss_cls: 0.2627  loss_box_reg: 0.4518  loss_mask: 0.2591  loss_rpn_cls: 0.2037  loss_rpn_loc: 0.3958  time: 3.5138  data_time: 0.0034  lr: 0.006993  max_mem: 0M
[32m[11/14 23:59:43 d2.utils.events]: [0m eta: 2:12:46  iter: 719  total_loss: 1.697  loss_cls: 0.2712  loss_box_reg: 0.4899  loss_mask: 0.2694  loss_rpn_cls: 0.2064  loss_rpn_loc: 0.4153  time: 3.5157  data_time: 0.0057  lr: 0.0071928  max_mem: 0M
[32m[11/15 00:00:56 d2.utils.events]: [0m eta: 2:11:41  iter: 739  total_loss: 1.547  loss_cls: 0.2162  loss_box_reg: 0.4574  loss_mask: 0.2468  loss_rpn_cls: 0.1671  loss_rpn_loc: 0.4159  time: 3.5182  data_time: 0.0031  lr: 0.0073926  max_mem: 0M
[32m[11/15 00:02:08 d2.utils.events]: [0m eta: 2:10:33  iter: 759  total_loss: 1.549  loss_cls: 0.2534  loss_box_reg: 0.4727  loss_mask: 0.2525  loss_rpn_cls: 0.2011  loss_rpn_loc: 0.3891  time: 3.5213  data_time: 0.0039  lr: 0.0075924  max_mem: 0M
[32m[11/15 00:03:21 d2.utils.events]: [0m eta: 2:09:37  iter: 779  total_loss: 1.582  loss_cls: 0.2502  loss_box_reg: 0.4824  loss_mask: 0.2473  loss_rpn_cls: 0.1437  loss_rpn_loc: 0.4156  time: 3.5245  data_time: 0.0031  lr: 0.0077922  max_mem: 0M
[32m[11/15 00:04:32 d2.utils.events]: [0m eta: 2:08:29  iter: 799  total_loss: 1.539  loss_cls: 0.2203  loss_box_reg: 0.4729  loss_mask: 0.2579  loss_rpn_cls: 0.1618  loss_rpn_loc: 0.4213  time: 3.5251  data_time: 0.0053  lr: 0.007992  max_mem: 0M
[32m[11/15 00:05:43 d2.utils.events]: [0m eta: 2:07:19  iter: 819  total_loss: 1.377  loss_cls: 0.1878  loss_box_reg: 0.4032  loss_mask: 0.2433  loss_rpn_cls: 0.1549  loss_rpn_loc: 0.3932  time: 3.5251  data_time: 0.0034  lr: 0.0081918  max_mem: 0M
[32m[11/15 00:06:52 d2.utils.events]: [0m eta: 2:06:06  iter: 839  total_loss: 1.542  loss_cls: 0.2202  loss_box_reg: 0.4395  loss_mask: 0.2582  loss_rpn_cls: 0.2074  loss_rpn_loc: 0.427  time: 3.5232  data_time: 0.0033  lr: 0.0083916  max_mem: 0M
[32m[11/15 00:08:07 d2.utils.events]: [0m eta: 2:05:07  iter: 859  total_loss: 1.511  loss_cls: 0.2413  loss_box_reg: 0.4782  loss_mask: 0.2683  loss_rpn_cls: 0.1477  loss_rpn_loc: 0.3749  time: 3.5283  data_time: 0.0035  lr: 0.0085914  max_mem: 0M
[32m[11/15 00:09:19 d2.utils.events]: [0m eta: 2:04:02  iter: 879  total_loss: 1.535  loss_cls: 0.2251  loss_box_reg: 0.4589  loss_mask: 0.2558  loss_rpn_cls: 0.197  loss_rpn_loc: 0.392  time: 3.5297  data_time: 0.0045  lr: 0.0087912  max_mem: 0M
[32m[11/15 00:10:28 d2.utils.events]: [0m eta: 2:02:47  iter: 899  total_loss: 1.483  loss_cls: 0.2469  loss_box_reg: 0.4294  loss_mask: 0.2581  loss_rpn_cls: 0.1569  loss_rpn_loc: 0.402  time: 3.5283  data_time: 0.0028  lr: 0.008991  max_mem: 0M
[32m[11/15 00:11:40 d2.utils.events]: [0m eta: 2:01:39  iter: 919  total_loss: 1.49  loss_cls: 0.2197  loss_box_reg: 0.46  loss_mask: 0.245  loss_rpn_cls: 0.165  loss_rpn_loc: 0.3945  time: 3.5295  data_time: 0.0032  lr: 0.0091908  max_mem: 0M
[32m[11/15 00:12:51 d2.utils.events]: [0m eta: 2:00:32  iter: 939  total_loss: 1.582  loss_cls: 0.2542  loss_box_reg: 0.4639  loss_mask: 0.2515  loss_rpn_cls: 0.1648  loss_rpn_loc: 0.4131  time: 3.5302  data_time: 0.0048  lr: 0.0093906  max_mem: 0M
[32m[11/15 00:14:00 d2.utils.events]: [0m eta: 1:59:16  iter: 959  total_loss: 1.431  loss_cls: 0.2022  loss_box_reg: 0.412  loss_mask: 0.2438  loss_rpn_cls: 0.1722  loss_rpn_loc: 0.4079  time: 3.5282  data_time: 0.0044  lr: 0.0095904  max_mem: 0M
[32m[11/15 00:15:09 d2.utils.events]: [0m eta: 1:58:02  iter: 979  total_loss: 1.426  loss_cls: 0.2192  loss_box_reg: 0.4187  loss_mask: 0.2401  loss_rpn_cls: 0.1372  loss_rpn_loc: 0.4028  time: 3.5272  data_time: 0.0043  lr: 0.0097902  max_mem: 0M
[32m[11/15 00:16:21 d2.utils.events]: [0m eta: 1:56:56  iter: 999  total_loss: 1.486  loss_cls: 0.228  loss_box_reg: 0.4557  loss_mask: 0.2459  loss_rpn_cls: 0.1436  loss_rpn_loc: 0.3908  time: 3.5288  data_time: 0.0044  lr: 0.00999  max_mem: 0M
[32m[11/15 00:17:32 d2.utils.events]: [0m eta: 1:55:56  iter: 1019  total_loss: 1.354  loss_cls: 0.1733  loss_box_reg: 0.4161  loss_mask: 0.2443  loss_rpn_cls: 0.1641  loss_rpn_loc: 0.3941  time: 3.5292  data_time: 0.0042  lr: 0.01  max_mem: 0M
[32m[11/15 00:18:40 d2.utils.events]: [0m eta: 1:54:55  iter: 1039  total_loss: 1.401  loss_cls: 0.2034  loss_box_reg: 0.4391  loss_mask: 0.2276  loss_rpn_cls: 0.1683  loss_rpn_loc: 0.3975  time: 3.5265  data_time: 0.0052  lr: 0.01  max_mem: 0M
[32m[11/15 00:19:50 d2.utils.events]: [0m eta: 1:54:04  iter: 1059  total_loss: 1.362  loss_cls: 0.2008  loss_box_reg: 0.4112  loss_mask: 0.2133  loss_rpn_cls: 0.1281  loss_rpn_loc: 0.3942  time: 3.5256  data_time: 0.0051  lr: 0.01  max_mem: 0M
[32m[11/15 00:21:00 d2.utils.events]: [0m eta: 1:53:05  iter: 1079  total_loss: 1.436  loss_cls: 0.2211  loss_box_reg: 0.4506  loss_mask: 0.228  loss_rpn_cls: 0.1744  loss_rpn_loc: 0.3832  time: 3.5253  data_time: 0.0043  lr: 0.01  max_mem: 0M
[32m[11/15 00:22:11 d2.utils.events]: [0m eta: 1:51:56  iter: 1099  total_loss: 1.409  loss_cls: 0.2257  loss_box_reg: 0.4625  loss_mask: 0.2394  loss_rpn_cls: 0.1622  loss_rpn_loc: 0.354  time: 3.5253  data_time: 0.0049  lr: 0.01  max_mem: 0M
[32m[11/15 00:23:25 d2.utils.events]: [0m eta: 1:51:00  iter: 1119  total_loss: 1.388  loss_cls: 0.2077  loss_box_reg: 0.4584  loss_mask: 0.2211  loss_rpn_cls: 0.1361  loss_rpn_loc: 0.3458  time: 3.5291  data_time: 0.0087  lr: 0.01  max_mem: 0M
[32m[11/15 00:24:36 d2.utils.events]: [0m eta: 1:49:57  iter: 1139  total_loss: 1.424  loss_cls: 0.2053  loss_box_reg: 0.4455  loss_mask: 0.222  loss_rpn_cls: 0.1623  loss_rpn_loc: 0.3926  time: 3.5293  data_time: 0.0063  lr: 0.01  max_mem: 0M
[32m[11/15 00:25:49 d2.utils.events]: [0m eta: 1:48:59  iter: 1159  total_loss: 1.469  loss_cls: 0.2107  loss_box_reg: 0.4522  loss_mask: 0.2462  loss_rpn_cls: 0.1571  loss_rpn_loc: 0.3789  time: 3.5314  data_time: 0.0090  lr: 0.01  max_mem: 0M
[32m[11/15 00:26:59 d2.utils.events]: [0m eta: 1:47:46  iter: 1179  total_loss: 1.444  loss_cls: 0.2353  loss_box_reg: 0.4697  loss_mask: 0.2383  loss_rpn_cls: 0.1218  loss_rpn_loc: 0.3648  time: 3.5308  data_time: 0.0078  lr: 0.01  max_mem: 0M
[32m[11/15 00:28:16 d2.utils.events]: [0m eta: 1:46:33  iter: 1199  total_loss: 1.399  loss_cls: 0.2114  loss_box_reg: 0.445  loss_mask: 0.2297  loss_rpn_cls: 0.1535  loss_rpn_loc: 0.3653  time: 3.5362  data_time: 0.0051  lr: 0.01  max_mem: 0M
[32m[11/15 00:29:28 d2.utils.events]: [0m eta: 1:45:19  iter: 1219  total_loss: 1.415  loss_cls: 0.2162  loss_box_reg: 0.4797  loss_mask: 0.2236  loss_rpn_cls: 0.1609  loss_rpn_loc: 0.3355  time: 3.5365  data_time: 0.0047  lr: 0.01  max_mem: 0M
[32m[11/15 00:30:39 d2.utils.events]: [0m eta: 1:44:07  iter: 1239  total_loss: 1.491  loss_cls: 0.2283  loss_box_reg: 0.467  loss_mask: 0.2451  loss_rpn_cls: 0.1581  loss_rpn_loc: 0.3794  time: 3.5373  data_time: 0.0049  lr: 0.01  max_mem: 0M
[32m[11/15 00:31:52 d2.utils.events]: [0m eta: 1:42:52  iter: 1259  total_loss: 1.452  loss_cls: 0.2239  loss_box_reg: 0.4314  loss_mask: 0.2252  loss_rpn_cls: 0.134  loss_rpn_loc: 0.4109  time: 3.5385  data_time: 0.0034  lr: 0.01  max_mem: 0M
[32m[11/15 00:33:02 d2.utils.events]: [0m eta: 1:41:46  iter: 1279  total_loss: 1.43  loss_cls: 0.2079  loss_box_reg: 0.4311  loss_mask: 0.2214  loss_rpn_cls: 0.1231  loss_rpn_loc: 0.3706  time: 3.5385  data_time: 0.0068  lr: 0.01  max_mem: 0M
[32m[11/15 00:34:16 d2.utils.events]: [0m eta: 1:40:39  iter: 1299  total_loss: 1.428  loss_cls: 0.2386  loss_box_reg: 0.434  loss_mask: 0.2129  loss_rpn_cls: 0.1502  loss_rpn_loc: 0.3801  time: 3.5408  data_time: 0.0050  lr: 0.01  max_mem: 0M
[32m[11/15 00:35:24 d2.utils.events]: [0m eta: 1:39:25  iter: 1319  total_loss: 1.393  loss_cls: 0.1961  loss_box_reg: 0.4462  loss_mask: 0.2172  loss_rpn_cls: 0.1507  loss_rpn_loc: 0.353  time: 3.5387  data_time: 0.0046  lr: 0.01  max_mem: 0M
[32m[11/15 00:36:36 d2.utils.events]: [0m eta: 1:38:19  iter: 1339  total_loss: 1.384  loss_cls: 0.1978  loss_box_reg: 0.426  loss_mask: 0.2249  loss_rpn_cls: 0.1558  loss_rpn_loc: 0.3756  time: 3.5393  data_time: 0.0051  lr: 0.01  max_mem: 0M
[32m[11/15 00:37:48 d2.utils.events]: [0m eta: 1:37:09  iter: 1359  total_loss: 1.306  loss_cls: 0.1834  loss_box_reg: 0.421  loss_mask: 0.2175  loss_rpn_cls: 0.141  loss_rpn_loc: 0.3521  time: 3.5403  data_time: 0.0044  lr: 0.01  max_mem: 0M
[32m[11/15 00:38:59 d2.utils.events]: [0m eta: 1:36:03  iter: 1379  total_loss: 1.312  loss_cls: 0.1891  loss_box_reg: 0.4287  loss_mask: 0.2282  loss_rpn_cls: 0.13  loss_rpn_loc: 0.3298  time: 3.5404  data_time: 0.0065  lr: 0.01  max_mem: 0M
[32m[11/15 00:40:11 d2.utils.events]: [0m eta: 1:34:52  iter: 1399  total_loss: 1.362  loss_cls: 0.2321  loss_box_reg: 0.429  loss_mask: 0.2207  loss_rpn_cls: 0.1245  loss_rpn_loc: 0.3549  time: 3.5413  data_time: 0.0060  lr: 0.01  max_mem: 0M
[32m[11/15 00:41:26 d2.utils.events]: [0m eta: 1:33:49  iter: 1419  total_loss: 1.341  loss_cls: 0.2366  loss_box_reg: 0.4332  loss_mask: 0.2084  loss_rpn_cls: 0.1254  loss_rpn_loc: 0.3534  time: 3.5437  data_time: 0.0041  lr: 0.01  max_mem: 0M
[32m[11/15 00:42:38 d2.utils.events]: [0m eta: 1:32:38  iter: 1439  total_loss: 1.366  loss_cls: 0.1957  loss_box_reg: 0.4241  loss_mask: 0.2234  loss_rpn_cls: 0.1399  loss_rpn_loc: 0.4111  time: 3.5446  data_time: 0.0059  lr: 0.01  max_mem: 0M
[32m[11/15 00:43:50 d2.utils.events]: [0m eta: 1:31:26  iter: 1459  total_loss: 1.347  loss_cls: 0.1822  loss_box_reg: 0.4388  loss_mask: 0.2155  loss_rpn_cls: 0.1297  loss_rpn_loc: 0.3723  time: 3.5453  data_time: 0.0052  lr: 0.01  max_mem: 0M
[32m[11/15 00:45:04 d2.utils.events]: [0m eta: 1:30:15  iter: 1479  total_loss: 1.399  loss_cls: 0.229  loss_box_reg: 0.4569  loss_mask: 0.2168  loss_rpn_cls: 0.131  loss_rpn_loc: 0.3347  time: 3.5475  data_time: 0.0048  lr: 0.01  max_mem: 0M
[32m[11/15 00:46:16 d2.utils.events]: [0m eta: 1:29:07  iter: 1499  total_loss: 1.349  loss_cls: 0.1897  loss_box_reg: 0.4042  loss_mask: 0.2042  loss_rpn_cls: 0.1383  loss_rpn_loc: 0.3643  time: 3.5485  data_time: 0.0042  lr: 0.01  max_mem: 0M
[32m[11/15 00:47:26 d2.utils.events]: [0m eta: 1:27:52  iter: 1519  total_loss: 1.274  loss_cls: 0.1998  loss_box_reg: 0.4412  loss_mask: 0.1972  loss_rpn_cls: 0.1262  loss_rpn_loc: 0.3214  time: 3.5475  data_time: 0.0032  lr: 0.01  max_mem: 0M
[32m[11/15 00:48:42 d2.utils.events]: [0m eta: 1:26:41  iter: 1539  total_loss: 1.318  loss_cls: 0.1958  loss_box_reg: 0.4301  loss_mask: 0.2134  loss_rpn_cls: 0.1368  loss_rpn_loc: 0.319  time: 3.5505  data_time: 0.0050  lr: 0.01  max_mem: 0M
[32m[11/15 00:49:54 d2.utils.events]: [0m eta: 1:25:33  iter: 1559  total_loss: 1.318  loss_cls: 0.183  loss_box_reg: 0.4157  loss_mask: 0.1991  loss_rpn_cls: 0.1321  loss_rpn_loc: 0.3219  time: 3.5517  data_time: 0.0043  lr: 0.01  max_mem: 0M
[32m[11/15 00:51:08 d2.utils.events]: [0m eta: 1:24:23  iter: 1579  total_loss: 1.242  loss_cls: 0.171  loss_box_reg: 0.3968  loss_mask: 0.202  loss_rpn_cls: 0.1513  loss_rpn_loc: 0.3307  time: 3.5532  data_time: 0.0053  lr: 0.01  max_mem: 0M
[32m[11/15 00:52:19 d2.utils.events]: [0m eta: 1:23:11  iter: 1599  total_loss: 1.389  loss_cls: 0.2113  loss_box_reg: 0.4179  loss_mask: 0.2084  loss_rpn_cls: 0.1809  loss_rpn_loc: 0.3653  time: 3.5535  data_time: 0.0028  lr: 0.01  max_mem: 0M
[32m[11/15 00:53:32 d2.utils.events]: [0m eta: 1:22:06  iter: 1619  total_loss: 1.361  loss_cls: 0.2142  loss_box_reg: 0.4673  loss_mask: 0.2119  loss_rpn_cls: 0.1569  loss_rpn_loc: 0.34  time: 3.5547  data_time: 0.0045  lr: 0.01  max_mem: 0M
[32m[11/15 00:54:44 d2.utils.events]: [0m eta: 1:20:49  iter: 1639  total_loss: 1.354  loss_cls: 0.2011  loss_box_reg: 0.4201  loss_mask: 0.2015  loss_rpn_cls: 0.1219  loss_rpn_loc: 0.3762  time: 3.5549  data_time: 0.0047  lr: 0.01  max_mem: 0M
[32m[11/15 00:55:55 d2.utils.events]: [0m eta: 1:19:38  iter: 1659  total_loss: 1.315  loss_cls: 0.1786  loss_box_reg: 0.4104  loss_mask: 0.197  loss_rpn_cls: 0.1523  loss_rpn_loc: 0.3815  time: 3.5551  data_time: 0.0036  lr: 0.01  max_mem: 0M
[32m[11/15 00:57:09 d2.utils.events]: [0m eta: 1:18:30  iter: 1679  total_loss: 1.259  loss_cls: 0.1809  loss_box_reg: 0.3924  loss_mask: 0.2042  loss_rpn_cls: 0.1103  loss_rpn_loc: 0.3262  time: 3.5567  data_time: 0.0034  lr: 0.01  max_mem: 0M
[32m[11/15 00:58:23 d2.utils.events]: [0m eta: 1:17:21  iter: 1699  total_loss: 1.299  loss_cls: 0.2105  loss_box_reg: 0.4109  loss_mask: 0.2073  loss_rpn_cls: 0.1093  loss_rpn_loc: 0.3339  time: 3.5585  data_time: 0.0035  lr: 0.01  max_mem: 0M
[32m[11/15 00:59:37 d2.utils.events]: [0m eta: 1:16:15  iter: 1719  total_loss: 1.317  loss_cls: 0.2045  loss_box_reg: 0.4156  loss_mask: 0.2164  loss_rpn_cls: 0.1369  loss_rpn_loc: 0.3309  time: 3.5599  data_time: 0.0036  lr: 0.01  max_mem: 0M
[32m[11/15 01:00:49 d2.utils.events]: [0m eta: 1:15:01  iter: 1739  total_loss: 1.24  loss_cls: 0.191  loss_box_reg: 0.4069  loss_mask: 0.1988  loss_rpn_cls: 0.1146  loss_rpn_loc: 0.3233  time: 3.5601  data_time: 0.0038  lr: 0.01  max_mem: 0M
[32m[11/15 01:01:59 d2.utils.events]: [0m eta: 1:13:46  iter: 1759  total_loss: 1.256  loss_cls: 0.1932  loss_box_reg: 0.4297  loss_mask: 0.2007  loss_rpn_cls: 0.1157  loss_rpn_loc: 0.308  time: 3.5594  data_time: 0.0040  lr: 0.01  max_mem: 0M
[32m[11/15 01:03:11 d2.utils.events]: [0m eta: 1:12:33  iter: 1779  total_loss: 1.228  loss_cls: 0.2  loss_box_reg: 0.4158  loss_mask: 0.2183  loss_rpn_cls: 0.1047  loss_rpn_loc: 0.3123  time: 3.5602  data_time: 0.0048  lr: 0.01  max_mem: 0M
[32m[11/15 01:04:22 d2.utils.events]: [0m eta: 1:11:24  iter: 1799  total_loss: 1.256  loss_cls: 0.1969  loss_box_reg: 0.4052  loss_mask: 0.202  loss_rpn_cls: 0.1106  loss_rpn_loc: 0.3242  time: 3.5601  data_time: 0.0046  lr: 0.01  max_mem: 0M
[32m[11/15 01:05:32 d2.utils.events]: [0m eta: 1:10:12  iter: 1819  total_loss: 1.275  loss_cls: 0.1923  loss_box_reg: 0.4247  loss_mask: 0.2057  loss_rpn_cls: 0.1279  loss_rpn_loc: 0.3  time: 3.5594  data_time: 0.0050  lr: 0.01  max_mem: 0M
[32m[11/15 01:06:47 d2.utils.events]: [0m eta: 1:09:09  iter: 1839  total_loss: 1.186  loss_cls: 0.1847  loss_box_reg: 0.4273  loss_mask: 0.1975  loss_rpn_cls: 0.104  loss_rpn_loc: 0.2963  time: 3.5615  data_time: 0.0033  lr: 0.01  max_mem: 0M
[32m[11/15 01:08:00 d2.utils.events]: [0m eta: 1:07:55  iter: 1859  total_loss: 1.18  loss_cls: 0.1916  loss_box_reg: 0.4087  loss_mask: 0.1893  loss_rpn_cls: 0.1055  loss_rpn_loc: 0.2977  time: 3.5621  data_time: 0.0045  lr: 0.01  max_mem: 0M
[32m[11/15 01:09:10 d2.utils.events]: [0m eta: 1:06:43  iter: 1879  total_loss: 1.137  loss_cls: 0.1927  loss_box_reg: 0.4041  loss_mask: 0.1985  loss_rpn_cls: 0.1005  loss_rpn_loc: 0.2797  time: 3.5617  data_time: 0.0047  lr: 0.01  max_mem: 0M
[32m[11/15 01:10:23 d2.utils.events]: [0m eta: 1:05:35  iter: 1899  total_loss: 1.236  loss_cls: 0.1953  loss_box_reg: 0.4162  loss_mask: 0.1895  loss_rpn_cls: 0.1167  loss_rpn_loc: 0.3009  time: 3.5627  data_time: 0.0047  lr: 0.01  max_mem: 0M
[32m[11/15 01:11:32 d2.utils.events]: [0m eta: 1:04:20  iter: 1919  total_loss: 1.144  loss_cls: 0.1656  loss_box_reg: 0.3828  loss_mask: 0.2062  loss_rpn_cls: 0.08877  loss_rpn_loc: 0.3151  time: 3.5612  data_time: 0.0059  lr: 0.01  max_mem: 0M
[32m[11/15 01:12:47 d2.utils.events]: [0m eta: 1:03:10  iter: 1939  total_loss: 1.164  loss_cls: 0.1705  loss_box_reg: 0.3827  loss_mask: 0.1897  loss_rpn_cls: 0.09307  loss_rpn_loc: 0.285  time: 3.5629  data_time: 0.0049  lr: 0.01  max_mem: 0M
[32m[11/15 01:14:00 d2.utils.events]: [0m eta: 1:02:06  iter: 1959  total_loss: 1.195  loss_cls: 0.1739  loss_box_reg: 0.3904  loss_mask: 0.1859  loss_rpn_cls: 0.1143  loss_rpn_loc: 0.3076  time: 3.5640  data_time: 0.0041  lr: 0.01  max_mem: 0M
[32m[11/15 01:15:12 d2.utils.events]: [0m eta: 1:00:59  iter: 1979  total_loss: 1.175  loss_cls: 0.1797  loss_box_reg: 0.3949  loss_mask: 0.1867  loss_rpn_cls: 0.1161  loss_rpn_loc: 0.2875  time: 3.5646  data_time: 0.0049  lr: 0.01  max_mem: 0M
[32m[11/15 01:16:23 d2.utils.events]: [0m eta: 0:59:47  iter: 1999  total_loss: 1.183  loss_cls: 0.1865  loss_box_reg: 0.383  loss_mask: 0.1986  loss_rpn_cls: 0.1038  loss_rpn_loc: 0.2923  time: 3.5642  data_time: 0.0043  lr: 0.01  max_mem: 0M
[32m[11/15 01:17:37 d2.utils.events]: [0m eta: 0:58:36  iter: 2019  total_loss: 1.162  loss_cls: 0.1675  loss_box_reg: 0.3823  loss_mask: 0.1973  loss_rpn_cls: 0.1012  loss_rpn_loc: 0.2969  time: 3.5656  data_time: 0.0046  lr: 0.01  max_mem: 0M
[32m[11/15 01:18:47 d2.utils.events]: [0m eta: 0:57:25  iter: 2039  total_loss: 1.174  loss_cls: 0.1882  loss_box_reg: 0.4043  loss_mask: 0.1852  loss_rpn_cls: 0.1091  loss_rpn_loc: 0.3183  time: 3.5651  data_time: 0.0037  lr: 0.01  max_mem: 0M
[32m[11/15 01:20:00 d2.utils.events]: [0m eta: 0:56:15  iter: 2059  total_loss: 1.179  loss_cls: 0.1651  loss_box_reg: 0.3553  loss_mask: 0.1804  loss_rpn_cls: 0.1415  loss_rpn_loc: 0.3215  time: 3.5657  data_time: 0.0031  lr: 0.01  max_mem: 0M
[32m[11/15 01:21:13 d2.utils.events]: [0m eta: 0:55:05  iter: 2079  total_loss: 1.183  loss_cls: 0.1766  loss_box_reg: 0.3818  loss_mask: 0.1929  loss_rpn_cls: 0.09888  loss_rpn_loc: 0.301  time: 3.5665  data_time: 0.0043  lr: 0.01  max_mem: 0M
[32m[11/15 01:22:24 d2.utils.events]: [0m eta: 0:53:52  iter: 2099  total_loss: 1.147  loss_cls: 0.1808  loss_box_reg: 0.4015  loss_mask: 0.1982  loss_rpn_cls: 0.1019  loss_rpn_loc: 0.286  time: 3.5664  data_time: 0.0033  lr: 0.01  max_mem: 0M
[32m[11/15 01:23:36 d2.utils.events]: [0m eta: 0:52:39  iter: 2119  total_loss: 1.209  loss_cls: 0.1855  loss_box_reg: 0.4018  loss_mask: 0.1977  loss_rpn_cls: 0.09291  loss_rpn_loc: 0.3012  time: 3.5668  data_time: 0.0049  lr: 0.01  max_mem: 0M
[32m[11/15 01:24:47 d2.utils.events]: [0m eta: 0:51:27  iter: 2139  total_loss: 1.217  loss_cls: 0.2091  loss_box_reg: 0.4099  loss_mask: 0.1845  loss_rpn_cls: 0.1226  loss_rpn_loc: 0.2913  time: 3.5666  data_time: 0.0044  lr: 0.01  max_mem: 0M
[32m[11/15 01:25:59 d2.utils.events]: [0m eta: 0:50:14  iter: 2159  total_loss: 1.177  loss_cls: 0.1761  loss_box_reg: 0.397  loss_mask: 0.1853  loss_rpn_cls: 0.1156  loss_rpn_loc: 0.2897  time: 3.5667  data_time: 0.0034  lr: 0.01  max_mem: 0M
[32m[11/15 01:27:11 d2.utils.events]: [0m eta: 0:49:03  iter: 2179  total_loss: 1.116  loss_cls: 0.1797  loss_box_reg: 0.3765  loss_mask: 0.1837  loss_rpn_cls: 0.07855  loss_rpn_loc: 0.2809  time: 3.5670  data_time: 0.0030  lr: 0.01  max_mem: 0M
[32m[11/15 01:28:26 d2.utils.events]: [0m eta: 0:47:51  iter: 2199  total_loss: 1.152  loss_cls: 0.1731  loss_box_reg: 0.3706  loss_mask: 0.186  loss_rpn_cls: 0.0947  loss_rpn_loc: 0.3094  time: 3.5686  data_time: 0.0084  lr: 0.01  max_mem: 0M
[32m[11/15 01:29:37 d2.utils.events]: [0m eta: 0:46:40  iter: 2219  total_loss: 1.149  loss_cls: 0.1934  loss_box_reg: 0.3933  loss_mask: 0.1909  loss_rpn_cls: 0.09762  loss_rpn_loc: 0.3017  time: 3.5684  data_time: 0.0085  lr: 0.01  max_mem: 0M
[32m[11/15 01:30:49 d2.utils.events]: [0m eta: 0:45:27  iter: 2239  total_loss: 1.149  loss_cls: 0.1672  loss_box_reg: 0.3759  loss_mask: 0.1822  loss_rpn_cls: 0.1192  loss_rpn_loc: 0.2957  time: 3.5685  data_time: 0.0053  lr: 0.01  max_mem: 0M
[32m[11/15 01:32:01 d2.utils.events]: [0m eta: 0:44:16  iter: 2259  total_loss: 1.107  loss_cls: 0.1877  loss_box_reg: 0.3734  loss_mask: 0.1893  loss_rpn_cls: 0.1027  loss_rpn_loc: 0.2698  time: 3.5692  data_time: 0.0039  lr: 0.01  max_mem: 0M
[32m[11/15 01:33:15 d2.utils.events]: [0m eta: 0:43:08  iter: 2279  total_loss: 1.09  loss_cls: 0.1772  loss_box_reg: 0.3834  loss_mask: 0.1852  loss_rpn_cls: 0.07548  loss_rpn_loc: 0.2517  time: 3.5701  data_time: 0.0040  lr: 0.01  max_mem: 0M
[32m[11/15 01:34:25 d2.utils.events]: [0m eta: 0:41:53  iter: 2299  total_loss: 1.143  loss_cls: 0.1913  loss_box_reg: 0.3988  loss_mask: 0.1854  loss_rpn_cls: 0.1014  loss_rpn_loc: 0.2744  time: 3.5696  data_time: 0.0046  lr: 0.01  max_mem: 0M
[32m[11/15 01:35:36 d2.utils.events]: [0m eta: 0:40:43  iter: 2319  total_loss: 1.122  loss_cls: 0.1796  loss_box_reg: 0.4034  loss_mask: 0.186  loss_rpn_cls: 0.09385  loss_rpn_loc: 0.2805  time: 3.5692  data_time: 0.0051  lr: 0.01  max_mem: 0M
[32m[11/15 01:36:48 d2.utils.events]: [0m eta: 0:39:31  iter: 2339  total_loss: 1.183  loss_cls: 0.174  loss_box_reg: 0.38  loss_mask: 0.1906  loss_rpn_cls: 0.09474  loss_rpn_loc: 0.2952  time: 3.5694  data_time: 0.0048  lr: 0.01  max_mem: 0M
[32m[11/15 01:38:01 d2.utils.events]: [0m eta: 0:38:21  iter: 2359  total_loss: 1.113  loss_cls: 0.1552  loss_box_reg: 0.3604  loss_mask: 0.1845  loss_rpn_cls: 0.1013  loss_rpn_loc: 0.2931  time: 3.5702  data_time: 0.0055  lr: 0.01  max_mem: 0M
[32m[11/15 01:39:13 d2.utils.events]: [0m eta: 0:37:10  iter: 2379  total_loss: 1.093  loss_cls: 0.1814  loss_box_reg: 0.3743  loss_mask: 0.1875  loss_rpn_cls: 0.1181  loss_rpn_loc: 0.2609  time: 3.5704  data_time: 0.0042  lr: 0.01  max_mem: 0M
[32m[11/15 01:40:25 d2.utils.events]: [0m eta: 0:35:57  iter: 2399  total_loss: 1.113  loss_cls: 0.1684  loss_box_reg: 0.3751  loss_mask: 0.1781  loss_rpn_cls: 0.08251  loss_rpn_loc: 0.2777  time: 3.5707  data_time: 0.0035  lr: 0.01  max_mem: 0M
[32m[11/15 01:41:34 d2.utils.events]: [0m eta: 0:34:41  iter: 2419  total_loss: 1.09  loss_cls: 0.1798  loss_box_reg: 0.3793  loss_mask: 0.1725  loss_rpn_cls: 0.1105  loss_rpn_loc: 0.2888  time: 3.5698  data_time: 0.0036  lr: 0.01  max_mem: 0M
[32m[11/15 01:42:45 d2.utils.events]: [0m eta: 0:33:28  iter: 2439  total_loss: 1.173  loss_cls: 0.1698  loss_box_reg: 0.3922  loss_mask: 0.1857  loss_rpn_cls: 0.1077  loss_rpn_loc: 0.2815  time: 3.5695  data_time: 0.0045  lr: 0.01  max_mem: 0M
[32m[11/15 01:43:57 d2.utils.events]: [0m eta: 0:32:15  iter: 2459  total_loss: 1.104  loss_cls: 0.1694  loss_box_reg: 0.3682  loss_mask: 0.175  loss_rpn_cls: 0.09462  loss_rpn_loc: 0.2751  time: 3.5696  data_time: 0.0042  lr: 0.01  max_mem: 0M
[32m[11/15 01:45:09 d2.utils.events]: [0m eta: 0:31:01  iter: 2479  total_loss: 1.157  loss_cls: 0.1628  loss_box_reg: 0.3758  loss_mask: 0.1869  loss_rpn_cls: 0.1035  loss_rpn_loc: 0.3012  time: 3.5698  data_time: 0.0048  lr: 0.01  max_mem: 0M
[32m[11/15 01:46:21 d2.utils.events]: [0m eta: 0:29:47  iter: 2499  total_loss: 1.115  loss_cls: 0.1533  loss_box_reg: 0.3677  loss_mask: 0.1797  loss_rpn_cls: 0.1111  loss_rpn_loc: 0.2768  time: 3.5701  data_time: 0.0045  lr: 0.01  max_mem: 0M
[32m[11/15 01:47:33 d2.utils.events]: [0m eta: 0:28:39  iter: 2519  total_loss: 1.137  loss_cls: 0.1731  loss_box_reg: 0.3775  loss_mask: 0.1723  loss_rpn_cls: 0.1039  loss_rpn_loc: 0.2926  time: 3.5704  data_time: 0.0038  lr: 0.01  max_mem: 0M
[32m[11/15 01:48:45 d2.utils.events]: [0m eta: 0:27:27  iter: 2539  total_loss: 1.066  loss_cls: 0.1599  loss_box_reg: 0.3525  loss_mask: 0.1826  loss_rpn_cls: 0.08576  loss_rpn_loc: 0.272  time: 3.5707  data_time: 0.0055  lr: 0.01  max_mem: 0M
[32m[11/15 01:49:57 d2.utils.events]: [0m eta: 0:26:13  iter: 2559  total_loss: 1.088  loss_cls: 0.1586  loss_box_reg: 0.3421  loss_mask: 0.1846  loss_rpn_cls: 0.08848  loss_rpn_loc: 0.2794  time: 3.5708  data_time: 0.0054  lr: 0.01  max_mem: 0M
[32m[11/15 01:51:10 d2.utils.events]: [0m eta: 0:25:01  iter: 2579  total_loss: 1.06  loss_cls: 0.1686  loss_box_reg: 0.3659  loss_mask: 0.1804  loss_rpn_cls: 0.08889  loss_rpn_loc: 0.2759  time: 3.5712  data_time: 0.0040  lr: 0.01  max_mem: 0M
[32m[11/15 01:52:20 d2.utils.events]: [0m eta: 0:23:48  iter: 2599  total_loss: 1.072  loss_cls: 0.1652  loss_box_reg: 0.3518  loss_mask: 0.1808  loss_rpn_cls: 0.07573  loss_rpn_loc: 0.2845  time: 3.5706  data_time: 0.0034  lr: 0.01  max_mem: 0M
[32m[11/15 01:53:33 d2.utils.events]: [0m eta: 0:22:37  iter: 2619  total_loss: 1.048  loss_cls: 0.1798  loss_box_reg: 0.3677  loss_mask: 0.1812  loss_rpn_cls: 0.07461  loss_rpn_loc: 0.2627  time: 3.5714  data_time: 0.0042  lr: 0.01  max_mem: 0M
[32m[11/15 01:54:46 d2.utils.events]: [0m eta: 0:21:26  iter: 2639  total_loss: 1.037  loss_cls: 0.1455  loss_box_reg: 0.3467  loss_mask: 0.1659  loss_rpn_cls: 0.1035  loss_rpn_loc: 0.2741  time: 3.5720  data_time: 0.0067  lr: 0.01  max_mem: 0M
[32m[11/15 01:55:59 d2.utils.events]: [0m eta: 0:20:14  iter: 2659  total_loss: 1.041  loss_cls: 0.1499  loss_box_reg: 0.3526  loss_mask: 0.1737  loss_rpn_cls: 0.09171  loss_rpn_loc: 0.2789  time: 3.5726  data_time: 0.0033  lr: 0.01  max_mem: 0M
[32m[11/15 01:57:13 d2.utils.events]: [0m eta: 0:19:02  iter: 2679  total_loss: 1.052  loss_cls: 0.1395  loss_box_reg: 0.3558  loss_mask: 0.1782  loss_rpn_cls: 0.09633  loss_rpn_loc: 0.2819  time: 3.5734  data_time: 0.0034  lr: 0.01  max_mem: 0M
[32m[11/15 01:58:26 d2.utils.events]: [0m eta: 0:17:51  iter: 2699  total_loss: 1.089  loss_cls: 0.16  loss_box_reg: 0.3795  loss_mask: 0.1776  loss_rpn_cls: 0.09721  loss_rpn_loc: 0.271  time: 3.5740  data_time: 0.0058  lr: 0.01  max_mem: 0M
[32m[11/15 01:59:37 d2.utils.events]: [0m eta: 0:16:39  iter: 2719  total_loss: 0.9949  loss_cls: 0.1527  loss_box_reg: 0.363  loss_mask: 0.1758  loss_rpn_cls: 0.08835  loss_rpn_loc: 0.2486  time: 3.5738  data_time: 0.0037  lr: 0.01  max_mem: 0M
[32m[11/15 02:00:47 d2.utils.events]: [0m eta: 0:15:27  iter: 2739  total_loss: 1.051  loss_cls: 0.1623  loss_box_reg: 0.3465  loss_mask: 0.1653  loss_rpn_cls: 0.1001  loss_rpn_loc: 0.2546  time: 3.5734  data_time: 0.0041  lr: 0.01  max_mem: 0M
[32m[11/15 02:02:01 d2.utils.events]: [0m eta: 0:14:16  iter: 2759  total_loss: 1.001  loss_cls: 0.1465  loss_box_reg: 0.3558  loss_mask: 0.1674  loss_rpn_cls: 0.07405  loss_rpn_loc: 0.2453  time: 3.5741  data_time: 0.0048  lr: 0.01  max_mem: 0M
[32m[11/15 02:03:10 d2.utils.events]: [0m eta: 0:13:04  iter: 2779  total_loss: 1.083  loss_cls: 0.1613  loss_box_reg: 0.3546  loss_mask: 0.186  loss_rpn_cls: 0.1076  loss_rpn_loc: 0.2667  time: 3.5734  data_time: 0.0039  lr: 0.01  max_mem: 0M
[32m[11/15 02:04:21 d2.utils.events]: [0m eta: 0:11:53  iter: 2799  total_loss: 1.051  loss_cls: 0.1437  loss_box_reg: 0.3533  loss_mask: 0.1764  loss_rpn_cls: 0.09524  loss_rpn_loc: 0.2838  time: 3.5731  data_time: 0.0054  lr: 0.01  max_mem: 0M
[32m[11/15 02:05:35 d2.utils.events]: [0m eta: 0:10:42  iter: 2819  total_loss: 1.038  loss_cls: 0.1644  loss_box_reg: 0.3499  loss_mask: 0.1732  loss_rpn_cls: 0.08126  loss_rpn_loc: 0.2678  time: 3.5740  data_time: 0.0049  lr: 0.01  max_mem: 0M
[32m[11/15 02:06:50 d2.utils.events]: [0m eta: 0:09:30  iter: 2839  total_loss: 1.055  loss_cls: 0.1551  loss_box_reg: 0.3713  loss_mask: 0.1834  loss_rpn_cls: 0.0778  loss_rpn_loc: 0.2663  time: 3.5751  data_time: 0.0037  lr: 0.01  max_mem: 0M
[32m[11/15 02:08:03 d2.utils.events]: [0m eta: 0:08:19  iter: 2859  total_loss: 1.042  loss_cls: 0.1455  loss_box_reg: 0.3552  loss_mask: 0.1657  loss_rpn_cls: 0.1017  loss_rpn_loc: 0.2699  time: 3.5756  data_time: 0.0036  lr: 0.01  max_mem: 0M
[32m[11/15 02:09:13 d2.utils.events]: [0m eta: 0:07:08  iter: 2879  total_loss: 1.042  loss_cls: 0.1483  loss_box_reg: 0.3543  loss_mask: 0.1719  loss_rpn_cls: 0.08373  loss_rpn_loc: 0.2609  time: 3.5753  data_time: 0.0037  lr: 0.01  max_mem: 0M
[32m[11/15 02:10:25 d2.utils.events]: [0m eta: 0:05:56  iter: 2899  total_loss: 1.07  loss_cls: 0.1714  loss_box_reg: 0.3501  loss_mask: 0.17  loss_rpn_cls: 0.08287  loss_rpn_loc: 0.2737  time: 3.5754  data_time: 0.0045  lr: 0.01  max_mem: 0M
[32m[11/15 02:11:38 d2.utils.events]: [0m eta: 0:04:45  iter: 2919  total_loss: 1.094  loss_cls: 0.1796  loss_box_reg: 0.3599  loss_mask: 0.1721  loss_rpn_cls: 0.0824  loss_rpn_loc: 0.2808  time: 3.5758  data_time: 0.0047  lr: 0.01  max_mem: 0M
[32m[11/15 02:12:48 d2.utils.events]: [0m eta: 0:03:34  iter: 2939  total_loss: 1.036  loss_cls: 0.1431  loss_box_reg: 0.3365  loss_mask: 0.1741  loss_rpn_cls: 0.0772  loss_rpn_loc: 0.2715  time: 3.5755  data_time: 0.0026  lr: 0.01  max_mem: 0M
[32m[11/15 02:14:01 d2.utils.events]: [0m eta: 0:02:22  iter: 2959  total_loss: 1.036  loss_cls: 0.1539  loss_box_reg: 0.3495  loss_mask: 0.1689  loss_rpn_cls: 0.07099  loss_rpn_loc: 0.2693  time: 3.5759  data_time: 0.0044  lr: 0.01  max_mem: 0M
[32m[11/15 02:15:16 d2.utils.events]: [0m eta: 0:01:11  iter: 2979  total_loss: 1.016  loss_cls: 0.1492  loss_box_reg: 0.3421  loss_mask: 0.172  loss_rpn_cls: 0.07209  loss_rpn_loc: 0.245  time: 3.5769  data_time: 0.0041  lr: 0.01  max_mem: 0M
[32m[11/15 02:16:30 d2.utils.events]: [0m eta: 0:00:00  iter: 2999  total_loss: 0.9919  loss_cls: 0.1415  loss_box_reg: 0.3394  loss_mask: 0.1659  loss_rpn_cls: 0.07675  loss_rpn_loc: 0.248  time: 3.5776  data_time: 0.0031  lr: 0.01  max_mem: 0M
[32m[11/15 02:16:30 d2.engine.hooks]: [0mOverall training speed: 2998 iterations in 2:58:45 (3.5776 s / it)
[32m[11/15 02:16:30 d2.engine.hooks]: [0mTotal training time: 2:58:52 (0:00:07 on hooks)
[32m[11/15 02:16:31 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[32m[11/15 02:16:31 d2.data.common]: [0mSerializing 20 elements to byte tensors and concatenating them all ...
[32m[11/15 02:16:31 d2.data.common]: [0mSerialized dataset takes 0.46 MiB
[5m[31mWARNING[0m [32m[11/15 02:16:31 d2.engine.defaults]: [0mNo evaluator found. Use `DefaultTrainer.test(evaluators=)`, or implement its `build_evaluator` method.
[32m[11/15 02:16:31 d2.data.build]: [0mDistribution of instances among all 1 categories:
[36m|  category  | #instances   |
|:----------:|:-------------|
| satellite  | 445          |
|            |              |[0m
[32m[11/15 02:16:31 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[32m[11/15 02:16:31 d2.data.common]: [0mSerializing 6 elements to byte tensors and concatenating them all ...
[32m[11/15 02:16:31 d2.data.common]: [0mSerialized dataset takes 0.11 MiB
[5m[31mWARNING[0m [32m[11/15 02:16:31 d2.engine.defaults]: [0mNo evaluator found. Use `DefaultTrainer.test(evaluators=)`, or implement its `build_evaluator` method.
USING MODEL WEIGHT: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp20/model_0002999.pth
Dataset: satellite_Val
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S08_03_SE1_1000X03.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S08_03_SE1_1000X03.png
	num_instances: 88
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S06_01_SE1_500X67.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S06_01_SE1_500X67.png
	num_instances: 82
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S04_02_SE1_1000X50.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S04_02_SE1_1000X50.png
	num_instances: 36
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S03_03_SE1_1250X41.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S03_03_SE1_1250X41.png
	num_instances: 99
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S02_01_SE1_300X14.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S02_01_SE1_300X14.png
	num_instances: 85
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/HP743_2S_250x.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/HP743_2S_250x.png
	num_instances: 55
gt filename: S08_03_SE1_1000X03.png	 pred filename: S08_03_SE1_1000X03.png
gt filename: S06_01_SE1_500X67.png	 pred filename: S06_01_SE1_500X67.png
gt filename: S04_02_SE1_1000X50.png	 pred filename: S04_02_SE1_1000X50.png
gt filename: S03_03_SE1_1250X41.png	 pred filename: S03_03_SE1_1250X41.png
gt filename: S02_01_SE1_300X14.png	 pred filename: S02_01_SE1_300X14.png
gt filename: HP743_2S_250x.png	 pred filename: HP743_2S_250x.png
x:  [1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2]
y:  [0.47, 0.28, 0.61, 0.46, 0.45, 0.51, 0.47, 0.43, 0.49, 0.41, 0.39, 0.57]
Average Precision Score:  0.4630507006941727
Average Recall Score:     0.4590536656012847
Precision: 0.5409394329107723
Recall: 0.5134868038600163
---
Precision: 0.20607592521938192
Recall: 0.5056758338209479
---
Precision: 0.8023032629558541
Recall: 0.5861965341079836
---
Precision: 0.5778188099350765
Recall: 0.4773879238226465
---
Precision: 0.6720314033366045
Recall: 0.5514575616041231
---
Precision: 0.3689873417721519
Recall: 0.46803813346713496
---
USING MODEL WEIGHT: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp20/model_final.pth
Dataset: satellite_Val
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S08_03_SE1_1000X03.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S08_03_SE1_1000X03.png
	num_instances: 88
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S06_01_SE1_500X67.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S06_01_SE1_500X67.png
	num_instances: 82
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S04_02_SE1_1000X50.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S04_02_SE1_1000X50.png
	num_instances: 36
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S03_03_SE1_1250X41.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S03_03_SE1_1250X41.png
	num_instances: 99
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S02_01_SE1_300X14.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S02_01_SE1_300X14.png
	num_instances: 85
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/HP743_2S_250x.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/HP743_2S_250x.png
	num_instances: 55
gt filename: S08_03_SE1_1000X03.png	 pred filename: S08_03_SE1_1000X03.png
gt filename: S06_01_SE1_500X67.png	 pred filename: S06_01_SE1_500X67.png
gt filename: S04_02_SE1_1000X50.png	 pred filename: S04_02_SE1_1000X50.png
gt filename: S03_03_SE1_1250X41.png	 pred filename: S03_03_SE1_1250X41.png
gt filename: S02_01_SE1_300X14.png	 pred filename: S02_01_SE1_300X14.png
gt filename: HP743_2S_250x.png	 pred filename: HP743_2S_250x.png
x:  [1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2]
y:  [0.47, 0.28, 0.61, 0.46, 0.45, 0.51, 0.47, 0.43, 0.49, 0.41, 0.39, 0.57]
Average Precision Score:  0.4630507006941727
Average Recall Score:     0.4590536656012847
Precision: 0.5409394329107723
Recall: 0.5134868038600163
---
Precision: 0.20607592521938192
Recall: 0.5056758338209479
---
Precision: 0.8023032629558541
Recall: 0.5861965341079836
---
Precision: 0.5778188099350765
Recall: 0.4773879238226465
---
Precision: 0.6720314033366045
Recall: 0.5514575616041231
---
Precision: 0.3689873417721519
Recall: 0.46803813346713496
---
Ignoring Final Model
Deleting: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp20/model_0002999.pth
Current File Path
../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp20/model_0002999.pth
New File Path
../../../../../../../ocean/projects/dmr200021p/sprice/variance/CPU_NO_CONFIG/trial1/model3.pth
Deleting: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp20/model_final.pth
Current File Path
../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp20/model_final.pth
New File Path
../../../../../../../ocean/projects/dmr200021p/sprice/variance/CPU_NO_CONFIG/trial1/model3.pth
Deleting: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp20/results_checkpoint_0002999.pickle
../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp20/results_checkpoint_0002999.pickle
Deleting: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp20/results_checkpoint_final.pickle
../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp20/results_checkpoint_final.pickle
Removing: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp20/metrics.json
Removing: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp20/last_checkpoint
Registered Datasets: ['satellite_Train', 'satellite_Val']
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/HP743_6S_250x.png
	num_instances: 102
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/HP743_12S_500x.png
	num_instances: 31
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S02_03_SE1_300X22.png
	num_instances: 83
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S08_03_SE1_1000X03.png
	num_instances: 88
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S06_01_SE1_500X67.png
	num_instances: 54
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S04_02_SE1_1000X50.png
	num_instances: 45
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S03_03_SE1_1250X41.png
	num_instances: 111
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S02_01_SE1_300X14.png
	num_instances: 98
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/HP743_2S_250x.png
	num_instances: 49
Weights not found, weights will be downloaded from source: https://dl.fbaipublicfiles.com/detectron2/COCO-InstanceSegmentation/mask_rcnn_R_50_FPN_3x/137849600/model_final_f10217.pkl
[32m[11/15 02:17:07 d2.engine.defaults]: [0mModel:
GeneralizedRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): StandardROIHeads(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): FastRCNNConvFCHead(
      (flatten): Flatten(start_dim=1, end_dim=-1)
      (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      (fc_relu1): ReLU()
      (fc2): Linear(in_features=1024, out_features=1024, bias=True)
      (fc_relu2): ReLU()
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=1024, out_features=2, bias=True)
      (bbox_pred): Linear(in_features=1024, out_features=4, bias=True)
    )
    (mask_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(14, 14), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(14, 14), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (mask_head): MaskRCNNConvUpsampleHead(
      (mask_fcn1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn2): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn3): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn4): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
      (deconv_relu): ReLU()
      (predictor): Conv2d(256, 1, kernel_size=(1, 1), stride=(1, 1))
    )
  )
)
[32m[11/15 02:17:07 d2.data.build]: [0mRemoved 0 images with no usable annotations. 20 images left.
[32m[11/15 02:17:07 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[32m[11/15 02:17:07 d2.data.build]: [0mUsing training sampler TrainingSampler
[32m[11/15 02:17:07 d2.data.common]: [0mSerializing 20 elements to byte tensors and concatenating them all ...
[32m[11/15 02:17:07 d2.data.common]: [0mSerialized dataset takes 0.46 MiB
[5m[31mWARNING[0m [32m[11/15 02:17:07 d2.solver.build]: [0mSOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[32m[11/15 02:17:07 d2.checkpoint.c2_model_loading]: [0mRenaming Caffe2 weights ......
[32m[11/15 02:17:07 d2.checkpoint.c2_model_loading]: [0mFollowing weights matched with submodule backbone.bottom_up:
| Names in Model    | Names in Checkpoint      | Shapes                                          |
|:------------------|:-------------------------|:------------------------------------------------|
| res2.0.conv1.*    | res2_0_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,1,1)             |
| res2.0.conv2.*    | res2_0_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.0.conv3.*    | res2_0_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.0.shortcut.* | res2_0_branch1_{bn_*,w}  | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.1.conv1.*    | res2_1_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,256,1,1)            |
| res2.1.conv2.*    | res2_1_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.1.conv3.*    | res2_1_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.2.conv1.*    | res2_2_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,256,1,1)            |
| res2.2.conv2.*    | res2_2_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.2.conv3.*    | res2_2_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res3.0.conv1.*    | res3_0_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,256,1,1)       |
| res3.0.conv2.*    | res3_0_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.0.conv3.*    | res3_0_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.0.shortcut.* | res3_0_branch1_{bn_*,w}  | (512,) (512,) (512,) (512,) (512,256,1,1)       |
| res3.1.conv1.*    | res3_1_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.1.conv2.*    | res3_1_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.1.conv3.*    | res3_1_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.2.conv1.*    | res3_2_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.2.conv2.*    | res3_2_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.2.conv3.*    | res3_2_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.3.conv1.*    | res3_3_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.3.conv2.*    | res3_3_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.3.conv3.*    | res3_3_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res4.0.conv1.*    | res4_0_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,512,1,1)       |
| res4.0.conv2.*    | res4_0_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.0.conv3.*    | res4_0_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.0.shortcut.* | res4_0_branch1_{bn_*,w}  | (1024,) (1024,) (1024,) (1024,) (1024,512,1,1)  |
| res4.1.conv1.*    | res4_1_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.1.conv2.*    | res4_1_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.1.conv3.*    | res4_1_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.2.conv1.*    | res4_2_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.2.conv2.*    | res4_2_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.2.conv3.*    | res4_2_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.3.conv1.*    | res4_3_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.3.conv2.*    | res4_3_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.3.conv3.*    | res4_3_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.4.conv1.*    | res4_4_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.4.conv2.*    | res4_4_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.4.conv3.*    | res4_4_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.5.conv1.*    | res4_5_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.5.conv2.*    | res4_5_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.5.conv3.*    | res4_5_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res5.0.conv1.*    | res5_0_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,1024,1,1)      |
| res5.0.conv2.*    | res5_0_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.0.conv3.*    | res5_0_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| res5.0.shortcut.* | res5_0_branch1_{bn_*,w}  | (2048,) (2048,) (2048,) (2048,) (2048,1024,1,1) |
| res5.1.conv1.*    | res5_1_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,2048,1,1)      |
| res5.1.conv2.*    | res5_1_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.1.conv3.*    | res5_1_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| res5.2.conv1.*    | res5_2_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,2048,1,1)      |
| res5.2.conv2.*    | res5_2_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.2.conv3.*    | res5_2_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| stem.conv1.norm.* | res_conv1_bn_*           | (64,) (64,) (64,) (64,)                         |
| stem.conv1.weight | conv1_w                  | (64, 3, 7, 7)                                   |
[32m[11/15 02:17:07 d2.engine.train_loop]: [0mStarting training from iteration 0
[32m[11/15 02:18:15 d2.utils.events]: [0m eta: 2:38:59  iter: 19  total_loss: 3.024  loss_cls: 0.509  loss_box_reg: 0.02595  loss_mask: 0.6754  loss_rpn_cls: 0.6945  loss_rpn_loc: 1.048  time: 3.3198  data_time: 0.0198  lr: 0.00019981  max_mem: 0M
[32m[11/15 02:19:17 d2.utils.events]: [0m eta: 2:32:25  iter: 39  total_loss: 2.38  loss_cls: 0.2882  loss_box_reg: 0.04209  loss_mask: 0.602  loss_rpn_cls: 0.6089  loss_rpn_loc: 0.7278  time: 3.1961  data_time: 0.0051  lr: 0.00039961  max_mem: 0M
[32m[11/15 02:20:20 d2.utils.events]: [0m eta: 2:33:44  iter: 59  total_loss: 2.038  loss_cls: 0.2093  loss_box_reg: 0.07042  loss_mask: 0.5897  loss_rpn_cls: 0.5551  loss_rpn_loc: 0.6217  time: 3.1782  data_time: 0.0026  lr: 0.00059941  max_mem: 0M
[32m[11/15 02:21:24 d2.utils.events]: [0m eta: 2:33:16  iter: 79  total_loss: 2.089  loss_cls: 0.1915  loss_box_reg: 0.1336  loss_mask: 0.5596  loss_rpn_cls: 0.5806  loss_rpn_loc: 0.5791  time: 3.1818  data_time: 0.0044  lr: 0.00079921  max_mem: 0M
[32m[11/15 02:22:32 d2.utils.events]: [0m eta: 2:32:59  iter: 99  total_loss: 2.142  loss_cls: 0.2512  loss_box_reg: 0.3118  loss_mask: 0.5595  loss_rpn_cls: 0.4908  loss_rpn_loc: 0.5269  time: 3.2291  data_time: 0.0034  lr: 0.00099901  max_mem: 0M
[32m[11/15 02:23:41 d2.utils.events]: [0m eta: 2:33:46  iter: 119  total_loss: 2.132  loss_cls: 0.325  loss_box_reg: 0.4399  loss_mask: 0.5244  loss_rpn_cls: 0.414  loss_rpn_loc: 0.5134  time: 3.2618  data_time: 0.0036  lr: 0.0011988  max_mem: 0M
[32m[11/15 02:24:50 d2.utils.events]: [0m eta: 2:33:35  iter: 139  total_loss: 2.115  loss_cls: 0.306  loss_box_reg: 0.4795  loss_mask: 0.5149  loss_rpn_cls: 0.333  loss_rpn_loc: 0.4521  time: 3.2907  data_time: 0.0034  lr: 0.0013986  max_mem: 0M
[32m[11/15 02:25:59 d2.utils.events]: [0m eta: 2:34:32  iter: 159  total_loss: 1.952  loss_cls: 0.3047  loss_box_reg: 0.5022  loss_mask: 0.4857  loss_rpn_cls: 0.3473  loss_rpn_loc: 0.4706  time: 3.3108  data_time: 0.0035  lr: 0.0015984  max_mem: 0M
[32m[11/15 02:27:05 d2.utils.events]: [0m eta: 2:33:00  iter: 179  total_loss: 1.942  loss_cls: 0.2536  loss_box_reg: 0.3613  loss_mask: 0.4517  loss_rpn_cls: 0.316  loss_rpn_loc: 0.5345  time: 3.3124  data_time: 0.0032  lr: 0.0017982  max_mem: 0M
[32m[11/15 02:28:13 d2.utils.events]: [0m eta: 2:32:21  iter: 199  total_loss: 2.005  loss_cls: 0.3065  loss_box_reg: 0.4785  loss_mask: 0.4379  loss_rpn_cls: 0.3036  loss_rpn_loc: 0.4688  time: 3.3194  data_time: 0.0050  lr: 0.001998  max_mem: 0M
[32m[11/15 02:29:21 d2.utils.events]: [0m eta: 2:32:01  iter: 219  total_loss: 2.016  loss_cls: 0.3054  loss_box_reg: 0.4989  loss_mask: 0.4075  loss_rpn_cls: 0.3331  loss_rpn_loc: 0.4896  time: 3.3257  data_time: 0.0044  lr: 0.0021978  max_mem: 0M
[32m[11/15 02:30:33 d2.utils.events]: [0m eta: 2:32:45  iter: 239  total_loss: 1.805  loss_cls: 0.2829  loss_box_reg: 0.4944  loss_mask: 0.3831  loss_rpn_cls: 0.2627  loss_rpn_loc: 0.4263  time: 3.3485  data_time: 0.0037  lr: 0.0023976  max_mem: 0M
[32m[11/15 02:31:42 d2.utils.events]: [0m eta: 2:32:01  iter: 259  total_loss: 1.778  loss_cls: 0.2621  loss_box_reg: 0.4616  loss_mask: 0.3867  loss_rpn_cls: 0.2511  loss_rpn_loc: 0.4537  time: 3.3571  data_time: 0.0045  lr: 0.0025974  max_mem: 0M
[32m[11/15 02:32:50 d2.utils.events]: [0m eta: 2:30:55  iter: 279  total_loss: 1.741  loss_cls: 0.2551  loss_box_reg: 0.3694  loss_mask: 0.3657  loss_rpn_cls: 0.2537  loss_rpn_loc: 0.4638  time: 3.3607  data_time: 0.0042  lr: 0.0027972  max_mem: 0M
[32m[11/15 02:33:57 d2.utils.events]: [0m eta: 2:29:47  iter: 299  total_loss: 1.706  loss_cls: 0.2531  loss_box_reg: 0.4474  loss_mask: 0.3288  loss_rpn_cls: 0.2395  loss_rpn_loc: 0.4214  time: 3.3602  data_time: 0.0039  lr: 0.002997  max_mem: 0M
[32m[11/15 02:35:07 d2.utils.events]: [0m eta: 2:28:42  iter: 319  total_loss: 1.625  loss_cls: 0.2034  loss_box_reg: 0.4111  loss_mask: 0.3262  loss_rpn_cls: 0.241  loss_rpn_loc: 0.4252  time: 3.3678  data_time: 0.0053  lr: 0.0031968  max_mem: 0M
[32m[11/15 02:36:17 d2.utils.events]: [0m eta: 2:28:18  iter: 339  total_loss: 1.715  loss_cls: 0.2531  loss_box_reg: 0.4926  loss_mask: 0.3057  loss_rpn_cls: 0.2415  loss_rpn_loc: 0.3948  time: 3.3767  data_time: 0.0062  lr: 0.0033966  max_mem: 0M
[32m[11/15 02:37:24 d2.utils.events]: [0m eta: 2:26:30  iter: 359  total_loss: 1.671  loss_cls: 0.2388  loss_box_reg: 0.4461  loss_mask: 0.3187  loss_rpn_cls: 0.2445  loss_rpn_loc: 0.4118  time: 3.3733  data_time: 0.0062  lr: 0.0035964  max_mem: 0M
[32m[11/15 02:38:32 d2.utils.events]: [0m eta: 2:25:24  iter: 379  total_loss: 1.644  loss_cls: 0.2501  loss_box_reg: 0.3946  loss_mask: 0.3117  loss_rpn_cls: 0.2175  loss_rpn_loc: 0.4403  time: 3.3747  data_time: 0.0045  lr: 0.0037962  max_mem: 0M
[32m[11/15 02:39:41 d2.utils.events]: [0m eta: 2:24:34  iter: 399  total_loss: 1.626  loss_cls: 0.2371  loss_box_reg: 0.4063  loss_mask: 0.3068  loss_rpn_cls: 0.2271  loss_rpn_loc: 0.4206  time: 3.3787  data_time: 0.0031  lr: 0.003996  max_mem: 0M
[32m[11/15 02:40:53 d2.utils.events]: [0m eta: 2:24:13  iter: 419  total_loss: 1.682  loss_cls: 0.2653  loss_box_reg: 0.4843  loss_mask: 0.3015  loss_rpn_cls: 0.1938  loss_rpn_loc: 0.4037  time: 3.3894  data_time: 0.0041  lr: 0.0041958  max_mem: 0M
[32m[11/15 02:42:03 d2.utils.events]: [0m eta: 2:23:36  iter: 439  total_loss: 1.648  loss_cls: 0.2695  loss_box_reg: 0.4955  loss_mask: 0.2844  loss_rpn_cls: 0.2145  loss_rpn_loc: 0.4372  time: 3.3955  data_time: 0.0038  lr: 0.0043956  max_mem: 0M
[32m[11/15 02:43:12 d2.utils.events]: [0m eta: 2:22:20  iter: 459  total_loss: 1.602  loss_cls: 0.2232  loss_box_reg: 0.4238  loss_mask: 0.2957  loss_rpn_cls: 0.25  loss_rpn_loc: 0.4411  time: 3.3964  data_time: 0.0045  lr: 0.0045954  max_mem: 0M
[32m[11/15 02:44:21 d2.utils.events]: [0m eta: 2:21:13  iter: 479  total_loss: 1.698  loss_cls: 0.2737  loss_box_reg: 0.4783  loss_mask: 0.2941  loss_rpn_cls: 0.2423  loss_rpn_loc: 0.3851  time: 3.3989  data_time: 0.0045  lr: 0.0047952  max_mem: 0M
[32m[11/15 02:45:32 d2.utils.events]: [0m eta: 2:20:14  iter: 499  total_loss: 1.667  loss_cls: 0.2692  loss_box_reg: 0.5066  loss_mask: 0.2856  loss_rpn_cls: 0.2117  loss_rpn_loc: 0.3986  time: 3.4053  data_time: 0.0057  lr: 0.004995  max_mem: 0M
[32m[11/15 02:46:42 d2.utils.events]: [0m eta: 2:19:07  iter: 519  total_loss: 1.616  loss_cls: 0.2468  loss_box_reg: 0.4946  loss_mask: 0.293  loss_rpn_cls: 0.1808  loss_rpn_loc: 0.4098  time: 3.4082  data_time: 0.0039  lr: 0.0051948  max_mem: 0M
[32m[11/15 02:47:50 d2.utils.events]: [0m eta: 2:18:03  iter: 539  total_loss: 1.631  loss_cls: 0.2359  loss_box_reg: 0.4078  loss_mask: 0.275  loss_rpn_cls: 0.2132  loss_rpn_loc: 0.4296  time: 3.4079  data_time: 0.0049  lr: 0.0053946  max_mem: 0M
[32m[11/15 02:48:59 d2.utils.events]: [0m eta: 2:17:33  iter: 559  total_loss: 1.652  loss_cls: 0.2454  loss_box_reg: 0.4874  loss_mask: 0.2782  loss_rpn_cls: 0.2481  loss_rpn_loc: 0.4092  time: 3.4103  data_time: 0.0040  lr: 0.0055944  max_mem: 0M
[32m[11/15 02:50:09 d2.utils.events]: [0m eta: 2:16:33  iter: 579  total_loss: 1.676  loss_cls: 0.2446  loss_box_reg: 0.4957  loss_mask: 0.283  loss_rpn_cls: 0.1863  loss_rpn_loc: 0.4469  time: 3.4127  data_time: 0.0033  lr: 0.0057942  max_mem: 0M
[32m[11/15 02:51:19 d2.utils.events]: [0m eta: 2:15:31  iter: 599  total_loss: 1.552  loss_cls: 0.2237  loss_box_reg: 0.4579  loss_mask: 0.2747  loss_rpn_cls: 0.1869  loss_rpn_loc: 0.3955  time: 3.4150  data_time: 0.0053  lr: 0.005994  max_mem: 0M
[32m[11/15 02:52:30 d2.utils.events]: [0m eta: 2:14:46  iter: 619  total_loss: 1.592  loss_cls: 0.2593  loss_box_reg: 0.4732  loss_mask: 0.2622  loss_rpn_cls: 0.1961  loss_rpn_loc: 0.3884  time: 3.4203  data_time: 0.0033  lr: 0.0061938  max_mem: 0M
[32m[11/15 02:53:41 d2.utils.events]: [0m eta: 2:13:51  iter: 639  total_loss: 1.543  loss_cls: 0.2442  loss_box_reg: 0.4773  loss_mask: 0.2524  loss_rpn_cls: 0.1768  loss_rpn_loc: 0.3624  time: 3.4236  data_time: 0.0048  lr: 0.0063936  max_mem: 0M
[32m[11/15 02:54:51 d2.utils.events]: [0m eta: 2:13:07  iter: 659  total_loss: 1.511  loss_cls: 0.2493  loss_box_reg: 0.455  loss_mask: 0.2559  loss_rpn_cls: 0.1793  loss_rpn_loc: 0.3705  time: 3.4264  data_time: 0.0043  lr: 0.0065934  max_mem: 0M
[32m[11/15 02:56:01 d2.utils.events]: [0m eta: 2:11:58  iter: 679  total_loss: 1.586  loss_cls: 0.265  loss_box_reg: 0.4991  loss_mask: 0.2566  loss_rpn_cls: 0.1467  loss_rpn_loc: 0.4031  time: 3.4281  data_time: 0.0038  lr: 0.0067932  max_mem: 0M
[32m[11/15 02:57:11 d2.utils.events]: [0m eta: 2:10:50  iter: 699  total_loss: 1.598  loss_cls: 0.2063  loss_box_reg: 0.4553  loss_mask: 0.2599  loss_rpn_cls: 0.1693  loss_rpn_loc: 0.4434  time: 3.4298  data_time: 0.0029  lr: 0.006993  max_mem: 0M
[32m[11/15 02:58:20 d2.utils.events]: [0m eta: 2:09:42  iter: 719  total_loss: 1.419  loss_cls: 0.1751  loss_box_reg: 0.3545  loss_mask: 0.2684  loss_rpn_cls: 0.1751  loss_rpn_loc: 0.4679  time: 3.4301  data_time: 0.0041  lr: 0.0071928  max_mem: 0M
[32m[11/15 02:59:28 d2.utils.events]: [0m eta: 2:08:36  iter: 739  total_loss: 1.573  loss_cls: 0.2506  loss_box_reg: 0.4456  loss_mask: 0.2521  loss_rpn_cls: 0.2135  loss_rpn_loc: 0.3972  time: 3.4304  data_time: 0.0036  lr: 0.0073926  max_mem: 0M
[32m[11/15 03:00:38 d2.utils.events]: [0m eta: 2:07:31  iter: 759  total_loss: 1.471  loss_cls: 0.235  loss_box_reg: 0.4547  loss_mask: 0.2415  loss_rpn_cls: 0.178  loss_rpn_loc: 0.3754  time: 3.4320  data_time: 0.0047  lr: 0.0075924  max_mem: 0M
[32m[11/15 03:01:45 d2.utils.events]: [0m eta: 2:06:19  iter: 779  total_loss: 1.488  loss_cls: 0.2074  loss_box_reg: 0.4177  loss_mask: 0.2524  loss_rpn_cls: 0.166  loss_rpn_loc: 0.4239  time: 3.4301  data_time: 0.0040  lr: 0.0077922  max_mem: 0M
[32m[11/15 03:02:53 d2.utils.events]: [0m eta: 2:05:11  iter: 799  total_loss: 1.541  loss_cls: 0.2334  loss_box_reg: 0.4381  loss_mask: 0.2467  loss_rpn_cls: 0.1646  loss_rpn_loc: 0.3964  time: 3.4286  data_time: 0.0054  lr: 0.007992  max_mem: 0M
[32m[11/15 03:04:01 d2.utils.events]: [0m eta: 2:03:55  iter: 819  total_loss: 1.495  loss_cls: 0.2311  loss_box_reg: 0.4739  loss_mask: 0.253  loss_rpn_cls: 0.1588  loss_rpn_loc: 0.4244  time: 3.4280  data_time: 0.0027  lr: 0.0081918  max_mem: 0M
[32m[11/15 03:05:10 d2.utils.events]: [0m eta: 2:02:54  iter: 839  total_loss: 1.504  loss_cls: 0.2204  loss_box_reg: 0.4484  loss_mask: 0.2633  loss_rpn_cls: 0.1903  loss_rpn_loc: 0.3765  time: 3.4284  data_time: 0.0050  lr: 0.0083916  max_mem: 0M
[32m[11/15 03:06:20 d2.utils.events]: [0m eta: 2:01:49  iter: 859  total_loss: 1.574  loss_cls: 0.2203  loss_box_reg: 0.4774  loss_mask: 0.2891  loss_rpn_cls: 0.2162  loss_rpn_loc: 0.3934  time: 3.4300  data_time: 0.0032  lr: 0.0085914  max_mem: 0M
[32m[11/15 03:07:31 d2.utils.events]: [0m eta: 2:00:47  iter: 879  total_loss: 1.515  loss_cls: 0.2424  loss_box_reg: 0.4442  loss_mask: 0.2568  loss_rpn_cls: 0.1613  loss_rpn_loc: 0.3597  time: 3.4328  data_time: 0.0032  lr: 0.0087912  max_mem: 0M
[32m[11/15 03:08:42 d2.utils.events]: [0m eta: 1:59:52  iter: 899  total_loss: 1.483  loss_cls: 0.2296  loss_box_reg: 0.4533  loss_mask: 0.2439  loss_rpn_cls: 0.1508  loss_rpn_loc: 0.3966  time: 3.4354  data_time: 0.0037  lr: 0.008991  max_mem: 0M
[32m[11/15 03:09:54 d2.utils.events]: [0m eta: 1:58:48  iter: 919  total_loss: 1.394  loss_cls: 0.2297  loss_box_reg: 0.4333  loss_mask: 0.2379  loss_rpn_cls: 0.1538  loss_rpn_loc: 0.3639  time: 3.4390  data_time: 0.0032  lr: 0.0091908  max_mem: 0M
[32m[11/15 03:11:00 d2.utils.events]: [0m eta: 1:57:35  iter: 939  total_loss: 1.445  loss_cls: 0.1993  loss_box_reg: 0.3666  loss_mask: 0.2348  loss_rpn_cls: 0.1576  loss_rpn_loc: 0.4362  time: 3.4355  data_time: 0.0031  lr: 0.0093906  max_mem: 0M
[32m[11/15 03:12:10 d2.utils.events]: [0m eta: 1:56:27  iter: 959  total_loss: 1.441  loss_cls: 0.2063  loss_box_reg: 0.4371  loss_mask: 0.2289  loss_rpn_cls: 0.1668  loss_rpn_loc: 0.3861  time: 3.4369  data_time: 0.0041  lr: 0.0095904  max_mem: 0M
[32m[11/15 03:13:19 d2.utils.events]: [0m eta: 1:55:19  iter: 979  total_loss: 1.478  loss_cls: 0.2326  loss_box_reg: 0.4866  loss_mask: 0.2369  loss_rpn_cls: 0.1704  loss_rpn_loc: 0.3587  time: 3.4379  data_time: 0.0057  lr: 0.0097902  max_mem: 0M
[32m[11/15 03:14:33 d2.utils.events]: [0m eta: 1:54:23  iter: 999  total_loss: 1.454  loss_cls: 0.2251  loss_box_reg: 0.4378  loss_mask: 0.2347  loss_rpn_cls: 0.1602  loss_rpn_loc: 0.4055  time: 3.4426  data_time: 0.0054  lr: 0.00999  max_mem: 0M
[32m[11/15 03:15:43 d2.utils.events]: [0m eta: 1:53:18  iter: 1019  total_loss: 1.439  loss_cls: 0.2016  loss_box_reg: 0.3982  loss_mask: 0.2363  loss_rpn_cls: 0.1784  loss_rpn_loc: 0.3986  time: 3.4443  data_time: 0.0060  lr: 0.01  max_mem: 0M
[32m[11/15 03:16:53 d2.utils.events]: [0m eta: 1:52:33  iter: 1039  total_loss: 1.481  loss_cls: 0.2436  loss_box_reg: 0.4355  loss_mask: 0.2403  loss_rpn_cls: 0.1332  loss_rpn_loc: 0.3699  time: 3.4449  data_time: 0.0033  lr: 0.01  max_mem: 0M
[32m[11/15 03:18:02 d2.utils.events]: [0m eta: 1:51:33  iter: 1059  total_loss: 1.492  loss_cls: 0.2137  loss_box_reg: 0.4383  loss_mask: 0.2343  loss_rpn_cls: 0.1997  loss_rpn_loc: 0.3896  time: 3.4446  data_time: 0.0061  lr: 0.01  max_mem: 0M
[32m[11/15 03:19:14 d2.utils.events]: [0m eta: 1:50:38  iter: 1079  total_loss: 1.428  loss_cls: 0.2209  loss_box_reg: 0.4148  loss_mask: 0.2235  loss_rpn_cls: 0.1457  loss_rpn_loc: 0.3845  time: 3.4481  data_time: 0.0083  lr: 0.01  max_mem: 0M
[32m[11/15 03:20:28 d2.utils.events]: [0m eta: 1:49:40  iter: 1099  total_loss: 1.445  loss_cls: 0.2402  loss_box_reg: 0.459  loss_mask: 0.2335  loss_rpn_cls: 0.1472  loss_rpn_loc: 0.367  time: 3.4522  data_time: 0.0047  lr: 0.01  max_mem: 0M
[32m[11/15 03:21:39 d2.utils.events]: [0m eta: 1:48:35  iter: 1119  total_loss: 1.448  loss_cls: 0.2339  loss_box_reg: 0.4462  loss_mask: 0.2147  loss_rpn_cls: 0.1701  loss_rpn_loc: 0.3723  time: 3.4543  data_time: 0.0038  lr: 0.01  max_mem: 0M
[32m[11/15 03:22:54 d2.utils.events]: [0m eta: 1:47:40  iter: 1139  total_loss: 1.456  loss_cls: 0.2338  loss_box_reg: 0.4706  loss_mask: 0.2307  loss_rpn_cls: 0.1421  loss_rpn_loc: 0.3735  time: 3.4590  data_time: 0.0052  lr: 0.01  max_mem: 0M
[32m[11/15 03:24:08 d2.utils.events]: [0m eta: 1:46:31  iter: 1159  total_loss: 1.448  loss_cls: 0.2016  loss_box_reg: 0.4626  loss_mask: 0.2368  loss_rpn_cls: 0.1438  loss_rpn_loc: 0.3922  time: 3.4635  data_time: 0.0032  lr: 0.01  max_mem: 0M
[32m[11/15 03:25:21 d2.utils.events]: [0m eta: 1:45:30  iter: 1179  total_loss: 1.341  loss_cls: 0.1639  loss_box_reg: 0.3322  loss_mask: 0.2261  loss_rpn_cls: 0.1914  loss_rpn_loc: 0.4395  time: 3.4667  data_time: 0.0038  lr: 0.01  max_mem: 0M
[32m[11/15 03:26:34 d2.utils.events]: [0m eta: 1:44:35  iter: 1199  total_loss: 1.376  loss_cls: 0.2051  loss_box_reg: 0.4379  loss_mask: 0.2307  loss_rpn_cls: 0.1296  loss_rpn_loc: 0.3729  time: 3.4699  data_time: 0.0028  lr: 0.01  max_mem: 0M
[32m[11/15 03:27:45 d2.utils.events]: [0m eta: 1:43:26  iter: 1219  total_loss: 1.441  loss_cls: 0.224  loss_box_reg: 0.4507  loss_mask: 0.2247  loss_rpn_cls: 0.1086  loss_rpn_loc: 0.3624  time: 3.4706  data_time: 0.0053  lr: 0.01  max_mem: 0M
[32m[11/15 03:28:57 d2.utils.events]: [0m eta: 1:42:16  iter: 1239  total_loss: 1.424  loss_cls: 0.2393  loss_box_reg: 0.4323  loss_mask: 0.217  loss_rpn_cls: 0.1281  loss_rpn_loc: 0.3736  time: 3.4726  data_time: 0.0041  lr: 0.01  max_mem: 0M
[32m[11/15 03:30:07 d2.utils.events]: [0m eta: 1:41:06  iter: 1259  total_loss: 1.428  loss_cls: 0.2191  loss_box_reg: 0.4625  loss_mask: 0.2175  loss_rpn_cls: 0.1428  loss_rpn_loc: 0.3689  time: 3.4735  data_time: 0.0032  lr: 0.01  max_mem: 0M
[32m[11/15 03:31:19 d2.utils.events]: [0m eta: 1:40:01  iter: 1279  total_loss: 1.394  loss_cls: 0.2124  loss_box_reg: 0.4467  loss_mask: 0.2293  loss_rpn_cls: 0.1241  loss_rpn_loc: 0.3319  time: 3.4754  data_time: 0.0045  lr: 0.01  max_mem: 0M
[32m[11/15 03:32:30 d2.utils.events]: [0m eta: 1:39:04  iter: 1299  total_loss: 1.394  loss_cls: 0.2101  loss_box_reg: 0.4499  loss_mask: 0.2185  loss_rpn_cls: 0.1631  loss_rpn_loc: 0.3329  time: 3.4763  data_time: 0.0040  lr: 0.01  max_mem: 0M
[32m[11/15 03:33:41 d2.utils.events]: [0m eta: 1:37:56  iter: 1319  total_loss: 1.354  loss_cls: 0.2046  loss_box_reg: 0.4352  loss_mask: 0.2168  loss_rpn_cls: 0.1368  loss_rpn_loc: 0.3695  time: 3.4777  data_time: 0.0055  lr: 0.01  max_mem: 0M
[32m[11/15 03:34:52 d2.utils.events]: [0m eta: 1:36:48  iter: 1339  total_loss: 1.353  loss_cls: 0.2105  loss_box_reg: 0.4276  loss_mask: 0.2261  loss_rpn_cls: 0.1411  loss_rpn_loc: 0.3494  time: 3.4787  data_time: 0.0059  lr: 0.01  max_mem: 0M
[32m[11/15 03:36:03 d2.utils.events]: [0m eta: 1:35:49  iter: 1359  total_loss: 1.4  loss_cls: 0.2085  loss_box_reg: 0.4306  loss_mask: 0.2183  loss_rpn_cls: 0.1797  loss_rpn_loc: 0.3772  time: 3.4793  data_time: 0.0048  lr: 0.01  max_mem: 0M
[32m[11/15 03:37:14 d2.utils.events]: [0m eta: 1:34:48  iter: 1379  total_loss: 1.415  loss_cls: 0.1906  loss_box_reg: 0.4109  loss_mask: 0.2174  loss_rpn_cls: 0.164  loss_rpn_loc: 0.387  time: 3.4807  data_time: 0.0036  lr: 0.01  max_mem: 0M
[32m[11/15 03:38:27 d2.utils.events]: [0m eta: 1:33:45  iter: 1399  total_loss: 1.488  loss_cls: 0.2363  loss_box_reg: 0.4742  loss_mask: 0.2122  loss_rpn_cls: 0.1368  loss_rpn_loc: 0.3665  time: 3.4833  data_time: 0.0039  lr: 0.01  max_mem: 0M
[32m[11/15 03:39:39 d2.utils.events]: [0m eta: 1:32:34  iter: 1419  total_loss: 1.404  loss_cls: 0.2199  loss_box_reg: 0.4356  loss_mask: 0.2107  loss_rpn_cls: 0.122  loss_rpn_loc: 0.362  time: 3.4843  data_time: 0.0039  lr: 0.01  max_mem: 0M
[32m[11/15 03:40:48 d2.utils.events]: [0m eta: 1:31:22  iter: 1439  total_loss: 1.422  loss_cls: 0.2165  loss_box_reg: 0.4493  loss_mask: 0.2088  loss_rpn_cls: 0.1287  loss_rpn_loc: 0.3901  time: 3.4844  data_time: 0.0048  lr: 0.01  max_mem: 0M
[32m[11/15 03:42:02 d2.utils.events]: [0m eta: 1:30:22  iter: 1459  total_loss: 1.396  loss_cls: 0.2204  loss_box_reg: 0.4548  loss_mask: 0.2127  loss_rpn_cls: 0.1498  loss_rpn_loc: 0.3707  time: 3.4870  data_time: 0.0038  lr: 0.01  max_mem: 0M
[32m[11/15 03:43:14 d2.utils.events]: [0m eta: 1:29:14  iter: 1479  total_loss: 1.34  loss_cls: 0.2219  loss_box_reg: 0.4468  loss_mask: 0.202  loss_rpn_cls: 0.1339  loss_rpn_loc: 0.319  time: 3.4883  data_time: 0.0059  lr: 0.01  max_mem: 0M
[32m[11/15 03:44:26 d2.utils.events]: [0m eta: 1:28:05  iter: 1499  total_loss: 1.333  loss_cls: 0.2136  loss_box_reg: 0.4403  loss_mask: 0.2059  loss_rpn_cls: 0.1174  loss_rpn_loc: 0.3223  time: 3.4899  data_time: 0.0039  lr: 0.01  max_mem: 0M
[32m[11/15 03:45:37 d2.utils.events]: [0m eta: 1:26:55  iter: 1519  total_loss: 1.269  loss_cls: 0.1788  loss_box_reg: 0.4301  loss_mask: 0.204  loss_rpn_cls: 0.1463  loss_rpn_loc: 0.3463  time: 3.4908  data_time: 0.0046  lr: 0.01  max_mem: 0M
[32m[11/15 03:46:46 d2.utils.events]: [0m eta: 1:25:45  iter: 1539  total_loss: 1.332  loss_cls: 0.2049  loss_box_reg: 0.4476  loss_mask: 0.2165  loss_rpn_cls: 0.1451  loss_rpn_loc: 0.3421  time: 3.4900  data_time: 0.0044  lr: 0.01  max_mem: 0M
[32m[11/15 03:47:58 d2.utils.events]: [0m eta: 1:24:34  iter: 1559  total_loss: 1.289  loss_cls: 0.2083  loss_box_reg: 0.4311  loss_mask: 0.2097  loss_rpn_cls: 0.1032  loss_rpn_loc: 0.3265  time: 3.4912  data_time: 0.0040  lr: 0.01  max_mem: 0M
[32m[11/15 03:49:09 d2.utils.events]: [0m eta: 1:23:26  iter: 1579  total_loss: 1.32  loss_cls: 0.217  loss_box_reg: 0.4233  loss_mask: 0.204  loss_rpn_cls: 0.1178  loss_rpn_loc: 0.3135  time: 3.4924  data_time: 0.0038  lr: 0.01  max_mem: 0M
[32m[11/15 03:50:20 d2.utils.events]: [0m eta: 1:22:16  iter: 1599  total_loss: 1.263  loss_cls: 0.1948  loss_box_reg: 0.3979  loss_mask: 0.2017  loss_rpn_cls: 0.1365  loss_rpn_loc: 0.3265  time: 3.4931  data_time: 0.0060  lr: 0.01  max_mem: 0M
[32m[11/15 03:51:31 d2.utils.events]: [0m eta: 1:21:02  iter: 1619  total_loss: 1.3  loss_cls: 0.2028  loss_box_reg: 0.4211  loss_mask: 0.2046  loss_rpn_cls: 0.1162  loss_rpn_loc: 0.3257  time: 3.4936  data_time: 0.0048  lr: 0.01  max_mem: 0M
[32m[11/15 03:52:42 d2.utils.events]: [0m eta: 1:19:52  iter: 1639  total_loss: 1.336  loss_cls: 0.2068  loss_box_reg: 0.4481  loss_mask: 0.2122  loss_rpn_cls: 0.1226  loss_rpn_loc: 0.3224  time: 3.4942  data_time: 0.0048  lr: 0.01  max_mem: 0M
[32m[11/15 03:53:56 d2.utils.events]: [0m eta: 1:18:44  iter: 1659  total_loss: 1.252  loss_cls: 0.204  loss_box_reg: 0.4174  loss_mask: 0.2091  loss_rpn_cls: 0.129  loss_rpn_loc: 0.3111  time: 3.4968  data_time: 0.0028  lr: 0.01  max_mem: 0M
[32m[11/15 03:55:07 d2.utils.events]: [0m eta: 1:17:36  iter: 1679  total_loss: 1.253  loss_cls: 0.1925  loss_box_reg: 0.4469  loss_mask: 0.206  loss_rpn_cls: 0.1249  loss_rpn_loc: 0.3193  time: 3.4975  data_time: 0.0035  lr: 0.01  max_mem: 0M
[32m[11/15 03:56:17 d2.utils.events]: [0m eta: 1:16:26  iter: 1699  total_loss: 1.265  loss_cls: 0.2058  loss_box_reg: 0.4239  loss_mask: 0.2023  loss_rpn_cls: 0.1371  loss_rpn_loc: 0.3298  time: 3.4973  data_time: 0.0051  lr: 0.01  max_mem: 0M
[32m[11/15 03:57:29 d2.utils.events]: [0m eta: 1:15:17  iter: 1719  total_loss: 1.24  loss_cls: 0.1941  loss_box_reg: 0.4062  loss_mask: 0.1921  loss_rpn_cls: 0.1161  loss_rpn_loc: 0.3355  time: 3.4986  data_time: 0.0045  lr: 0.01  max_mem: 0M
[32m[11/15 03:58:42 d2.utils.events]: [0m eta: 1:14:08  iter: 1739  total_loss: 1.237  loss_cls: 0.1988  loss_box_reg: 0.3992  loss_mask: 0.2018  loss_rpn_cls: 0.08907  loss_rpn_loc: 0.3191  time: 3.5002  data_time: 0.0041  lr: 0.01  max_mem: 0M
[32m[11/15 03:59:56 d2.utils.events]: [0m eta: 1:13:00  iter: 1759  total_loss: 1.237  loss_cls: 0.2198  loss_box_reg: 0.3958  loss_mask: 0.1985  loss_rpn_cls: 0.1136  loss_rpn_loc: 0.3434  time: 3.5023  data_time: 0.0056  lr: 0.01  max_mem: 0M
[32m[11/15 04:01:09 d2.utils.events]: [0m eta: 1:11:57  iter: 1779  total_loss: 1.27  loss_cls: 0.2058  loss_box_reg: 0.4307  loss_mask: 0.197  loss_rpn_cls: 0.1361  loss_rpn_loc: 0.3107  time: 3.5042  data_time: 0.0055  lr: 0.01  max_mem: 0M
[32m[11/15 04:02:22 d2.utils.events]: [0m eta: 1:10:55  iter: 1799  total_loss: 1.229  loss_cls: 0.2039  loss_box_reg: 0.4042  loss_mask: 0.1888  loss_rpn_cls: 0.1113  loss_rpn_loc: 0.3344  time: 3.5060  data_time: 0.0034  lr: 0.01  max_mem: 0M
[32m[11/15 04:03:33 d2.utils.events]: [0m eta: 1:09:49  iter: 1819  total_loss: 1.189  loss_cls: 0.188  loss_box_reg: 0.393  loss_mask: 0.1978  loss_rpn_cls: 0.1089  loss_rpn_loc: 0.3109  time: 3.5065  data_time: 0.0046  lr: 0.01  max_mem: 0M
[32m[11/15 04:04:40 d2.utils.events]: [0m eta: 1:08:32  iter: 1839  total_loss: 1.201  loss_cls: 0.1756  loss_box_reg: 0.3873  loss_mask: 0.194  loss_rpn_cls: 0.1065  loss_rpn_loc: 0.3419  time: 3.5047  data_time: 0.0038  lr: 0.01  max_mem: 0M
[32m[11/15 04:05:49 d2.utils.events]: [0m eta: 1:07:20  iter: 1859  total_loss: 1.247  loss_cls: 0.1794  loss_box_reg: 0.3934  loss_mask: 0.2055  loss_rpn_cls: 0.1283  loss_rpn_loc: 0.3282  time: 3.5040  data_time: 0.0036  lr: 0.01  max_mem: 0M
[32m[11/15 04:06:59 d2.utils.events]: [0m eta: 1:06:09  iter: 1879  total_loss: 1.318  loss_cls: 0.1871  loss_box_reg: 0.4095  loss_mask: 0.225  loss_rpn_cls: 0.1454  loss_rpn_loc: 0.3439  time: 3.5040  data_time: 0.0033  lr: 0.01  max_mem: 0M
[32m[11/15 04:08:13 d2.utils.events]: [0m eta: 1:05:01  iter: 1899  total_loss: 1.336  loss_cls: 0.2  loss_box_reg: 0.3972  loss_mask: 0.2016  loss_rpn_cls: 0.2025  loss_rpn_loc: 0.3369  time: 3.5057  data_time: 0.0057  lr: 0.01  max_mem: 0M
[32m[11/15 04:09:23 d2.utils.events]: [0m eta: 1:03:49  iter: 1919  total_loss: 1.283  loss_cls: 0.1906  loss_box_reg: 0.3862  loss_mask: 0.218  loss_rpn_cls: 0.1304  loss_rpn_loc: 0.3438  time: 3.5060  data_time: 0.0045  lr: 0.01  max_mem: 0M
[32m[11/15 04:10:34 d2.utils.events]: [0m eta: 1:02:45  iter: 1939  total_loss: 1.312  loss_cls: 0.1837  loss_box_reg: 0.4087  loss_mask: 0.2073  loss_rpn_cls: 0.1382  loss_rpn_loc: 0.3046  time: 3.5060  data_time: 0.0036  lr: 0.01  max_mem: 0M
[32m[11/15 04:11:47 d2.utils.events]: [0m eta: 1:01:36  iter: 1959  total_loss: 1.252  loss_cls: 0.1828  loss_box_reg: 0.411  loss_mask: 0.1951  loss_rpn_cls: 0.1242  loss_rpn_loc: 0.2999  time: 3.5079  data_time: 0.0039  lr: 0.01  max_mem: 0M
[32m[11/15 04:12:58 d2.utils.events]: [0m eta: 1:00:30  iter: 1979  total_loss: 1.257  loss_cls: 0.2005  loss_box_reg: 0.4306  loss_mask: 0.1986  loss_rpn_cls: 0.1151  loss_rpn_loc: 0.3153  time: 3.5079  data_time: 0.0038  lr: 0.01  max_mem: 0M
[32m[11/15 04:14:10 d2.utils.events]: [0m eta: 0:59:14  iter: 1999  total_loss: 1.208  loss_cls: 0.2011  loss_box_reg: 0.3978  loss_mask: 0.1902  loss_rpn_cls: 0.1004  loss_rpn_loc: 0.2807  time: 3.5088  data_time: 0.0064  lr: 0.01  max_mem: 0M
[32m[11/15 04:15:24 d2.utils.events]: [0m eta: 0:58:16  iter: 2019  total_loss: 1.229  loss_cls: 0.1813  loss_box_reg: 0.3945  loss_mask: 0.1976  loss_rpn_cls: 0.114  loss_rpn_loc: 0.3289  time: 3.5109  data_time: 0.0050  lr: 0.01  max_mem: 0M
[32m[11/15 04:16:36 d2.utils.events]: [0m eta: 0:57:11  iter: 2039  total_loss: 1.154  loss_cls: 0.1789  loss_box_reg: 0.4053  loss_mask: 0.1841  loss_rpn_cls: 0.1022  loss_rpn_loc: 0.2833  time: 3.5119  data_time: 0.0023  lr: 0.01  max_mem: 0M
[32m[11/15 04:17:47 d2.utils.events]: [0m eta: 0:56:01  iter: 2059  total_loss: 1.215  loss_cls: 0.1761  loss_box_reg: 0.4381  loss_mask: 0.1926  loss_rpn_cls: 0.1078  loss_rpn_loc: 0.283  time: 3.5120  data_time: 0.0047  lr: 0.01  max_mem: 0M
[32m[11/15 04:18:57 d2.utils.events]: [0m eta: 0:54:40  iter: 2079  total_loss: 1.146  loss_cls: 0.1797  loss_box_reg: 0.4118  loss_mask: 0.1997  loss_rpn_cls: 0.1095  loss_rpn_loc: 0.2762  time: 3.5121  data_time: 0.0043  lr: 0.01  max_mem: 0M
[32m[11/15 04:20:08 d2.utils.events]: [0m eta: 0:53:18  iter: 2099  total_loss: 1.149  loss_cls: 0.1734  loss_box_reg: 0.3966  loss_mask: 0.1873  loss_rpn_cls: 0.09508  loss_rpn_loc: 0.2966  time: 3.5125  data_time: 0.0051  lr: 0.01  max_mem: 0M
[32m[11/15 04:21:18 d2.utils.events]: [0m eta: 0:52:06  iter: 2119  total_loss: 1.16  loss_cls: 0.1548  loss_box_reg: 0.3726  loss_mask: 0.1843  loss_rpn_cls: 0.1155  loss_rpn_loc: 0.3229  time: 3.5119  data_time: 0.0036  lr: 0.01  max_mem: 0M
[32m[11/15 04:22:29 d2.utils.events]: [0m eta: 0:50:51  iter: 2139  total_loss: 1.149  loss_cls: 0.17  loss_box_reg: 0.3831  loss_mask: 0.1942  loss_rpn_cls: 0.09854  loss_rpn_loc: 0.3015  time: 3.5126  data_time: 0.0052  lr: 0.01  max_mem: 0M
[32m[11/15 04:23:40 d2.utils.events]: [0m eta: 0:49:40  iter: 2159  total_loss: 1.142  loss_cls: 0.1582  loss_box_reg: 0.3846  loss_mask: 0.1879  loss_rpn_cls: 0.09443  loss_rpn_loc: 0.3007  time: 3.5128  data_time: 0.0037  lr: 0.01  max_mem: 0M
[32m[11/15 04:24:52 d2.utils.events]: [0m eta: 0:48:28  iter: 2179  total_loss: 1.111  loss_cls: 0.1504  loss_box_reg: 0.372  loss_mask: 0.1801  loss_rpn_cls: 0.1315  loss_rpn_loc: 0.3028  time: 3.5134  data_time: 0.0063  lr: 0.01  max_mem: 0M
[32m[11/15 04:26:01 d2.utils.events]: [0m eta: 0:47:16  iter: 2199  total_loss: 1.212  loss_cls: 0.1891  loss_box_reg: 0.4042  loss_mask: 0.1901  loss_rpn_cls: 0.09255  loss_rpn_loc: 0.2931  time: 3.5130  data_time: 0.0042  lr: 0.01  max_mem: 0M
[32m[11/15 04:27:13 d2.utils.events]: [0m eta: 0:46:05  iter: 2219  total_loss: 1.115  loss_cls: 0.1698  loss_box_reg: 0.4026  loss_mask: 0.1865  loss_rpn_cls: 0.1054  loss_rpn_loc: 0.2667  time: 3.5136  data_time: 0.0059  lr: 0.01  max_mem: 0M
[32m[11/15 04:28:27 d2.utils.events]: [0m eta: 0:44:54  iter: 2239  total_loss: 1.087  loss_cls: 0.157  loss_box_reg: 0.3799  loss_mask: 0.1823  loss_rpn_cls: 0.08908  loss_rpn_loc: 0.2794  time: 3.5153  data_time: 0.0056  lr: 0.01  max_mem: 0M
[32m[11/15 04:29:41 d2.utils.events]: [0m eta: 0:43:47  iter: 2259  total_loss: 1.125  loss_cls: 0.1839  loss_box_reg: 0.4013  loss_mask: 0.1832  loss_rpn_cls: 0.09491  loss_rpn_loc: 0.2711  time: 3.5171  data_time: 0.0030  lr: 0.01  max_mem: 0M
[32m[11/15 04:30:54 d2.utils.events]: [0m eta: 0:42:37  iter: 2279  total_loss: 1.161  loss_cls: 0.1735  loss_box_reg: 0.3653  loss_mask: 0.188  loss_rpn_cls: 0.1552  loss_rpn_loc: 0.2918  time: 3.5183  data_time: 0.0066  lr: 0.01  max_mem: 0M
[32m[11/15 04:32:08 d2.utils.events]: [0m eta: 0:41:27  iter: 2299  total_loss: 1.209  loss_cls: 0.1877  loss_box_reg: 0.3896  loss_mask: 0.183  loss_rpn_cls: 0.1085  loss_rpn_loc: 0.3094  time: 3.5196  data_time: 0.0055  lr: 0.01  max_mem: 0M
[32m[11/15 04:33:19 d2.utils.events]: [0m eta: 0:40:17  iter: 2319  total_loss: 1.17  loss_cls: 0.1693  loss_box_reg: 0.3857  loss_mask: 0.1876  loss_rpn_cls: 0.1078  loss_rpn_loc: 0.2944  time: 3.5201  data_time: 0.0042  lr: 0.01  max_mem: 0M
[32m[11/15 04:34:30 d2.utils.events]: [0m eta: 0:39:05  iter: 2339  total_loss: 1.156  loss_cls: 0.1821  loss_box_reg: 0.3792  loss_mask: 0.1855  loss_rpn_cls: 0.1046  loss_rpn_loc: 0.29  time: 3.5201  data_time: 0.0062  lr: 0.01  max_mem: 0M
[32m[11/15 04:35:40 d2.utils.events]: [0m eta: 0:37:54  iter: 2359  total_loss: 1.141  loss_cls: 0.1831  loss_box_reg: 0.3969  loss_mask: 0.1852  loss_rpn_cls: 0.1072  loss_rpn_loc: 0.3127  time: 3.5202  data_time: 0.0039  lr: 0.01  max_mem: 0M
[32m[11/15 04:36:51 d2.utils.events]: [0m eta: 0:36:41  iter: 2379  total_loss: 1.167  loss_cls: 0.1675  loss_box_reg: 0.3806  loss_mask: 0.1866  loss_rpn_cls: 0.1265  loss_rpn_loc: 0.3087  time: 3.5201  data_time: 0.0028  lr: 0.01  max_mem: 0M
[32m[11/15 04:38:03 d2.utils.events]: [0m eta: 0:35:28  iter: 2399  total_loss: 1.119  loss_cls: 0.1643  loss_box_reg: 0.38  loss_mask: 0.1817  loss_rpn_cls: 0.1089  loss_rpn_loc: 0.2785  time: 3.5208  data_time: 0.0067  lr: 0.01  max_mem: 0M
[32m[11/15 04:39:17 d2.utils.events]: [0m eta: 0:34:19  iter: 2419  total_loss: 1.15  loss_cls: 0.193  loss_box_reg: 0.3979  loss_mask: 0.1808  loss_rpn_cls: 0.1113  loss_rpn_loc: 0.26  time: 3.5225  data_time: 0.0059  lr: 0.01  max_mem: 0M
[32m[11/15 04:40:29 d2.utils.events]: [0m eta: 0:33:09  iter: 2439  total_loss: 1.154  loss_cls: 0.1744  loss_box_reg: 0.385  loss_mask: 0.1823  loss_rpn_cls: 0.1034  loss_rpn_loc: 0.2856  time: 3.5229  data_time: 0.0059  lr: 0.01  max_mem: 0M
[32m[11/15 04:41:42 d2.utils.events]: [0m eta: 0:31:57  iter: 2459  total_loss: 1.133  loss_cls: 0.1702  loss_box_reg: 0.3762  loss_mask: 0.1791  loss_rpn_cls: 0.114  loss_rpn_loc: 0.2984  time: 3.5242  data_time: 0.0061  lr: 0.01  max_mem: 0M
[32m[11/15 04:42:56 d2.utils.events]: [0m eta: 0:30:46  iter: 2479  total_loss: 1.111  loss_cls: 0.1797  loss_box_reg: 0.3803  loss_mask: 0.1793  loss_rpn_cls: 0.09068  loss_rpn_loc: 0.2841  time: 3.5253  data_time: 0.0026  lr: 0.01  max_mem: 0M
[32m[11/15 04:44:09 d2.utils.events]: [0m eta: 0:29:35  iter: 2499  total_loss: 1.081  loss_cls: 0.1742  loss_box_reg: 0.397  loss_mask: 0.1889  loss_rpn_cls: 0.09132  loss_rpn_loc: 0.275  time: 3.5265  data_time: 0.0040  lr: 0.01  max_mem: 0M
[32m[11/15 04:45:22 d2.utils.events]: [0m eta: 0:28:25  iter: 2519  total_loss: 1.052  loss_cls: 0.1542  loss_box_reg: 0.3547  loss_mask: 0.182  loss_rpn_cls: 0.09684  loss_rpn_loc: 0.2817  time: 3.5275  data_time: 0.0050  lr: 0.01  max_mem: 0M
[32m[11/15 04:46:33 d2.utils.events]: [0m eta: 0:27:15  iter: 2539  total_loss: 1.077  loss_cls: 0.1585  loss_box_reg: 0.3806  loss_mask: 0.1793  loss_rpn_cls: 0.08773  loss_rpn_loc: 0.269  time: 3.5274  data_time: 0.0037  lr: 0.01  max_mem: 0M
[32m[11/15 04:47:43 d2.utils.events]: [0m eta: 0:26:03  iter: 2559  total_loss: 1.076  loss_cls: 0.1482  loss_box_reg: 0.3603  loss_mask: 0.1755  loss_rpn_cls: 0.07627  loss_rpn_loc: 0.2775  time: 3.5272  data_time: 0.0040  lr: 0.01  max_mem: 0M
[32m[11/15 04:48:55 d2.utils.events]: [0m eta: 0:24:53  iter: 2579  total_loss: 1.067  loss_cls: 0.1572  loss_box_reg: 0.3543  loss_mask: 0.1799  loss_rpn_cls: 0.0939  loss_rpn_loc: 0.2873  time: 3.5276  data_time: 0.0059  lr: 0.01  max_mem: 0M
[32m[11/15 04:50:03 d2.utils.events]: [0m eta: 0:23:41  iter: 2599  total_loss: 1.076  loss_cls: 0.1647  loss_box_reg: 0.3768  loss_mask: 0.1776  loss_rpn_cls: 0.09491  loss_rpn_loc: 0.2682  time: 3.5270  data_time: 0.0065  lr: 0.01  max_mem: 0M
[32m[11/15 04:51:16 d2.utils.events]: [0m eta: 0:22:30  iter: 2619  total_loss: 1.117  loss_cls: 0.1602  loss_box_reg: 0.3638  loss_mask: 0.1757  loss_rpn_cls: 0.1068  loss_rpn_loc: 0.2705  time: 3.5277  data_time: 0.0052  lr: 0.01  max_mem: 0M
[32m[11/15 04:52:27 d2.utils.events]: [0m eta: 0:21:19  iter: 2639  total_loss: 1.035  loss_cls: 0.139  loss_box_reg: 0.3387  loss_mask: 0.1703  loss_rpn_cls: 0.09809  loss_rpn_loc: 0.2688  time: 3.5280  data_time: 0.0034  lr: 0.01  max_mem: 0M
[32m[11/15 04:53:38 d2.utils.events]: [0m eta: 0:20:07  iter: 2659  total_loss: 1.063  loss_cls: 0.1575  loss_box_reg: 0.3574  loss_mask: 0.1775  loss_rpn_cls: 0.1002  loss_rpn_loc: 0.28  time: 3.5281  data_time: 0.0068  lr: 0.01  max_mem: 0M
[32m[11/15 04:54:50 d2.utils.events]: [0m eta: 0:18:56  iter: 2679  total_loss: 1.047  loss_cls: 0.1582  loss_box_reg: 0.3532  loss_mask: 0.1652  loss_rpn_cls: 0.1036  loss_rpn_loc: 0.2678  time: 3.5285  data_time: 0.0040  lr: 0.01  max_mem: 0M
[32m[11/15 04:56:03 d2.utils.events]: [0m eta: 0:17:46  iter: 2699  total_loss: 0.9928  loss_cls: 0.1393  loss_box_reg: 0.3414  loss_mask: 0.1738  loss_rpn_cls: 0.09994  loss_rpn_loc: 0.2642  time: 3.5294  data_time: 0.0044  lr: 0.01  max_mem: 0M
[32m[11/15 04:57:13 d2.utils.events]: [0m eta: 0:16:34  iter: 2719  total_loss: 1.104  loss_cls: 0.1728  loss_box_reg: 0.3702  loss_mask: 0.1753  loss_rpn_cls: 0.09924  loss_rpn_loc: 0.2773  time: 3.5294  data_time: 0.0031  lr: 0.01  max_mem: 0M
[32m[11/15 04:58:26 d2.utils.events]: [0m eta: 0:15:23  iter: 2739  total_loss: 1.099  loss_cls: 0.1706  loss_box_reg: 0.3631  loss_mask: 0.1828  loss_rpn_cls: 0.07607  loss_rpn_loc: 0.2907  time: 3.5301  data_time: 0.0041  lr: 0.01  max_mem: 0M
[32m[11/15 04:59:39 d2.utils.events]: [0m eta: 0:14:11  iter: 2759  total_loss: 1.097  loss_cls: 0.1751  loss_box_reg: 0.366  loss_mask: 0.1875  loss_rpn_cls: 0.08449  loss_rpn_loc: 0.2754  time: 3.5308  data_time: 0.0039  lr: 0.01  max_mem: 0M
[32m[11/15 05:00:51 d2.utils.events]: [0m eta: 0:13:01  iter: 2779  total_loss: 1.089  loss_cls: 0.1518  loss_box_reg: 0.3427  loss_mask: 0.168  loss_rpn_cls: 0.08031  loss_rpn_loc: 0.2895  time: 3.5314  data_time: 0.0052  lr: 0.01  max_mem: 0M
[32m[11/15 05:02:02 d2.utils.events]: [0m eta: 0:11:48  iter: 2799  total_loss: 1.024  loss_cls: 0.1608  loss_box_reg: 0.3426  loss_mask: 0.1799  loss_rpn_cls: 0.08071  loss_rpn_loc: 0.2653  time: 3.5317  data_time: 0.0043  lr: 0.01  max_mem: 0M
[32m[11/15 05:03:13 d2.utils.events]: [0m eta: 0:10:37  iter: 2819  total_loss: 1.007  loss_cls: 0.1604  loss_box_reg: 0.3503  loss_mask: 0.1672  loss_rpn_cls: 0.08704  loss_rpn_loc: 0.2535  time: 3.5315  data_time: 0.0031  lr: 0.01  max_mem: 0M
[32m[11/15 05:04:24 d2.utils.events]: [0m eta: 0:09:27  iter: 2839  total_loss: 1.036  loss_cls: 0.1473  loss_box_reg: 0.3497  loss_mask: 0.1854  loss_rpn_cls: 0.09071  loss_rpn_loc: 0.2564  time: 3.5316  data_time: 0.0033  lr: 0.01  max_mem: 0M
[32m[11/15 05:05:35 d2.utils.events]: [0m eta: 0:08:17  iter: 2859  total_loss: 1.099  loss_cls: 0.1681  loss_box_reg: 0.3649  loss_mask: 0.1854  loss_rpn_cls: 0.1013  loss_rpn_loc: 0.2583  time: 3.5320  data_time: 0.0034  lr: 0.01  max_mem: 0M
[32m[11/15 05:06:45 d2.utils.events]: [0m eta: 0:07:05  iter: 2879  total_loss: 1.102  loss_cls: 0.1495  loss_box_reg: 0.3462  loss_mask: 0.1749  loss_rpn_cls: 0.1093  loss_rpn_loc: 0.2753  time: 3.5316  data_time: 0.0031  lr: 0.01  max_mem: 0M
[32m[11/15 05:07:58 d2.utils.events]: [0m eta: 0:05:54  iter: 2899  total_loss: 1.052  loss_cls: 0.1569  loss_box_reg: 0.3659  loss_mask: 0.1649  loss_rpn_cls: 0.07779  loss_rpn_loc: 0.2647  time: 3.5324  data_time: 0.0054  lr: 0.01  max_mem: 0M
[32m[11/15 05:09:09 d2.utils.events]: [0m eta: 0:04:43  iter: 2919  total_loss: 1.041  loss_cls: 0.1538  loss_box_reg: 0.3551  loss_mask: 0.1701  loss_rpn_cls: 0.1085  loss_rpn_loc: 0.2671  time: 3.5326  data_time: 0.0055  lr: 0.01  max_mem: 0M
[32m[11/15 05:10:19 d2.utils.events]: [0m eta: 0:03:32  iter: 2939  total_loss: 1.009  loss_cls: 0.1567  loss_box_reg: 0.3547  loss_mask: 0.1609  loss_rpn_cls: 0.09942  loss_rpn_loc: 0.2508  time: 3.5325  data_time: 0.0069  lr: 0.01  max_mem: 0M
[32m[11/15 05:11:33 d2.utils.events]: [0m eta: 0:02:21  iter: 2959  total_loss: 0.993  loss_cls: 0.1452  loss_box_reg: 0.3568  loss_mask: 0.1618  loss_rpn_cls: 0.09148  loss_rpn_loc: 0.2411  time: 3.5335  data_time: 0.0052  lr: 0.01  max_mem: 0M
[32m[11/15 05:12:43 d2.utils.events]: [0m eta: 0:01:10  iter: 2979  total_loss: 1.024  loss_cls: 0.1581  loss_box_reg: 0.3301  loss_mask: 0.1751  loss_rpn_cls: 0.08817  loss_rpn_loc: 0.2517  time: 3.5333  data_time: 0.0035  lr: 0.01  max_mem: 0M
[32m[11/15 05:13:55 d2.utils.events]: [0m eta: 0:00:00  iter: 2999  total_loss: 1.024  loss_cls: 0.1426  loss_box_reg: 0.3501  loss_mask: 0.1666  loss_rpn_cls: 0.1136  loss_rpn_loc: 0.2709  time: 3.5333  data_time: 0.0046  lr: 0.01  max_mem: 0M
[32m[11/15 05:13:55 d2.engine.hooks]: [0mOverall training speed: 2998 iterations in 2:56:32 (3.5333 s / it)
[32m[11/15 05:13:55 d2.engine.hooks]: [0mTotal training time: 2:56:39 (0:00:06 on hooks)
[32m[11/15 05:13:55 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[32m[11/15 05:13:55 d2.data.common]: [0mSerializing 20 elements to byte tensors and concatenating them all ...
[32m[11/15 05:13:55 d2.data.common]: [0mSerialized dataset takes 0.46 MiB
[5m[31mWARNING[0m [32m[11/15 05:13:55 d2.engine.defaults]: [0mNo evaluator found. Use `DefaultTrainer.test(evaluators=)`, or implement its `build_evaluator` method.
[32m[11/15 05:13:56 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[32m[11/15 05:13:56 d2.data.common]: [0mSerializing 6 elements to byte tensors and concatenating them all ...
[32m[11/15 05:13:56 d2.data.common]: [0mSerialized dataset takes 0.11 MiB
[5m[31mWARNING[0m [32m[11/15 05:13:56 d2.engine.defaults]: [0mNo evaluator found. Use `DefaultTrainer.test(evaluators=)`, or implement its `build_evaluator` method.
USING MODEL WEIGHT: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp20/model_0002999.pth
Dataset: satellite_Val
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S08_03_SE1_1000X03.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S08_03_SE1_1000X03.png
	num_instances: 114
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S06_01_SE1_500X67.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S06_01_SE1_500X67.png
	num_instances: 157
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S04_02_SE1_1000X50.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S04_02_SE1_1000X50.png
	num_instances: 47
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S03_03_SE1_1250X41.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S03_03_SE1_1250X41.png
	num_instances: 118
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S02_01_SE1_300X14.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S02_01_SE1_300X14.png
	num_instances: 108
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/HP743_2S_250x.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/HP743_2S_250x.png
	num_instances: 72
gt filename: S08_03_SE1_1000X03.png	 pred filename: S08_03_SE1_1000X03.png
gt filename: S06_01_SE1_500X67.png	 pred filename: S06_01_SE1_500X67.png
gt filename: S04_02_SE1_1000X50.png	 pred filename: S04_02_SE1_1000X50.png
gt filename: S03_03_SE1_1250X41.png	 pred filename: S03_03_SE1_1250X41.png
gt filename: S02_01_SE1_300X14.png	 pred filename: S02_01_SE1_300X14.png
gt filename: HP743_2S_250x.png	 pred filename: HP743_2S_250x.png
x:  [1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2]
y:  [0.4, 0.12, 0.53, 0.42, 0.43, 0.4, 0.52, 0.35, 0.56, 0.44, 0.47, 0.59]
Average Precision Score:  0.38340011913648997
Average Recall Score:     0.48880010189534
Precision: 0.4841308702425996
Recall: 0.6445418987791869
---
Precision: 0.1215946615299945
Recall: 0.5065921467469189
---
Precision: 0.612505058680696
Recall: 0.5608671484157866
---
Precision: 0.2699024997721957
Recall: 0.37933831376734256
---
Precision: 0.7461441960002951
Recall: 0.6007010456273765
---
Precision: 0.3177533074546463
Recall: 0.46628691002092537
---
USING MODEL WEIGHT: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp20/model_final.pth
Dataset: satellite_Val
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S08_03_SE1_1000X03.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S08_03_SE1_1000X03.png
	num_instances: 114
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S06_01_SE1_500X67.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S06_01_SE1_500X67.png
	num_instances: 157
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S04_02_SE1_1000X50.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S04_02_SE1_1000X50.png
	num_instances: 47
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S03_03_SE1_1250X41.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S03_03_SE1_1250X41.png
	num_instances: 118
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S02_01_SE1_300X14.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S02_01_SE1_300X14.png
	num_instances: 108
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/HP743_2S_250x.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/HP743_2S_250x.png
	num_instances: 72
gt filename: S08_03_SE1_1000X03.png	 pred filename: S08_03_SE1_1000X03.png
gt filename: S06_01_SE1_500X67.png	 pred filename: S06_01_SE1_500X67.png
gt filename: S04_02_SE1_1000X50.png	 pred filename: S04_02_SE1_1000X50.png
gt filename: S03_03_SE1_1250X41.png	 pred filename: S03_03_SE1_1250X41.png
gt filename: S02_01_SE1_300X14.png	 pred filename: S02_01_SE1_300X14.png
gt filename: HP743_2S_250x.png	 pred filename: HP743_2S_250x.png
x:  [1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2]
y:  [0.4, 0.12, 0.53, 0.42, 0.43, 0.4, 0.52, 0.35, 0.56, 0.44, 0.47, 0.59]
Average Precision Score:  0.38340011913648997
Average Recall Score:     0.48880010189534
Precision: 0.4841308702425996
Recall: 0.6445418987791869
---
Precision: 0.1215946615299945
Recall: 0.5065921467469189
---
Precision: 0.612505058680696
Recall: 0.5608671484157866
---
Precision: 0.2699024997721957
Recall: 0.37933831376734256
---
Precision: 0.7461441960002951
Recall: 0.6007010456273765
---
Precision: 0.3177533074546463
Recall: 0.46628691002092537
---
Ignoring Final Model
Deleting: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp20/model_0002999.pth
Current File Path
../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp20/model_0002999.pth
New File Path
../../../../../../../ocean/projects/dmr200021p/sprice/variance/CPU_NO_CONFIG/trial1/model4.pth
Deleting: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp20/model_final.pth
Current File Path
../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp20/model_final.pth
New File Path
../../../../../../../ocean/projects/dmr200021p/sprice/variance/CPU_NO_CONFIG/trial1/model4.pth
Deleting: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp20/results_checkpoint_0002999.pickle
../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp20/results_checkpoint_0002999.pickle
Deleting: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp20/results_checkpoint_final.pickle
../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp20/results_checkpoint_final.pickle
Removing: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp20/metrics.json
Removing: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp20/last_checkpoint
/var/spool/slurm/d/job5038011/slurm_script: line 9: ./gpua.out: No such file or directory
