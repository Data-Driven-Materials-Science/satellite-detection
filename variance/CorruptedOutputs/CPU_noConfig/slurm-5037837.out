Registered Datasets: ['satellite_Train', 'satellite_Val']
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S06_03_SE1_500X75.png
	num_instances: 96
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/HP743_10S_500x.png
	num_instances: 32
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S04_01_SE1_1000X45.png
	num_instances: 41
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S08_03_SE1_1000X03.png
	num_instances: 88
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S06_01_SE1_500X67.png
	num_instances: 54
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S04_02_SE1_1000X50.png
	num_instances: 45
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S03_03_SE1_1250X41.png
	num_instances: 111
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S02_01_SE1_300X14.png
	num_instances: 98
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/HP743_2S_250x.png
	num_instances: 49
Weights not found, weights will be downloaded from source: https://dl.fbaipublicfiles.com/detectron2/COCO-InstanceSegmentation/mask_rcnn_R_50_FPN_3x/137849600/model_final_f10217.pkl
[32m[11/14 23:11:02 d2.engine.defaults]: [0mModel:
GeneralizedRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): StandardROIHeads(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): FastRCNNConvFCHead(
      (flatten): Flatten(start_dim=1, end_dim=-1)
      (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      (fc_relu1): ReLU()
      (fc2): Linear(in_features=1024, out_features=1024, bias=True)
      (fc_relu2): ReLU()
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=1024, out_features=2, bias=True)
      (bbox_pred): Linear(in_features=1024, out_features=4, bias=True)
    )
    (mask_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(14, 14), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(14, 14), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (mask_head): MaskRCNNConvUpsampleHead(
      (mask_fcn1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn2): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn3): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn4): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
      (deconv_relu): ReLU()
      (predictor): Conv2d(256, 1, kernel_size=(1, 1), stride=(1, 1))
    )
  )
)
[32m[11/14 23:11:02 d2.data.build]: [0mRemoved 0 images with no usable annotations. 20 images left.
[32m[11/14 23:11:02 d2.data.build]: [0mDistribution of instances among all 1 categories:
[36m|  category  | #instances   |
|:----------:|:-------------|
| satellite  | 1412         |
|            |              |[0m
[32m[11/14 23:11:02 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[32m[11/14 23:11:02 d2.data.build]: [0mUsing training sampler TrainingSampler
[32m[11/14 23:11:02 d2.data.common]: [0mSerializing 20 elements to byte tensors and concatenating them all ...
[32m[11/14 23:11:02 d2.data.common]: [0mSerialized dataset takes 0.46 MiB
[5m[31mWARNING[0m [32m[11/14 23:11:02 d2.solver.build]: [0mSOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[32m[11/14 23:11:02 d2.checkpoint.c2_model_loading]: [0mRenaming Caffe2 weights ......
[32m[11/14 23:11:02 d2.checkpoint.c2_model_loading]: [0mFollowing weights matched with submodule backbone.bottom_up:
| Names in Model    | Names in Checkpoint      | Shapes                                          |
|:------------------|:-------------------------|:------------------------------------------------|
| res2.0.conv1.*    | res2_0_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,1,1)             |
| res2.0.conv2.*    | res2_0_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.0.conv3.*    | res2_0_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.0.shortcut.* | res2_0_branch1_{bn_*,w}  | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.1.conv1.*    | res2_1_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,256,1,1)            |
| res2.1.conv2.*    | res2_1_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.1.conv3.*    | res2_1_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.2.conv1.*    | res2_2_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,256,1,1)            |
| res2.2.conv2.*    | res2_2_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.2.conv3.*    | res2_2_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res3.0.conv1.*    | res3_0_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,256,1,1)       |
| res3.0.conv2.*    | res3_0_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.0.conv3.*    | res3_0_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.0.shortcut.* | res3_0_branch1_{bn_*,w}  | (512,) (512,) (512,) (512,) (512,256,1,1)       |
| res3.1.conv1.*    | res3_1_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.1.conv2.*    | res3_1_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.1.conv3.*    | res3_1_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.2.conv1.*    | res3_2_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.2.conv2.*    | res3_2_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.2.conv3.*    | res3_2_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.3.conv1.*    | res3_3_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.3.conv2.*    | res3_3_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.3.conv3.*    | res3_3_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res4.0.conv1.*    | res4_0_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,512,1,1)       |
| res4.0.conv2.*    | res4_0_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.0.conv3.*    | res4_0_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.0.shortcut.* | res4_0_branch1_{bn_*,w}  | (1024,) (1024,) (1024,) (1024,) (1024,512,1,1)  |
| res4.1.conv1.*    | res4_1_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.1.conv2.*    | res4_1_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.1.conv3.*    | res4_1_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.2.conv1.*    | res4_2_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.2.conv2.*    | res4_2_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.2.conv3.*    | res4_2_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.3.conv1.*    | res4_3_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.3.conv2.*    | res4_3_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.3.conv3.*    | res4_3_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.4.conv1.*    | res4_4_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.4.conv2.*    | res4_4_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.4.conv3.*    | res4_4_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.5.conv1.*    | res4_5_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.5.conv2.*    | res4_5_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.5.conv3.*    | res4_5_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res5.0.conv1.*    | res5_0_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,1024,1,1)      |
| res5.0.conv2.*    | res5_0_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.0.conv3.*    | res5_0_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| res5.0.shortcut.* | res5_0_branch1_{bn_*,w}  | (2048,) (2048,) (2048,) (2048,) (2048,1024,1,1) |
| res5.1.conv1.*    | res5_1_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,2048,1,1)      |
| res5.1.conv2.*    | res5_1_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.1.conv3.*    | res5_1_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| res5.2.conv1.*    | res5_2_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,2048,1,1)      |
| res5.2.conv2.*    | res5_2_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.2.conv3.*    | res5_2_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| stem.conv1.norm.* | res_conv1_bn_*           | (64,) (64,) (64,) (64,)                         |
| stem.conv1.weight | conv1_w                  | (64, 3, 7, 7)                                   |
[32m[11/14 23:11:02 d2.engine.train_loop]: [0mStarting training from iteration 0
[32m[11/14 23:12:27 d2.utils.events]: [0m eta: 3:24:43  iter: 19  total_loss: 3.26  loss_cls: 0.542  loss_box_reg: 0.04298  loss_mask: 0.6745  loss_rpn_cls: 0.6732  loss_rpn_loc: 1.292  time: 3.9818  data_time: 0.0190  lr: 0.00019981  max_mem: 0M
[32m[11/14 23:13:40 d2.utils.events]: [0m eta: 3:10:23  iter: 39  total_loss: 2.317  loss_cls: 0.2963  loss_box_reg: 0.02211  loss_mask: 0.6034  loss_rpn_cls: 0.6033  loss_rpn_loc: 0.7583  time: 3.8081  data_time: 0.0079  lr: 0.00039961  max_mem: 0M
[32m[11/14 23:14:51 d2.utils.events]: [0m eta: 2:56:35  iter: 59  total_loss: 2.047  loss_cls: 0.2039  loss_box_reg: 0.05954  loss_mask: 0.5883  loss_rpn_cls: 0.5751  loss_rpn_loc: 0.5853  time: 3.7174  data_time: 0.0107  lr: 0.00059941  max_mem: 0M
[32m[11/14 23:16:12 d2.utils.events]: [0m eta: 3:00:59  iter: 79  total_loss: 2.166  loss_cls: 0.2567  loss_box_reg: 0.2249  loss_mask: 0.5663  loss_rpn_cls: 0.5432  loss_rpn_loc: 0.5295  time: 3.7986  data_time: 0.0066  lr: 0.00079921  max_mem: 0M
[32m[11/14 23:17:26 d2.utils.events]: [0m eta: 2:59:45  iter: 99  total_loss: 2.246  loss_cls: 0.2772  loss_box_reg: 0.2892  loss_mask: 0.5621  loss_rpn_cls: 0.4884  loss_rpn_loc: 0.5504  time: 3.7823  data_time: 0.0054  lr: 0.00099901  max_mem: 0M
[32m[11/14 23:18:42 d2.utils.events]: [0m eta: 3:00:30  iter: 119  total_loss: 2.22  loss_cls: 0.3186  loss_box_reg: 0.4759  loss_mask: 0.5415  loss_rpn_cls: 0.4031  loss_rpn_loc: 0.5213  time: 3.7862  data_time: 0.0047  lr: 0.0011988  max_mem: 0M
[32m[11/14 23:20:00 d2.utils.events]: [0m eta: 3:00:26  iter: 139  total_loss: 2.064  loss_cls: 0.2971  loss_box_reg: 0.4337  loss_mask: 0.5083  loss_rpn_cls: 0.3603  loss_rpn_loc: 0.4871  time: 3.8042  data_time: 0.0034  lr: 0.0013986  max_mem: 0M
[32m[11/14 23:21:23 d2.utils.events]: [0m eta: 2:59:20  iter: 159  total_loss: 1.998  loss_cls: 0.2716  loss_box_reg: 0.409  loss_mask: 0.4956  loss_rpn_cls: 0.3013  loss_rpn_loc: 0.5079  time: 3.8444  data_time: 0.0047  lr: 0.0015984  max_mem: 0M
[32m[11/14 23:22:40 d2.utils.events]: [0m eta: 2:59:19  iter: 179  total_loss: 1.985  loss_cls: 0.3195  loss_box_reg: 0.4657  loss_mask: 0.4538  loss_rpn_cls: 0.3149  loss_rpn_loc: 0.4767  time: 3.8478  data_time: 0.0054  lr: 0.0017982  max_mem: 0M
[32m[11/14 23:24:02 d2.utils.events]: [0m eta: 2:59:21  iter: 199  total_loss: 1.883  loss_cls: 0.2613  loss_box_reg: 0.4349  loss_mask: 0.4039  loss_rpn_cls: 0.2684  loss_rpn_loc: 0.4714  time: 3.8694  data_time: 0.0042  lr: 0.001998  max_mem: 0M
[32m[11/14 23:25:28 d2.utils.events]: [0m eta: 2:58:05  iter: 219  total_loss: 1.766  loss_cls: 0.2491  loss_box_reg: 0.4442  loss_mask: 0.3703  loss_rpn_cls: 0.2358  loss_rpn_loc: 0.4292  time: 3.9073  data_time: 0.0055  lr: 0.0021978  max_mem: 0M
[32m[11/14 23:27:00 d2.utils.events]: [0m eta: 2:57:03  iter: 239  total_loss: 1.792  loss_cls: 0.2424  loss_box_reg: 0.428  loss_mask: 0.4051  loss_rpn_cls: 0.2736  loss_rpn_loc: 0.454  time: 3.9649  data_time: 0.0086  lr: 0.0023976  max_mem: 0M
[32m[11/14 23:28:35 d2.utils.events]: [0m eta: 2:58:46  iter: 259  total_loss: 1.83  loss_cls: 0.2546  loss_box_reg: 0.4279  loss_mask: 0.3601  loss_rpn_cls: 0.2582  loss_rpn_loc: 0.4293  time: 4.0266  data_time: 0.0066  lr: 0.0025974  max_mem: 0M
[32m[11/14 23:30:03 d2.utils.events]: [0m eta: 2:59:07  iter: 279  total_loss: 1.824  loss_cls: 0.2526  loss_box_reg: 0.4419  loss_mask: 0.3524  loss_rpn_cls: 0.2659  loss_rpn_loc: 0.4718  time: 4.0532  data_time: 0.0059  lr: 0.0027972  max_mem: 0M
[32m[11/14 23:31:37 d2.utils.events]: [0m eta: 2:58:38  iter: 299  total_loss: 1.857  loss_cls: 0.3023  loss_box_reg: 0.5206  loss_mask: 0.3553  loss_rpn_cls: 0.2198  loss_rpn_loc: 0.4369  time: 4.0969  data_time: 0.0058  lr: 0.002997  max_mem: 0M
[32m[11/14 23:33:18 d2.utils.events]: [0m eta: 2:59:15  iter: 319  total_loss: 1.671  loss_cls: 0.2571  loss_box_reg: 0.4655  loss_mask: 0.3176  loss_rpn_cls: 0.1869  loss_rpn_loc: 0.4355  time: 4.1561  data_time: 0.0049  lr: 0.0031968  max_mem: 0M
[32m[11/14 23:34:37 d2.utils.events]: [0m eta: 2:57:40  iter: 339  total_loss: 1.803  loss_cls: 0.255  loss_box_reg: 0.4951  loss_mask: 0.3491  loss_rpn_cls: 0.2517  loss_rpn_loc: 0.422  time: 4.1450  data_time: 0.0052  lr: 0.0033966  max_mem: 0M
[32m[11/14 23:36:05 d2.utils.events]: [0m eta: 2:57:48  iter: 359  total_loss: 1.775  loss_cls: 0.2812  loss_box_reg: 0.4984  loss_mask: 0.3113  loss_rpn_cls: 0.2365  loss_rpn_loc: 0.4326  time: 4.1582  data_time: 0.0055  lr: 0.0035964  max_mem: 0M
[32m[11/14 23:37:26 d2.utils.events]: [0m eta: 2:56:29  iter: 379  total_loss: 1.693  loss_cls: 0.2658  loss_box_reg: 0.5027  loss_mask: 0.3051  loss_rpn_cls: 0.2166  loss_rpn_loc: 0.4313  time: 4.1539  data_time: 0.0062  lr: 0.0037962  max_mem: 0M
[32m[11/14 23:38:46 d2.utils.events]: [0m eta: 2:55:02  iter: 399  total_loss: 1.653  loss_cls: 0.2341  loss_box_reg: 0.4404  loss_mask: 0.2978  loss_rpn_cls: 0.1937  loss_rpn_loc: 0.4577  time: 4.1439  data_time: 0.0046  lr: 0.003996  max_mem: 0M
[32m[11/14 23:40:09 d2.utils.events]: [0m eta: 2:53:47  iter: 419  total_loss: 1.582  loss_cls: 0.2245  loss_box_reg: 0.388  loss_mask: 0.2919  loss_rpn_cls: 0.2241  loss_rpn_loc: 0.408  time: 4.1451  data_time: 0.0051  lr: 0.0041958  max_mem: 0M
[32m[11/14 23:41:35 d2.utils.events]: [0m eta: 2:52:51  iter: 439  total_loss: 1.678  loss_cls: 0.2687  loss_box_reg: 0.4776  loss_mask: 0.279  loss_rpn_cls: 0.2004  loss_rpn_loc: 0.3962  time: 4.1512  data_time: 0.0057  lr: 0.0043956  max_mem: 0M
[32m[11/14 23:42:57 d2.utils.events]: [0m eta: 2:51:23  iter: 459  total_loss: 1.682  loss_cls: 0.2293  loss_box_reg: 0.4343  loss_mask: 0.3002  loss_rpn_cls: 0.2495  loss_rpn_loc: 0.4269  time: 4.1484  data_time: 0.0052  lr: 0.0045954  max_mem: 0M
[32m[11/14 23:44:15 d2.utils.events]: [0m eta: 2:49:55  iter: 479  total_loss: 1.57  loss_cls: 0.203  loss_box_reg: 0.366  loss_mask: 0.2891  loss_rpn_cls: 0.2086  loss_rpn_loc: 0.4335  time: 4.1388  data_time: 0.0048  lr: 0.0047952  max_mem: 0M
[32m[11/14 23:45:39 d2.utils.events]: [0m eta: 2:48:53  iter: 499  total_loss: 1.635  loss_cls: 0.2282  loss_box_reg: 0.4588  loss_mask: 0.2787  loss_rpn_cls: 0.2245  loss_rpn_loc: 0.4181  time: 4.1407  data_time: 0.0036  lr: 0.004995  max_mem: 0M
[32m[11/14 23:46:52 d2.utils.events]: [0m eta: 2:47:03  iter: 519  total_loss: 1.413  loss_cls: 0.1842  loss_box_reg: 0.3355  loss_mask: 0.2703  loss_rpn_cls: 0.2001  loss_rpn_loc: 0.4414  time: 4.1218  data_time: 0.0062  lr: 0.0051948  max_mem: 0M
[32m[11/14 23:48:07 d2.utils.events]: [0m eta: 2:45:27  iter: 539  total_loss: 1.523  loss_cls: 0.2176  loss_box_reg: 0.4147  loss_mask: 0.2695  loss_rpn_cls: 0.1937  loss_rpn_loc: 0.4143  time: 4.1075  data_time: 0.0095  lr: 0.0053946  max_mem: 0M
[32m[11/14 23:49:23 d2.utils.events]: [0m eta: 2:43:20  iter: 559  total_loss: 1.626  loss_cls: 0.2575  loss_box_reg: 0.4541  loss_mask: 0.2724  loss_rpn_cls: 0.1974  loss_rpn_loc: 0.3881  time: 4.0965  data_time: 0.0045  lr: 0.0055944  max_mem: 0M
[32m[11/14 23:50:42 d2.utils.events]: [0m eta: 2:41:51  iter: 579  total_loss: 1.619  loss_cls: 0.2449  loss_box_reg: 0.4997  loss_mask: 0.2575  loss_rpn_cls: 0.1819  loss_rpn_loc: 0.4172  time: 4.0916  data_time: 0.0053  lr: 0.0057942  max_mem: 0M
[32m[11/14 23:51:59 d2.utils.events]: [0m eta: 2:40:31  iter: 599  total_loss: 1.652  loss_cls: 0.2343  loss_box_reg: 0.4244  loss_mask: 0.2702  loss_rpn_cls: 0.2489  loss_rpn_loc: 0.436  time: 4.0833  data_time: 0.0051  lr: 0.005994  max_mem: 0M
[32m[11/14 23:53:30 d2.utils.events]: [0m eta: 2:39:43  iter: 619  total_loss: 1.529  loss_cls: 0.181  loss_box_reg: 0.4183  loss_mask: 0.2648  loss_rpn_cls: 0.183  loss_rpn_loc: 0.3866  time: 4.0974  data_time: 0.0139  lr: 0.0061938  max_mem: 0M
[32m[11/14 23:54:56 d2.utils.events]: [0m eta: 2:38:48  iter: 639  total_loss: 1.504  loss_cls: 0.1949  loss_box_reg: 0.431  loss_mask: 0.2577  loss_rpn_cls: 0.1909  loss_rpn_loc: 0.4059  time: 4.1038  data_time: 0.0046  lr: 0.0063936  max_mem: 0M
[32m[11/14 23:56:21 d2.utils.events]: [0m eta: 2:37:28  iter: 659  total_loss: 1.476  loss_cls: 0.2006  loss_box_reg: 0.4183  loss_mask: 0.256  loss_rpn_cls: 0.1843  loss_rpn_loc: 0.4141  time: 4.1083  data_time: 0.0044  lr: 0.0065934  max_mem: 0M
[32m[11/14 23:57:41 d2.utils.events]: [0m eta: 2:36:11  iter: 679  total_loss: 1.554  loss_cls: 0.2661  loss_box_reg: 0.4639  loss_mask: 0.2588  loss_rpn_cls: 0.169  loss_rpn_loc: 0.4148  time: 4.1060  data_time: 0.0059  lr: 0.0067932  max_mem: 0M
[32m[11/14 23:58:59 d2.utils.events]: [0m eta: 2:34:44  iter: 699  total_loss: 1.562  loss_cls: 0.2381  loss_box_reg: 0.4633  loss_mask: 0.2781  loss_rpn_cls: 0.1677  loss_rpn_loc: 0.4229  time: 4.0994  data_time: 0.0068  lr: 0.006993  max_mem: 0M
[32m[11/15 00:00:25 d2.utils.events]: [0m eta: 2:33:25  iter: 719  total_loss: 1.516  loss_cls: 0.2352  loss_box_reg: 0.4562  loss_mask: 0.2489  loss_rpn_cls: 0.1624  loss_rpn_loc: 0.3941  time: 4.1055  data_time: 0.0081  lr: 0.0071928  max_mem: 0M
[32m[11/15 00:01:45 d2.utils.events]: [0m eta: 2:32:00  iter: 739  total_loss: 1.594  loss_cls: 0.2553  loss_box_reg: 0.4285  loss_mask: 0.2579  loss_rpn_cls: 0.202  loss_rpn_loc: 0.4115  time: 4.1013  data_time: 0.0050  lr: 0.0073926  max_mem: 0M
[32m[11/15 00:03:03 d2.utils.events]: [0m eta: 2:30:36  iter: 759  total_loss: 1.42  loss_cls: 0.1856  loss_box_reg: 0.4209  loss_mask: 0.2571  loss_rpn_cls: 0.1879  loss_rpn_loc: 0.3915  time: 4.0966  data_time: 0.0060  lr: 0.0075924  max_mem: 0M
[32m[11/15 00:04:21 d2.utils.events]: [0m eta: 2:29:13  iter: 779  total_loss: 1.458  loss_cls: 0.2181  loss_box_reg: 0.4497  loss_mask: 0.2361  loss_rpn_cls: 0.1694  loss_rpn_loc: 0.3799  time: 4.0916  data_time: 0.0047  lr: 0.0077922  max_mem: 0M
[32m[11/15 00:05:45 d2.utils.events]: [0m eta: 2:27:53  iter: 799  total_loss: 1.544  loss_cls: 0.2536  loss_box_reg: 0.4822  loss_mask: 0.2636  loss_rpn_cls: 0.1667  loss_rpn_loc: 0.3621  time: 4.0943  data_time: 0.0050  lr: 0.007992  max_mem: 0M
[32m[11/15 00:07:02 d2.utils.events]: [0m eta: 2:26:01  iter: 819  total_loss: 1.521  loss_cls: 0.2288  loss_box_reg: 0.4777  loss_mask: 0.2583  loss_rpn_cls: 0.1749  loss_rpn_loc: 0.3685  time: 4.0882  data_time: 0.0042  lr: 0.0081918  max_mem: 0M
[32m[11/15 00:08:25 d2.utils.events]: [0m eta: 2:25:11  iter: 839  total_loss: 1.534  loss_cls: 0.2189  loss_box_reg: 0.4563  loss_mask: 0.2491  loss_rpn_cls: 0.1401  loss_rpn_loc: 0.3984  time: 4.0889  data_time: 0.0092  lr: 0.0083916  max_mem: 0M
[32m[11/15 00:09:48 d2.utils.events]: [0m eta: 2:23:51  iter: 859  total_loss: 1.559  loss_cls: 0.2516  loss_box_reg: 0.4579  loss_mask: 0.2447  loss_rpn_cls: 0.1761  loss_rpn_loc: 0.3883  time: 4.0913  data_time: 0.0032  lr: 0.0085914  max_mem: 0M
[32m[11/15 00:11:15 d2.utils.events]: [0m eta: 2:22:38  iter: 879  total_loss: 1.569  loss_cls: 0.2506  loss_box_reg: 0.4934  loss_mask: 0.249  loss_rpn_cls: 0.1803  loss_rpn_loc: 0.4098  time: 4.0964  data_time: 0.0055  lr: 0.0087912  max_mem: 0M
[32m[11/15 00:12:36 d2.utils.events]: [0m eta: 2:21:18  iter: 899  total_loss: 1.501  loss_cls: 0.2412  loss_box_reg: 0.4728  loss_mask: 0.231  loss_rpn_cls: 0.146  loss_rpn_loc: 0.4049  time: 4.0957  data_time: 0.0041  lr: 0.008991  max_mem: 0M
[32m[11/15 00:13:54 d2.utils.events]: [0m eta: 2:19:56  iter: 919  total_loss: 1.431  loss_cls: 0.2085  loss_box_reg: 0.3976  loss_mask: 0.2448  loss_rpn_cls: 0.1988  loss_rpn_loc: 0.4071  time: 4.0909  data_time: 0.0043  lr: 0.0091908  max_mem: 0M
[32m[11/15 00:15:17 d2.utils.events]: [0m eta: 2:18:36  iter: 939  total_loss: 1.437  loss_cls: 0.2128  loss_box_reg: 0.4396  loss_mask: 0.2394  loss_rpn_cls: 0.1652  loss_rpn_loc: 0.4197  time: 4.0926  data_time: 0.0066  lr: 0.0093906  max_mem: 0M
[32m[11/15 00:16:41 d2.utils.events]: [0m eta: 2:17:17  iter: 959  total_loss: 1.43  loss_cls: 0.1812  loss_box_reg: 0.3868  loss_mask: 0.2362  loss_rpn_cls: 0.1613  loss_rpn_loc: 0.4366  time: 4.0942  data_time: 0.0088  lr: 0.0095904  max_mem: 0M
[32m[11/15 00:18:07 d2.utils.events]: [0m eta: 2:15:58  iter: 979  total_loss: 1.358  loss_cls: 0.1768  loss_box_reg: 0.3755  loss_mask: 0.2352  loss_rpn_cls: 0.1686  loss_rpn_loc: 0.4092  time: 4.0986  data_time: 0.0061  lr: 0.0097902  max_mem: 0M
[32m[11/15 00:19:34 d2.utils.events]: [0m eta: 2:14:42  iter: 999  total_loss: 1.425  loss_cls: 0.2149  loss_box_reg: 0.44  loss_mask: 0.2324  loss_rpn_cls: 0.1465  loss_rpn_loc: 0.4138  time: 4.1038  data_time: 0.0040  lr: 0.00999  max_mem: 0M
[32m[11/15 00:21:03 d2.utils.events]: [0m eta: 2:13:22  iter: 1019  total_loss: 1.417  loss_cls: 0.2278  loss_box_reg: 0.4419  loss_mask: 0.2415  loss_rpn_cls: 0.1378  loss_rpn_loc: 0.4065  time: 4.1104  data_time: 0.0102  lr: 0.01  max_mem: 0M
[32m[11/15 00:22:27 d2.utils.events]: [0m eta: 2:12:21  iter: 1039  total_loss: 1.449  loss_cls: 0.2096  loss_box_reg: 0.4259  loss_mask: 0.2396  loss_rpn_cls: 0.1549  loss_rpn_loc: 0.3845  time: 4.1124  data_time: 0.0047  lr: 0.01  max_mem: 0M
[32m[11/15 00:23:52 d2.utils.events]: [0m eta: 2:11:23  iter: 1059  total_loss: 1.274  loss_cls: 0.1717  loss_box_reg: 0.3853  loss_mask: 0.2252  loss_rpn_cls: 0.118  loss_rpn_loc: 0.3649  time: 4.1146  data_time: 0.0049  lr: 0.01  max_mem: 0M
[32m[11/15 00:25:12 d2.utils.events]: [0m eta: 2:09:59  iter: 1079  total_loss: 1.328  loss_cls: 0.1884  loss_box_reg: 0.3978  loss_mask: 0.223  loss_rpn_cls: 0.1444  loss_rpn_loc: 0.3756  time: 4.1120  data_time: 0.0072  lr: 0.01  max_mem: 0M
[32m[11/15 00:26:46 d2.utils.events]: [0m eta: 2:09:00  iter: 1099  total_loss: 1.461  loss_cls: 0.2299  loss_box_reg: 0.4649  loss_mask: 0.2362  loss_rpn_cls: 0.1473  loss_rpn_loc: 0.366  time: 4.1233  data_time: 0.0079  lr: 0.01  max_mem: 0M
[32m[11/15 00:29:05 d2.utils.events]: [0m eta: 2:08:14  iter: 1119  total_loss: 1.529  loss_cls: 0.243  loss_box_reg: 0.495  loss_mask: 0.2451  loss_rpn_cls: 0.167  loss_rpn_loc: 0.3969  time: 4.1733  data_time: 0.0338  lr: 0.01  max_mem: 0M
[32m[11/15 00:30:51 d2.utils.events]: [0m eta: 2:07:20  iter: 1139  total_loss: 1.456  loss_cls: 0.2272  loss_box_reg: 0.4852  loss_mask: 0.2276  loss_rpn_cls: 0.15  loss_rpn_loc: 0.3535  time: 4.1931  data_time: 0.0173  lr: 0.01  max_mem: 0M
[32m[11/15 00:32:27 d2.utils.events]: [0m eta: 2:06:27  iter: 1159  total_loss: 1.439  loss_cls: 0.2216  loss_box_reg: 0.4543  loss_mask: 0.2262  loss_rpn_cls: 0.1662  loss_rpn_loc: 0.3508  time: 4.2032  data_time: 0.0055  lr: 0.01  max_mem: 0M
[32m[11/15 00:34:08 d2.utils.events]: [0m eta: 2:05:47  iter: 1179  total_loss: 1.313  loss_cls: 0.1874  loss_box_reg: 0.3895  loss_mask: 0.2264  loss_rpn_cls: 0.128  loss_rpn_loc: 0.3784  time: 4.2176  data_time: 0.0219  lr: 0.01  max_mem: 0M
[32m[11/15 00:36:12 d2.utils.events]: [0m eta: 2:04:59  iter: 1199  total_loss: 1.321  loss_cls: 0.1678  loss_box_reg: 0.3848  loss_mask: 0.2138  loss_rpn_cls: 0.1445  loss_rpn_loc: 0.3884  time: 4.2508  data_time: 0.0326  lr: 0.01  max_mem: 0M
[32m[11/15 00:38:21 d2.utils.events]: [0m eta: 2:04:27  iter: 1219  total_loss: 1.342  loss_cls: 0.1729  loss_box_reg: 0.3942  loss_mask: 0.2184  loss_rpn_cls: 0.1527  loss_rpn_loc: 0.3811  time: 4.2867  data_time: 0.0218  lr: 0.01  max_mem: 0M
[32m[11/15 00:40:15 d2.utils.events]: [0m eta: 2:03:29  iter: 1239  total_loss: 1.406  loss_cls: 0.2121  loss_box_reg: 0.4171  loss_mask: 0.2203  loss_rpn_cls: 0.1404  loss_rpn_loc: 0.4118  time: 4.3093  data_time: 0.0212  lr: 0.01  max_mem: 0M
[32m[11/15 00:41:41 d2.utils.events]: [0m eta: 2:02:09  iter: 1259  total_loss: 1.357  loss_cls: 0.1812  loss_box_reg: 0.3819  loss_mask: 0.2267  loss_rpn_cls: 0.1421  loss_rpn_loc: 0.3821  time: 4.3092  data_time: 0.0060  lr: 0.01  max_mem: 0M
[32m[11/15 00:43:05 d2.utils.events]: [0m eta: 2:00:44  iter: 1279  total_loss: 1.424  loss_cls: 0.2184  loss_box_reg: 0.4351  loss_mask: 0.2213  loss_rpn_cls: 0.194  loss_rpn_loc: 0.3704  time: 4.3073  data_time: 0.0061  lr: 0.01  max_mem: 0M
[32m[11/15 00:44:34 d2.utils.events]: [0m eta: 1:59:21  iter: 1299  total_loss: 1.401  loss_cls: 0.2173  loss_box_reg: 0.4294  loss_mask: 0.2305  loss_rpn_cls: 0.1713  loss_rpn_loc: 0.3497  time: 4.3094  data_time: 0.0094  lr: 0.01  max_mem: 0M
[32m[11/15 00:46:08 d2.utils.events]: [0m eta: 1:57:52  iter: 1319  total_loss: 1.33  loss_cls: 0.2074  loss_box_reg: 0.417  loss_mask: 0.2142  loss_rpn_cls: 0.1506  loss_rpn_loc: 0.3674  time: 4.3150  data_time: 0.0083  lr: 0.01  max_mem: 0M
[32m[11/15 00:47:46 d2.utils.events]: [0m eta: 1:56:49  iter: 1339  total_loss: 1.337  loss_cls: 0.1948  loss_box_reg: 0.4271  loss_mask: 0.2047  loss_rpn_cls: 0.1371  loss_rpn_loc: 0.3453  time: 4.3242  data_time: 0.0118  lr: 0.01  max_mem: 0M
[32m[11/15 00:49:43 d2.utils.events]: [0m eta: 1:55:44  iter: 1359  total_loss: 1.303  loss_cls: 0.2144  loss_box_reg: 0.4232  loss_mask: 0.2292  loss_rpn_cls: 0.1377  loss_rpn_loc: 0.3534  time: 4.3461  data_time: 0.0394  lr: 0.01  max_mem: 0M
[32m[11/15 00:51:19 d2.utils.events]: [0m eta: 1:54:47  iter: 1379  total_loss: 1.323  loss_cls: 0.2031  loss_box_reg: 0.4262  loss_mask: 0.2036  loss_rpn_cls: 0.1355  loss_rpn_loc: 0.3711  time: 4.3528  data_time: 0.0048  lr: 0.01  max_mem: 0M
[32m[11/15 00:52:44 d2.utils.events]: [0m eta: 1:53:25  iter: 1399  total_loss: 1.346  loss_cls: 0.2041  loss_box_reg: 0.4417  loss_mask: 0.2081  loss_rpn_cls: 0.1439  loss_rpn_loc: 0.3371  time: 4.3514  data_time: 0.0101  lr: 0.01  max_mem: 0M
[32m[11/15 00:54:44 d2.utils.events]: [0m eta: 1:52:30  iter: 1419  total_loss: 1.373  loss_cls: 0.2299  loss_box_reg: 0.4325  loss_mask: 0.2052  loss_rpn_cls: 0.1334  loss_rpn_loc: 0.3534  time: 4.3744  data_time: 0.0261  lr: 0.01  max_mem: 0M
[32m[11/15 00:56:37 d2.utils.events]: [0m eta: 1:51:30  iter: 1439  total_loss: 1.349  loss_cls: 0.2237  loss_box_reg: 0.4555  loss_mask: 0.2091  loss_rpn_cls: 0.1227  loss_rpn_loc: 0.3118  time: 4.3921  data_time: 0.0217  lr: 0.01  max_mem: 0M
[32m[11/15 00:58:05 d2.utils.events]: [0m eta: 1:50:12  iter: 1459  total_loss: 1.297  loss_cls: 0.2066  loss_box_reg: 0.4254  loss_mask: 0.2183  loss_rpn_cls: 0.1283  loss_rpn_loc: 0.3429  time: 4.3918  data_time: 0.0075  lr: 0.01  max_mem: 0M
[32m[11/15 00:59:35 d2.utils.events]: [0m eta: 1:48:51  iter: 1479  total_loss: 1.333  loss_cls: 0.1896  loss_box_reg: 0.4246  loss_mask: 0.2116  loss_rpn_cls: 0.1743  loss_rpn_loc: 0.3524  time: 4.3932  data_time: 0.0087  lr: 0.01  max_mem: 0M
[32m[11/15 01:01:15 d2.utils.events]: [0m eta: 1:47:28  iter: 1499  total_loss: 1.345  loss_cls: 0.1777  loss_box_reg: 0.3764  loss_mask: 0.2046  loss_rpn_cls: 0.1751  loss_rpn_loc: 0.3646  time: 4.4016  data_time: 0.0130  lr: 0.01  max_mem: 0M
[32m[11/15 01:03:19 d2.utils.events]: [0m eta: 1:47:07  iter: 1519  total_loss: 1.266  loss_cls: 0.195  loss_box_reg: 0.4214  loss_mask: 0.2061  loss_rpn_cls: 0.1421  loss_rpn_loc: 0.3134  time: 4.4249  data_time: 0.0391  lr: 0.01  max_mem: 0M
[32m[11/15 01:05:24 d2.utils.events]: [0m eta: 1:46:32  iter: 1539  total_loss: 1.299  loss_cls: 0.1879  loss_box_reg: 0.4505  loss_mask: 0.208  loss_rpn_cls: 0.1254  loss_rpn_loc: 0.3196  time: 4.4485  data_time: 0.0299  lr: 0.01  max_mem: 0M
[32m[11/15 01:07:04 d2.utils.events]: [0m eta: 1:45:25  iter: 1559  total_loss: 1.253  loss_cls: 0.2131  loss_box_reg: 0.424  loss_mask: 0.2121  loss_rpn_cls: 0.1085  loss_rpn_loc: 0.2999  time: 4.4556  data_time: 0.0154  lr: 0.01  max_mem: 0M
[32m[11/15 01:08:27 d2.utils.events]: [0m eta: 1:44:06  iter: 1579  total_loss: 1.311  loss_cls: 0.1955  loss_box_reg: 0.4491  loss_mask: 0.2115  loss_rpn_cls: 0.1273  loss_rpn_loc: 0.3384  time: 4.4515  data_time: 0.0044  lr: 0.01  max_mem: 0M
[32m[11/15 01:09:52 d2.utils.events]: [0m eta: 1:42:57  iter: 1599  total_loss: 1.318  loss_cls: 0.1846  loss_box_reg: 0.4144  loss_mask: 0.211  loss_rpn_cls: 0.1453  loss_rpn_loc: 0.3506  time: 4.4489  data_time: 0.0077  lr: 0.01  max_mem: 0M
[32m[11/15 01:11:16 d2.utils.events]: [0m eta: 1:41:17  iter: 1619  total_loss: 1.333  loss_cls: 0.1995  loss_box_reg: 0.4056  loss_mask: 0.207  loss_rpn_cls: 0.1298  loss_rpn_loc: 0.3465  time: 4.4460  data_time: 0.0075  lr: 0.01  max_mem: 0M
[32m[11/15 01:12:42 d2.utils.events]: [0m eta: 1:39:49  iter: 1639  total_loss: 1.271  loss_cls: 0.1937  loss_box_reg: 0.4011  loss_mask: 0.2055  loss_rpn_cls: 0.1318  loss_rpn_loc: 0.3548  time: 4.4443  data_time: 0.0100  lr: 0.01  max_mem: 0M
[32m[11/15 01:14:07 d2.utils.events]: [0m eta: 1:38:17  iter: 1659  total_loss: 1.278  loss_cls: 0.1905  loss_box_reg: 0.3963  loss_mask: 0.2165  loss_rpn_cls: 0.1448  loss_rpn_loc: 0.3483  time: 4.4419  data_time: 0.0036  lr: 0.01  max_mem: 0M
[32m[11/15 01:15:34 d2.utils.events]: [0m eta: 1:37:11  iter: 1679  total_loss: 1.262  loss_cls: 0.1903  loss_box_reg: 0.4137  loss_mask: 0.1998  loss_rpn_cls: 0.1389  loss_rpn_loc: 0.3028  time: 4.4405  data_time: 0.0054  lr: 0.01  max_mem: 0M
[32m[11/15 01:16:57 d2.utils.events]: [0m eta: 1:35:48  iter: 1699  total_loss: 1.185  loss_cls: 0.1825  loss_box_reg: 0.3982  loss_mask: 0.1991  loss_rpn_cls: 0.1182  loss_rpn_loc: 0.306  time: 4.4372  data_time: 0.0065  lr: 0.01  max_mem: 0M
[32m[11/15 01:18:24 d2.utils.events]: [0m eta: 1:34:27  iter: 1719  total_loss: 1.246  loss_cls: 0.1763  loss_box_reg: 0.4116  loss_mask: 0.1986  loss_rpn_cls: 0.1133  loss_rpn_loc: 0.3327  time: 4.4362  data_time: 0.0067  lr: 0.01  max_mem: 0M
[32m[11/15 01:19:44 d2.utils.events]: [0m eta: 1:32:59  iter: 1739  total_loss: 1.239  loss_cls: 0.1819  loss_box_reg: 0.4116  loss_mask: 0.2009  loss_rpn_cls: 0.1357  loss_rpn_loc: 0.3055  time: 4.4312  data_time: 0.0054  lr: 0.01  max_mem: 0M
[32m[11/15 01:21:32 d2.utils.events]: [0m eta: 1:31:50  iter: 1759  total_loss: 1.251  loss_cls: 0.1772  loss_box_reg: 0.3927  loss_mask: 0.1918  loss_rpn_cls: 0.1208  loss_rpn_loc: 0.344  time: 4.4417  data_time: 0.0093  lr: 0.01  max_mem: 0M
[32m[11/15 01:23:41 d2.utils.events]: [0m eta: 1:30:57  iter: 1779  total_loss: 1.192  loss_cls: 0.1762  loss_box_reg: 0.3891  loss_mask: 0.202  loss_rpn_cls: 0.1242  loss_rpn_loc: 0.3227  time: 4.4643  data_time: 0.0409  lr: 0.01  max_mem: 0M
[32m[11/15 01:25:37 d2.utils.events]: [0m eta: 1:29:51  iter: 1799  total_loss: 1.192  loss_cls: 0.1832  loss_box_reg: 0.3907  loss_mask: 0.1961  loss_rpn_cls: 0.09173  loss_rpn_loc: 0.3182  time: 4.4789  data_time: 0.0282  lr: 0.01  max_mem: 0M
[32m[11/15 01:27:03 d2.utils.events]: [0m eta: 1:28:35  iter: 1819  total_loss: 1.291  loss_cls: 0.1908  loss_box_reg: 0.4186  loss_mask: 0.2127  loss_rpn_cls: 0.09485  loss_rpn_loc: 0.3761  time: 4.4773  data_time: 0.0085  lr: 0.01  max_mem: 0M
[32m[11/15 01:28:44 d2.utils.events]: [0m eta: 1:27:49  iter: 1839  total_loss: 1.275  loss_cls: 0.1924  loss_box_reg: 0.4083  loss_mask: 0.2204  loss_rpn_cls: 0.1377  loss_rpn_loc: 0.3253  time: 4.4832  data_time: 0.0130  lr: 0.01  max_mem: 0M
[32m[11/15 01:30:08 d2.utils.events]: [0m eta: 1:26:06  iter: 1859  total_loss: 1.261  loss_cls: 0.1899  loss_box_reg: 0.405  loss_mask: 0.2026  loss_rpn_cls: 0.09457  loss_rpn_loc: 0.3193  time: 4.4803  data_time: 0.0057  lr: 0.01  max_mem: 0M
[32m[11/15 01:31:38 d2.utils.events]: [0m eta: 1:24:47  iter: 1879  total_loss: 1.26  loss_cls: 0.1972  loss_box_reg: 0.4086  loss_mask: 0.208  loss_rpn_cls: 0.09717  loss_rpn_loc: 0.3082  time: 4.4802  data_time: 0.0066  lr: 0.01  max_mem: 0M
[32m[11/15 01:33:29 d2.utils.events]: [0m eta: 1:23:38  iter: 1899  total_loss: 1.213  loss_cls: 0.1746  loss_box_reg: 0.4445  loss_mask: 0.2049  loss_rpn_cls: 0.1163  loss_rpn_loc: 0.3091  time: 4.4914  data_time: 0.0149  lr: 0.01  max_mem: 0M
[32m[11/15 01:35:05 d2.utils.events]: [0m eta: 1:22:31  iter: 1919  total_loss: 1.199  loss_cls: 0.1923  loss_box_reg: 0.4379  loss_mask: 0.1961  loss_rpn_cls: 0.07894  loss_rpn_loc: 0.2932  time: 4.4946  data_time: 0.0113  lr: 0.01  max_mem: 0M
[32m[11/15 01:36:37 d2.utils.events]: [0m eta: 1:20:59  iter: 1939  total_loss: 1.188  loss_cls: 0.1813  loss_box_reg: 0.4115  loss_mask: 0.1937  loss_rpn_cls: 0.09844  loss_rpn_loc: 0.3082  time: 4.4956  data_time: 0.0039  lr: 0.01  max_mem: 0M
[32m[11/15 01:38:06 d2.utils.events]: [0m eta: 1:19:36  iter: 1959  total_loss: 1.289  loss_cls: 0.2148  loss_box_reg: 0.4066  loss_mask: 0.1978  loss_rpn_cls: 0.1068  loss_rpn_loc: 0.3343  time: 4.4954  data_time: 0.0038  lr: 0.01  max_mem: 0M
[32m[11/15 01:39:33 d2.utils.events]: [0m eta: 1:18:12  iter: 1979  total_loss: 1.206  loss_cls: 0.189  loss_box_reg: 0.4147  loss_mask: 0.1881  loss_rpn_cls: 0.135  loss_rpn_loc: 0.3014  time: 4.4940  data_time: 0.0154  lr: 0.01  max_mem: 0M
[32m[11/15 01:41:24 d2.utils.events]: [0m eta: 1:17:03  iter: 1999  total_loss: 1.278  loss_cls: 0.1851  loss_box_reg: 0.4151  loss_mask: 0.2089  loss_rpn_cls: 0.1523  loss_rpn_loc: 0.2964  time: 4.5042  data_time: 0.0189  lr: 0.01  max_mem: 0M
[32m[11/15 01:42:48 d2.utils.events]: [0m eta: 1:15:16  iter: 2019  total_loss: 1.251  loss_cls: 0.1956  loss_box_reg: 0.4157  loss_mask: 0.1928  loss_rpn_cls: 0.1138  loss_rpn_loc: 0.325  time: 4.5013  data_time: 0.0039  lr: 0.01  max_mem: 0M
[32m[11/15 01:44:20 d2.utils.events]: [0m eta: 1:13:50  iter: 2039  total_loss: 1.218  loss_cls: 0.1983  loss_box_reg: 0.4074  loss_mask: 0.1911  loss_rpn_cls: 0.1202  loss_rpn_loc: 0.295  time: 4.5023  data_time: 0.0116  lr: 0.01  max_mem: 0M
[32m[11/15 01:45:56 d2.utils.events]: [0m eta: 1:12:30  iter: 2059  total_loss: 1.176  loss_cls: 0.1852  loss_box_reg: 0.3935  loss_mask: 0.1883  loss_rpn_cls: 0.1141  loss_rpn_loc: 0.3276  time: 4.5048  data_time: 0.0041  lr: 0.01  max_mem: 0M
[32m[11/15 01:47:24 d2.utils.events]: [0m eta: 1:11:06  iter: 2079  total_loss: 1.209  loss_cls: 0.1823  loss_box_reg: 0.4007  loss_mask: 0.1836  loss_rpn_cls: 0.111  loss_rpn_loc: 0.3171  time: 4.5035  data_time: 0.0080  lr: 0.01  max_mem: 0M
[32m[11/15 01:49:05 d2.utils.events]: [0m eta: 1:09:44  iter: 2099  total_loss: 1.157  loss_cls: 0.1797  loss_box_reg: 0.3893  loss_mask: 0.1834  loss_rpn_cls: 0.1204  loss_rpn_loc: 0.289  time: 4.5090  data_time: 0.0187  lr: 0.01  max_mem: 0M
[32m[11/15 01:50:44 d2.utils.events]: [0m eta: 1:07:56  iter: 2119  total_loss: 1.17  loss_cls: 0.1729  loss_box_reg: 0.3988  loss_mask: 0.1862  loss_rpn_cls: 0.1057  loss_rpn_loc: 0.2844  time: 4.5131  data_time: 0.0121  lr: 0.01  max_mem: 0M
[32m[11/15 01:52:13 d2.utils.events]: [0m eta: 1:06:08  iter: 2139  total_loss: 1.18  loss_cls: 0.1917  loss_box_reg: 0.4024  loss_mask: 0.1886  loss_rpn_cls: 0.091  loss_rpn_loc: 0.302  time: 4.5123  data_time: 0.0068  lr: 0.01  max_mem: 0M
[32m[11/15 01:53:43 d2.utils.events]: [0m eta: 1:04:24  iter: 2159  total_loss: 1.185  loss_cls: 0.183  loss_box_reg: 0.4145  loss_mask: 0.1828  loss_rpn_cls: 0.08826  loss_rpn_loc: 0.2791  time: 4.5121  data_time: 0.0069  lr: 0.01  max_mem: 0M
[32m[11/15 01:55:28 d2.utils.events]: [0m eta: 1:03:04  iter: 2179  total_loss: 1.182  loss_cls: 0.1842  loss_box_reg: 0.3848  loss_mask: 0.19  loss_rpn_cls: 0.09277  loss_rpn_loc: 0.2799  time: 4.5189  data_time: 0.0139  lr: 0.01  max_mem: 0M
[32m[11/15 01:56:56 d2.utils.events]: [0m eta: 1:00:58  iter: 2199  total_loss: 1.21  loss_cls: 0.1735  loss_box_reg: 0.4142  loss_mask: 0.1885  loss_rpn_cls: 0.1005  loss_rpn_loc: 0.323  time: 4.5176  data_time: 0.0104  lr: 0.01  max_mem: 0M
[32m[11/15 01:58:26 d2.utils.events]: [0m eta: 0:59:16  iter: 2219  total_loss: 1.132  loss_cls: 0.162  loss_box_reg: 0.3709  loss_mask: 0.191  loss_rpn_cls: 0.108  loss_rpn_loc: 0.2932  time: 4.5176  data_time: 0.0095  lr: 0.01  max_mem: 0M
[32m[11/15 01:59:52 d2.utils.events]: [0m eta: 0:57:35  iter: 2239  total_loss: 1.138  loss_cls: 0.1751  loss_box_reg: 0.3739  loss_mask: 0.1857  loss_rpn_cls: 0.08865  loss_rpn_loc: 0.2876  time: 4.5156  data_time: 0.0079  lr: 0.01  max_mem: 0M
[32m[11/15 02:01:19 d2.utils.events]: [0m eta: 0:56:03  iter: 2259  total_loss: 1.153  loss_cls: 0.1838  loss_box_reg: 0.3688  loss_mask: 0.1883  loss_rpn_cls: 0.08107  loss_rpn_loc: 0.2933  time: 4.5141  data_time: 0.0080  lr: 0.01  max_mem: 0M
[32m[11/15 02:02:42 d2.utils.events]: [0m eta: 0:54:24  iter: 2279  total_loss: 1.148  loss_cls: 0.1897  loss_box_reg: 0.3842  loss_mask: 0.1918  loss_rpn_cls: 0.09712  loss_rpn_loc: 0.2939  time: 4.5110  data_time: 0.0062  lr: 0.01  max_mem: 0M
[32m[11/15 02:04:06 d2.utils.events]: [0m eta: 0:52:43  iter: 2299  total_loss: 1.192  loss_cls: 0.1803  loss_box_reg: 0.4021  loss_mask: 0.1944  loss_rpn_cls: 0.1008  loss_rpn_loc: 0.299  time: 4.5082  data_time: 0.0053  lr: 0.01  max_mem: 0M
[32m[11/15 02:06:16 d2.utils.events]: [0m eta: 0:51:29  iter: 2319  total_loss: 1.146  loss_cls: 0.18  loss_box_reg: 0.3783  loss_mask: 0.1907  loss_rpn_cls: 0.1132  loss_rpn_loc: 0.2716  time: 4.5252  data_time: 0.0296  lr: 0.01  max_mem: 0M
[32m[11/15 02:08:21 d2.utils.events]: [0m eta: 0:50:09  iter: 2339  total_loss: 1.147  loss_cls: 0.1764  loss_box_reg: 0.3982  loss_mask: 0.1863  loss_rpn_cls: 0.09361  loss_rpn_loc: 0.2729  time: 4.5400  data_time: 0.0347  lr: 0.01  max_mem: 0M
[32m[11/15 02:10:32 d2.utils.events]: [0m eta: 0:48:39  iter: 2359  total_loss: 1.106  loss_cls: 0.1751  loss_box_reg: 0.377  loss_mask: 0.1888  loss_rpn_cls: 0.0773  loss_rpn_loc: 0.2816  time: 4.5571  data_time: 0.0296  lr: 0.01  max_mem: 0M
[32m[11/15 02:12:14 d2.utils.events]: [0m eta: 0:47:08  iter: 2379  total_loss: 1.046  loss_cls: 0.1558  loss_box_reg: 0.3646  loss_mask: 0.1779  loss_rpn_cls: 0.09996  loss_rpn_loc: 0.2982  time: 4.5614  data_time: 0.0211  lr: 0.01  max_mem: 0M
[32m[11/15 02:13:41 d2.utils.events]: [0m eta: 0:45:41  iter: 2399  total_loss: 1.029  loss_cls: 0.1611  loss_box_reg: 0.371  loss_mask: 0.1815  loss_rpn_cls: 0.0811  loss_rpn_loc: 0.267  time: 4.5598  data_time: 0.0047  lr: 0.01  max_mem: 0M
[32m[11/15 02:15:16 d2.utils.events]: [0m eta: 0:43:57  iter: 2419  total_loss: 1.088  loss_cls: 0.1617  loss_box_reg: 0.3681  loss_mask: 0.179  loss_rpn_cls: 0.09567  loss_rpn_loc: 0.2725  time: 4.5612  data_time: 0.0074  lr: 0.01  max_mem: 0M
[32m[11/15 02:16:46 d2.utils.events]: [0m eta: 0:42:19  iter: 2439  total_loss: 1.059  loss_cls: 0.1567  loss_box_reg: 0.3604  loss_mask: 0.1792  loss_rpn_cls: 0.08689  loss_rpn_loc: 0.2736  time: 4.5606  data_time: 0.0064  lr: 0.01  max_mem: 0M
[32m[11/15 02:18:12 d2.utils.events]: [0m eta: 0:40:45  iter: 2459  total_loss: 1.127  loss_cls: 0.1753  loss_box_reg: 0.3841  loss_mask: 0.1852  loss_rpn_cls: 0.1069  loss_rpn_loc: 0.2655  time: 4.5584  data_time: 0.0062  lr: 0.01  max_mem: 0M
[32m[11/15 02:19:37 d2.utils.events]: [0m eta: 0:39:12  iter: 2479  total_loss: 1.071  loss_cls: 0.1606  loss_box_reg: 0.3555  loss_mask: 0.1673  loss_rpn_cls: 0.0854  loss_rpn_loc: 0.2903  time: 4.5560  data_time: 0.0189  lr: 0.01  max_mem: 0M
[32m[11/15 02:21:21 d2.utils.events]: [0m eta: 0:37:44  iter: 2499  total_loss: 1.168  loss_cls: 0.1858  loss_box_reg: 0.389  loss_mask: 0.1937  loss_rpn_cls: 0.1015  loss_rpn_loc: 0.2846  time: 4.5610  data_time: 0.0108  lr: 0.01  max_mem: 0M
[32m[11/15 02:23:31 d2.utils.events]: [0m eta: 0:36:13  iter: 2519  total_loss: 1.061  loss_cls: 0.1532  loss_box_reg: 0.3736  loss_mask: 0.1757  loss_rpn_cls: 0.08811  loss_rpn_loc: 0.2497  time: 4.5763  data_time: 0.0372  lr: 0.01  max_mem: 0M
[32m[11/15 02:25:36 d2.utils.events]: [0m eta: 0:34:43  iter: 2539  total_loss: 1.072  loss_cls: 0.1623  loss_box_reg: 0.3767  loss_mask: 0.175  loss_rpn_cls: 0.09576  loss_rpn_loc: 0.2697  time: 4.5894  data_time: 0.0274  lr: 0.01  max_mem: 0M
[32m[11/15 02:27:28 d2.utils.events]: [0m eta: 0:33:16  iter: 2559  total_loss: 1.062  loss_cls: 0.1848  loss_box_reg: 0.3667  loss_mask: 0.176  loss_rpn_cls: 0.09715  loss_rpn_loc: 0.2752  time: 4.5976  data_time: 0.0193  lr: 0.01  max_mem: 0M
[32m[11/15 02:28:57 d2.utils.events]: [0m eta: 0:31:47  iter: 2579  total_loss: 1.067  loss_cls: 0.1625  loss_box_reg: 0.3936  loss_mask: 0.185  loss_rpn_cls: 0.0896  loss_rpn_loc: 0.2769  time: 4.5962  data_time: 0.0076  lr: 0.01  max_mem: 0M
[32m[11/15 02:30:33 d2.utils.events]: [0m eta: 0:30:21  iter: 2599  total_loss: 1.113  loss_cls: 0.1759  loss_box_reg: 0.3671  loss_mask: 0.1797  loss_rpn_cls: 0.09094  loss_rpn_loc: 0.2765  time: 4.5976  data_time: 0.0117  lr: 0.01  max_mem: 0M
[32m[11/15 02:32:34 d2.utils.events]: [0m eta: 0:28:56  iter: 2619  total_loss: 1.063  loss_cls: 0.1466  loss_box_reg: 0.3686  loss_mask: 0.1804  loss_rpn_cls: 0.0963  loss_rpn_loc: 0.2605  time: 4.6087  data_time: 0.0281  lr: 0.01  max_mem: 0M
[32m[11/15 02:34:36 d2.utils.events]: [0m eta: 0:27:34  iter: 2639  total_loss: 1.091  loss_cls: 0.1768  loss_box_reg: 0.382  loss_mask: 0.1883  loss_rpn_cls: 0.0921  loss_rpn_loc: 0.2786  time: 4.6201  data_time: 0.0213  lr: 0.01  max_mem: 0M
[32m[11/15 02:36:18 d2.utils.events]: [0m eta: 0:26:10  iter: 2659  total_loss: 1.153  loss_cls: 0.1835  loss_box_reg: 0.4042  loss_mask: 0.1935  loss_rpn_cls: 0.08077  loss_rpn_loc: 0.2611  time: 4.6237  data_time: 0.0069  lr: 0.01  max_mem: 0M
[32m[11/15 02:37:53 d2.utils.events]: [0m eta: 0:24:39  iter: 2679  total_loss: 1.123  loss_cls: 0.1649  loss_box_reg: 0.3938  loss_mask: 0.1866  loss_rpn_cls: 0.08127  loss_rpn_loc: 0.2974  time: 4.6243  data_time: 0.0157  lr: 0.01  max_mem: 0M
[32m[11/15 02:39:30 d2.utils.events]: [0m eta: 0:23:11  iter: 2699  total_loss: 0.9728  loss_cls: 0.1521  loss_box_reg: 0.3411  loss_mask: 0.1719  loss_rpn_cls: 0.06552  loss_rpn_loc: 0.2663  time: 4.6260  data_time: 0.0093  lr: 0.01  max_mem: 0M
[32m[11/15 02:41:06 d2.utils.events]: [0m eta: 0:21:44  iter: 2719  total_loss: 1.053  loss_cls: 0.1646  loss_box_reg: 0.3571  loss_mask: 0.172  loss_rpn_cls: 0.09011  loss_rpn_loc: 0.2489  time: 4.6273  data_time: 0.0069  lr: 0.01  max_mem: 0M
[32m[11/15 02:42:35 d2.utils.events]: [0m eta: 0:20:15  iter: 2739  total_loss: 1.058  loss_cls: 0.1396  loss_box_reg: 0.3621  loss_mask: 0.1676  loss_rpn_cls: 0.09527  loss_rpn_loc: 0.2709  time: 4.6259  data_time: 0.0069  lr: 0.01  max_mem: 0M
[32m[11/15 02:44:32 d2.utils.events]: [0m eta: 0:18:50  iter: 2759  total_loss: 1.059  loss_cls: 0.1451  loss_box_reg: 0.3455  loss_mask: 0.1815  loss_rpn_cls: 0.09118  loss_rpn_loc: 0.2779  time: 4.6350  data_time: 0.0256  lr: 0.01  max_mem: 0M
[32m[11/15 02:46:14 d2.utils.events]: [0m eta: 0:17:10  iter: 2779  total_loss: 1.115  loss_cls: 0.1627  loss_box_reg: 0.3719  loss_mask: 0.1855  loss_rpn_cls: 0.08859  loss_rpn_loc: 0.2681  time: 4.6381  data_time: 0.0129  lr: 0.01  max_mem: 0M
[32m[11/15 02:47:57 d2.utils.events]: [0m eta: 0:15:32  iter: 2799  total_loss: 1.059  loss_cls: 0.1613  loss_box_reg: 0.3529  loss_mask: 0.1727  loss_rpn_cls: 0.09978  loss_rpn_loc: 0.2632  time: 4.6418  data_time: 0.0094  lr: 0.01  max_mem: 0M
[32m[11/15 02:50:00 d2.utils.events]: [0m eta: 0:14:07  iter: 2819  total_loss: 1.041  loss_cls: 0.1407  loss_box_reg: 0.3603  loss_mask: 0.1666  loss_rpn_cls: 0.07849  loss_rpn_loc: 0.2663  time: 4.6523  data_time: 0.0279  lr: 0.01  max_mem: 0M
[32m[11/15 02:51:35 d2.utils.events]: [0m eta: 0:12:32  iter: 2839  total_loss: 1.037  loss_cls: 0.1467  loss_box_reg: 0.3539  loss_mask: 0.1712  loss_rpn_cls: 0.08117  loss_rpn_loc: 0.2505  time: 4.6532  data_time: 0.0076  lr: 0.01  max_mem: 0M
[32m[11/15 02:53:03 d2.utils.events]: [0m eta: 0:10:59  iter: 2859  total_loss: 1.029  loss_cls: 0.137  loss_box_reg: 0.3467  loss_mask: 0.1842  loss_rpn_cls: 0.08528  loss_rpn_loc: 0.2641  time: 4.6511  data_time: 0.0095  lr: 0.01  max_mem: 0M
[32m[11/15 02:54:24 d2.utils.events]: [0m eta: 0:09:22  iter: 2879  total_loss: 1.042  loss_cls: 0.1715  loss_box_reg: 0.3493  loss_mask: 0.1718  loss_rpn_cls: 0.09192  loss_rpn_loc: 0.2354  time: 4.6471  data_time: 0.0055  lr: 0.01  max_mem: 0M
[32m[11/15 02:55:50 d2.utils.events]: [0m eta: 0:07:45  iter: 2899  total_loss: 1.049  loss_cls: 0.1637  loss_box_reg: 0.3604  loss_mask: 0.176  loss_rpn_cls: 0.07053  loss_rpn_loc: 0.264  time: 4.6447  data_time: 0.0088  lr: 0.01  max_mem: 0M
[32m[11/15 02:57:16 d2.utils.events]: [0m eta: 0:06:11  iter: 2919  total_loss: 1.095  loss_cls: 0.1574  loss_box_reg: 0.367  loss_mask: 0.1768  loss_rpn_cls: 0.08074  loss_rpn_loc: 0.2921  time: 4.6423  data_time: 0.0062  lr: 0.01  max_mem: 0M
[32m[11/15 02:58:37 d2.utils.events]: [0m eta: 0:04:38  iter: 2939  total_loss: 1.029  loss_cls: 0.1319  loss_box_reg: 0.3287  loss_mask: 0.1733  loss_rpn_cls: 0.07698  loss_rpn_loc: 0.282  time: 4.6381  data_time: 0.0055  lr: 0.01  max_mem: 0M
[32m[11/15 03:00:20 d2.utils.events]: [0m eta: 0:03:05  iter: 2959  total_loss: 1.005  loss_cls: 0.1416  loss_box_reg: 0.3419  loss_mask: 0.1602  loss_rpn_cls: 0.08368  loss_rpn_loc: 0.2369  time: 4.6416  data_time: 0.0084  lr: 0.01  max_mem: 0M
[32m[11/15 03:01:46 d2.utils.events]: [0m eta: 0:01:32  iter: 2979  total_loss: 0.9673  loss_cls: 0.1432  loss_box_reg: 0.3292  loss_mask: 0.1642  loss_rpn_cls: 0.08527  loss_rpn_loc: 0.2461  time: 4.6392  data_time: 0.0044  lr: 0.01  max_mem: 0M
[32m[11/15 03:03:14 d2.utils.events]: [0m eta: 0:00:00  iter: 2999  total_loss: 1.01  loss_cls: 0.154  loss_box_reg: 0.3571  loss_mask: 0.1681  loss_rpn_cls: 0.07885  loss_rpn_loc: 0.2538  time: 4.6374  data_time: 0.0051  lr: 0.01  max_mem: 0M
[32m[11/15 03:03:14 d2.engine.hooks]: [0mOverall training speed: 2998 iterations in 3:51:43 (4.6374 s / it)
[32m[11/15 03:03:14 d2.engine.hooks]: [0mTotal training time: 3:51:58 (0:00:15 on hooks)
[32m[11/15 03:03:15 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[32m[11/15 03:03:15 d2.data.common]: [0mSerializing 20 elements to byte tensors and concatenating them all ...
[32m[11/15 03:03:15 d2.data.common]: [0mSerialized dataset takes 0.46 MiB
[5m[31mWARNING[0m [32m[11/15 03:03:15 d2.engine.defaults]: [0mNo evaluator found. Use `DefaultTrainer.test(evaluators=)`, or implement its `build_evaluator` method.
[32m[11/15 03:03:15 d2.data.build]: [0mDistribution of instances among all 1 categories:
[36m|  category  | #instances   |
|:----------:|:-------------|
| satellite  | 445          |
|            |              |[0m
[32m[11/15 03:03:15 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[32m[11/15 03:03:15 d2.data.common]: [0mSerializing 6 elements to byte tensors and concatenating them all ...
[32m[11/15 03:03:15 d2.data.common]: [0mSerialized dataset takes 0.11 MiB
[5m[31mWARNING[0m [32m[11/15 03:03:15 d2.engine.defaults]: [0mNo evaluator found. Use `DefaultTrainer.test(evaluators=)`, or implement its `build_evaluator` method.
USING MODEL WEIGHT: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp21/model_0002999.pth
Dataset: satellite_Val
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S08_03_SE1_1000X03.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S08_03_SE1_1000X03.png
	num_instances: 109
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S06_01_SE1_500X67.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S06_01_SE1_500X67.png
	num_instances: 76
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S04_02_SE1_1000X50.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S04_02_SE1_1000X50.png
	num_instances: 48
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S03_03_SE1_1250X41.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S03_03_SE1_1250X41.png
	num_instances: 114
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S02_01_SE1_300X14.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S02_01_SE1_300X14.png
	num_instances: 98
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/HP743_2S_250x.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/HP743_2S_250x.png
	num_instances: 56
gt filename: S08_03_SE1_1000X03.png	 pred filename: S08_03_SE1_1000X03.png
gt filename: S06_01_SE1_500X67.png	 pred filename: S06_01_SE1_500X67.png
gt filename: S04_02_SE1_1000X50.png	 pred filename: S04_02_SE1_1000X50.png
gt filename: S03_03_SE1_1250X41.png	 pred filename: S03_03_SE1_1250X41.png
gt filename: S02_01_SE1_300X14.png	 pred filename: S02_01_SE1_300X14.png
gt filename: HP743_2S_250x.png	 pred filename: HP743_2S_250x.png
x:  [1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2]
y:  [0.51, 0.24, 0.56, 0.55, 0.48, 0.61, 0.64, 0.33, 0.6, 0.57, 0.48, 0.69]
Average Precision Score:  0.4920783076629976
Average Recall Score:     0.5517889875032732
Precision: 0.49909353716497623
Recall: 0.7126565451619674
---
Precision: 0.3684210526315789
Recall: 0.4393191268191268
---
Precision: 0.7928650783853846
Recall: 0.7331354868165735
---
Precision: 0.5191079295154185
Recall: 0.5022376132125732
---
Precision: 0.6301992310380986
Recall: 0.505856772111945
---
Precision: 0.629492600422833
Recall: 0.6686315789473685
---
USING MODEL WEIGHT: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp21/model_final.pth
Dataset: satellite_Val
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S08_03_SE1_1000X03.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S08_03_SE1_1000X03.png
	num_instances: 109
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S06_01_SE1_500X67.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S06_01_SE1_500X67.png
	num_instances: 76
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S04_02_SE1_1000X50.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S04_02_SE1_1000X50.png
	num_instances: 48
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S03_03_SE1_1250X41.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S03_03_SE1_1250X41.png
	num_instances: 114
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S02_01_SE1_300X14.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S02_01_SE1_300X14.png
	num_instances: 98
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/HP743_2S_250x.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/HP743_2S_250x.png
	num_instances: 56
gt filename: S08_03_SE1_1000X03.png	 pred filename: S08_03_SE1_1000X03.png
gt filename: S06_01_SE1_500X67.png	 pred filename: S06_01_SE1_500X67.png
gt filename: S04_02_SE1_1000X50.png	 pred filename: S04_02_SE1_1000X50.png
gt filename: S03_03_SE1_1250X41.png	 pred filename: S03_03_SE1_1250X41.png
gt filename: S02_01_SE1_300X14.png	 pred filename: S02_01_SE1_300X14.png
gt filename: HP743_2S_250x.png	 pred filename: HP743_2S_250x.png
x:  [1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2]
y:  [0.51, 0.24, 0.56, 0.55, 0.48, 0.61, 0.64, 0.33, 0.6, 0.57, 0.48, 0.69]
Average Precision Score:  0.4920783076629976
Average Recall Score:     0.5517889875032732
Precision: 0.49909353716497623
Recall: 0.7126565451619674
---
Precision: 0.3684210526315789
Recall: 0.4393191268191268
---
Precision: 0.7928650783853846
Recall: 0.7331354868165735
---
Precision: 0.5191079295154185
Recall: 0.5022376132125732
---
Precision: 0.6301992310380986
Recall: 0.505856772111945
---
Precision: 0.629492600422833
Recall: 0.6686315789473685
---
Ignoring Final Model
Deleting: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp21/model_0002999.pth
Current File Path
../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp21/model_0002999.pth
New File Path
../../../../../../../ocean/projects/dmr200021p/sprice/variance/CPU_NO_CONFIG/trial1/model0.pth
Deleting: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp21/model_final.pth
Current File Path
../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp21/model_final.pth
New File Path
../../../../../../../ocean/projects/dmr200021p/sprice/variance/CPU_NO_CONFIG/trial1/model0.pth
Deleting: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp21/results_checkpoint_0002999.pickle
../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp21/results_checkpoint_0002999.pickle
Deleting: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp21/results_checkpoint_final.pickle
../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp21/results_checkpoint_final.pickle
Removing: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp21/metrics.json
Removing: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp21/last_checkpoint
Registered Datasets: ['satellite_Train', 'satellite_Val']
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S02_02_SE1_300X18.png
	num_instances: 118
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/HP743_10S_500x.png
	num_instances: 32
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/HP743_11S_250x.png
	num_instances: 39
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S08_03_SE1_1000X03.png
	num_instances: 88
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S06_01_SE1_500X67.png
	num_instances: 54
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S04_02_SE1_1000X50.png
	num_instances: 45
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S03_03_SE1_1250X41.png
	num_instances: 111
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S02_01_SE1_300X14.png
	num_instances: 98
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/HP743_2S_250x.png
	num_instances: 49
Weights not found, weights will be downloaded from source: https://dl.fbaipublicfiles.com/detectron2/COCO-InstanceSegmentation/mask_rcnn_R_50_FPN_3x/137849600/model_final_f10217.pkl
[32m[11/15 03:04:03 d2.engine.defaults]: [0mModel:
GeneralizedRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): StandardROIHeads(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): FastRCNNConvFCHead(
      (flatten): Flatten(start_dim=1, end_dim=-1)
      (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      (fc_relu1): ReLU()
      (fc2): Linear(in_features=1024, out_features=1024, bias=True)
      (fc_relu2): ReLU()
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=1024, out_features=2, bias=True)
      (bbox_pred): Linear(in_features=1024, out_features=4, bias=True)
    )
    (mask_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(14, 14), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(14, 14), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (mask_head): MaskRCNNConvUpsampleHead(
      (mask_fcn1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn2): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn3): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn4): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
      (deconv_relu): ReLU()
      (predictor): Conv2d(256, 1, kernel_size=(1, 1), stride=(1, 1))
    )
  )
)
[32m[11/15 03:04:03 d2.data.build]: [0mRemoved 0 images with no usable annotations. 20 images left.
[32m[11/15 03:04:03 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[32m[11/15 03:04:03 d2.data.build]: [0mUsing training sampler TrainingSampler
[32m[11/15 03:04:03 d2.data.common]: [0mSerializing 20 elements to byte tensors and concatenating them all ...
[32m[11/15 03:04:03 d2.data.common]: [0mSerialized dataset takes 0.46 MiB
[5m[31mWARNING[0m [32m[11/15 03:04:03 d2.solver.build]: [0mSOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[32m[11/15 03:04:03 d2.checkpoint.c2_model_loading]: [0mRenaming Caffe2 weights ......
[32m[11/15 03:04:03 d2.checkpoint.c2_model_loading]: [0mFollowing weights matched with submodule backbone.bottom_up:
| Names in Model    | Names in Checkpoint      | Shapes                                          |
|:------------------|:-------------------------|:------------------------------------------------|
| res2.0.conv1.*    | res2_0_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,1,1)             |
| res2.0.conv2.*    | res2_0_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.0.conv3.*    | res2_0_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.0.shortcut.* | res2_0_branch1_{bn_*,w}  | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.1.conv1.*    | res2_1_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,256,1,1)            |
| res2.1.conv2.*    | res2_1_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.1.conv3.*    | res2_1_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.2.conv1.*    | res2_2_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,256,1,1)            |
| res2.2.conv2.*    | res2_2_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.2.conv3.*    | res2_2_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res3.0.conv1.*    | res3_0_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,256,1,1)       |
| res3.0.conv2.*    | res3_0_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.0.conv3.*    | res3_0_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.0.shortcut.* | res3_0_branch1_{bn_*,w}  | (512,) (512,) (512,) (512,) (512,256,1,1)       |
| res3.1.conv1.*    | res3_1_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.1.conv2.*    | res3_1_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.1.conv3.*    | res3_1_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.2.conv1.*    | res3_2_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.2.conv2.*    | res3_2_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.2.conv3.*    | res3_2_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.3.conv1.*    | res3_3_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.3.conv2.*    | res3_3_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.3.conv3.*    | res3_3_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res4.0.conv1.*    | res4_0_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,512,1,1)       |
| res4.0.conv2.*    | res4_0_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.0.conv3.*    | res4_0_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.0.shortcut.* | res4_0_branch1_{bn_*,w}  | (1024,) (1024,) (1024,) (1024,) (1024,512,1,1)  |
| res4.1.conv1.*    | res4_1_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.1.conv2.*    | res4_1_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.1.conv3.*    | res4_1_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.2.conv1.*    | res4_2_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.2.conv2.*    | res4_2_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.2.conv3.*    | res4_2_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.3.conv1.*    | res4_3_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.3.conv2.*    | res4_3_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.3.conv3.*    | res4_3_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.4.conv1.*    | res4_4_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.4.conv2.*    | res4_4_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.4.conv3.*    | res4_4_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.5.conv1.*    | res4_5_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.5.conv2.*    | res4_5_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.5.conv3.*    | res4_5_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res5.0.conv1.*    | res5_0_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,1024,1,1)      |
| res5.0.conv2.*    | res5_0_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.0.conv3.*    | res5_0_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| res5.0.shortcut.* | res5_0_branch1_{bn_*,w}  | (2048,) (2048,) (2048,) (2048,) (2048,1024,1,1) |
| res5.1.conv1.*    | res5_1_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,2048,1,1)      |
| res5.1.conv2.*    | res5_1_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.1.conv3.*    | res5_1_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| res5.2.conv1.*    | res5_2_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,2048,1,1)      |
| res5.2.conv2.*    | res5_2_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.2.conv3.*    | res5_2_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| stem.conv1.norm.* | res_conv1_bn_*           | (64,) (64,) (64,) (64,)                         |
| stem.conv1.weight | conv1_w                  | (64, 3, 7, 7)                                   |
[32m[11/15 03:04:03 d2.engine.train_loop]: [0mStarting training from iteration 0
[32m[11/15 03:05:26 d2.utils.events]: [0m eta: 3:23:05  iter: 19  total_loss: 3.107  loss_cls: 0.4423  loss_box_reg: 0.05124  loss_mask: 0.6705  loss_rpn_cls: 0.6789  loss_rpn_loc: 1.256  time: 4.0924  data_time: 0.0244  lr: 0.00019981  max_mem: 0M
[32m[11/15 03:07:02 d2.utils.events]: [0m eta: 3:22:12  iter: 39  total_loss: 2.412  loss_cls: 0.3252  loss_box_reg: 0.03056  loss_mask: 0.6037  loss_rpn_cls: 0.6025  loss_rpn_loc: 0.8248  time: 4.4543  data_time: 0.0201  lr: 0.00039961  max_mem: 0M
[32m[11/15 03:08:17 d2.utils.events]: [0m eta: 3:13:49  iter: 59  total_loss: 2.093  loss_cls: 0.2282  loss_box_reg: 0.07901  loss_mask: 0.5904  loss_rpn_cls: 0.5712  loss_rpn_loc: 0.6071  time: 4.2134  data_time: 0.0047  lr: 0.00059941  max_mem: 0M
[32m[11/15 03:09:35 d2.utils.events]: [0m eta: 3:10:58  iter: 79  total_loss: 2.018  loss_cls: 0.2192  loss_box_reg: 0.1543  loss_mask: 0.5668  loss_rpn_cls: 0.519  loss_rpn_loc: 0.5817  time: 4.1270  data_time: 0.0056  lr: 0.00079921  max_mem: 0M
[32m[11/15 03:10:59 d2.utils.events]: [0m eta: 3:09:28  iter: 99  total_loss: 2.058  loss_cls: 0.2435  loss_box_reg: 0.3233  loss_mask: 0.551  loss_rpn_cls: 0.4739  loss_rpn_loc: 0.51  time: 4.1433  data_time: 0.0064  lr: 0.00099901  max_mem: 0M
[32m[11/15 03:12:50 d2.utils.events]: [0m eta: 3:16:07  iter: 119  total_loss: 2.096  loss_cls: 0.2539  loss_box_reg: 0.3755  loss_mask: 0.5311  loss_rpn_cls: 0.3737  loss_rpn_loc: 0.5261  time: 4.3810  data_time: 0.0266  lr: 0.0011988  max_mem: 0M
[32m[11/15 03:14:25 d2.utils.events]: [0m eta: 3:16:57  iter: 139  total_loss: 2.038  loss_cls: 0.2695  loss_box_reg: 0.4154  loss_mask: 0.4821  loss_rpn_cls: 0.3257  loss_rpn_loc: 0.5248  time: 4.4347  data_time: 0.0171  lr: 0.0013986  max_mem: 0M
[32m[11/15 03:16:25 d2.utils.events]: [0m eta: 3:24:41  iter: 159  total_loss: 2.144  loss_cls: 0.3202  loss_box_reg: 0.4834  loss_mask: 0.4793  loss_rpn_cls: 0.3363  loss_rpn_loc: 0.5141  time: 4.6318  data_time: 0.0339  lr: 0.0015984  max_mem: 0M
[32m[11/15 03:18:23 d2.utils.events]: [0m eta: 3:29:05  iter: 179  total_loss: 1.877  loss_cls: 0.2596  loss_box_reg: 0.439  loss_mask: 0.4364  loss_rpn_cls: 0.3056  loss_rpn_loc: 0.4597  time: 4.7716  data_time: 0.0290  lr: 0.0017982  max_mem: 0M
[32m[11/15 03:20:04 d2.utils.events]: [0m eta: 3:28:08  iter: 199  total_loss: 1.866  loss_cls: 0.2607  loss_box_reg: 0.4586  loss_mask: 0.4156  loss_rpn_cls: 0.2578  loss_rpn_loc: 0.4808  time: 4.7987  data_time: 0.0199  lr: 0.001998  max_mem: 0M
[32m[11/15 03:21:36 d2.utils.events]: [0m eta: 3:26:07  iter: 219  total_loss: 1.836  loss_cls: 0.2633  loss_box_reg: 0.4857  loss_mask: 0.3851  loss_rpn_cls: 0.2298  loss_rpn_loc: 0.4253  time: 4.7780  data_time: 0.0060  lr: 0.0021978  max_mem: 0M
[32m[11/15 03:22:58 d2.utils.events]: [0m eta: 3:23:24  iter: 239  total_loss: 1.814  loss_cls: 0.2533  loss_box_reg: 0.488  loss_mask: 0.4081  loss_rpn_cls: 0.2422  loss_rpn_loc: 0.4348  time: 4.7239  data_time: 0.0125  lr: 0.0023976  max_mem: 0M
[32m[11/15 03:24:24 d2.utils.events]: [0m eta: 3:21:13  iter: 259  total_loss: 1.812  loss_cls: 0.2641  loss_box_reg: 0.441  loss_mask: 0.3821  loss_rpn_cls: 0.293  loss_rpn_loc: 0.4626  time: 4.6897  data_time: 0.0043  lr: 0.0025974  max_mem: 0M
[32m[11/15 03:26:26 d2.utils.events]: [0m eta: 3:22:07  iter: 279  total_loss: 1.848  loss_cls: 0.2729  loss_box_reg: 0.5063  loss_mask: 0.3491  loss_rpn_cls: 0.2553  loss_rpn_loc: 0.4284  time: 4.7898  data_time: 0.0303  lr: 0.0027972  max_mem: 0M
[32m[11/15 03:28:09 d2.utils.events]: [0m eta: 3:20:56  iter: 299  total_loss: 1.754  loss_cls: 0.2544  loss_box_reg: 0.4304  loss_mask: 0.346  loss_rpn_cls: 0.2391  loss_rpn_loc: 0.4412  time: 4.8139  data_time: 0.0120  lr: 0.002997  max_mem: 0M
[32m[11/15 03:29:34 d2.utils.events]: [0m eta: 3:18:42  iter: 319  total_loss: 1.826  loss_cls: 0.2695  loss_box_reg: 0.4417  loss_mask: 0.3497  loss_rpn_cls: 0.3177  loss_rpn_loc: 0.4356  time: 4.7775  data_time: 0.0081  lr: 0.0031968  max_mem: 0M
[32m[11/15 03:31:06 d2.utils.events]: [0m eta: 3:17:57  iter: 339  total_loss: 1.777  loss_cls: 0.3038  loss_box_reg: 0.4692  loss_mask: 0.327  loss_rpn_cls: 0.2462  loss_rpn_loc: 0.447  time: 4.7672  data_time: 0.0049  lr: 0.0033966  max_mem: 0M
[32m[11/15 03:32:34 d2.utils.events]: [0m eta: 3:17:08  iter: 359  total_loss: 1.76  loss_cls: 0.2806  loss_box_reg: 0.4824  loss_mask: 0.3128  loss_rpn_cls: 0.1944  loss_rpn_loc: 0.4759  time: 4.7489  data_time: 0.0062  lr: 0.0035964  max_mem: 0M
[32m[11/15 03:34:06 d2.utils.events]: [0m eta: 3:16:43  iter: 379  total_loss: 1.652  loss_cls: 0.2753  loss_box_reg: 0.4972  loss_mask: 0.3003  loss_rpn_cls: 0.2066  loss_rpn_loc: 0.4117  time: 4.7397  data_time: 0.0077  lr: 0.0037962  max_mem: 0M
[32m[11/15 03:36:15 d2.utils.events]: [0m eta: 3:17:47  iter: 399  total_loss: 1.698  loss_cls: 0.2837  loss_box_reg: 0.4743  loss_mask: 0.3006  loss_rpn_cls: 0.1785  loss_rpn_loc: 0.4351  time: 4.8261  data_time: 0.0406  lr: 0.003996  max_mem: 0M
[32m[11/15 03:37:52 d2.utils.events]: [0m eta: 3:16:24  iter: 419  total_loss: 1.635  loss_cls: 0.2385  loss_box_reg: 0.4234  loss_mask: 0.306  loss_rpn_cls: 0.1947  loss_rpn_loc: 0.4666  time: 4.8273  data_time: 0.0165  lr: 0.0041958  max_mem: 0M
[32m[11/15 03:39:24 d2.utils.events]: [0m eta: 3:14:32  iter: 439  total_loss: 1.707  loss_cls: 0.2345  loss_box_reg: 0.4645  loss_mask: 0.3118  loss_rpn_cls: 0.2123  loss_rpn_loc: 0.4506  time: 4.8169  data_time: 0.0144  lr: 0.0043956  max_mem: 0M
[32m[11/15 03:40:51 d2.utils.events]: [0m eta: 3:12:33  iter: 459  total_loss: 1.669  loss_cls: 0.2541  loss_box_reg: 0.5062  loss_mask: 0.2986  loss_rpn_cls: 0.2293  loss_rpn_loc: 0.4059  time: 4.7959  data_time: 0.0058  lr: 0.0045954  max_mem: 0M
[32m[11/15 03:42:17 d2.utils.events]: [0m eta: 3:10:32  iter: 479  total_loss: 1.681  loss_cls: 0.2555  loss_box_reg: 0.5363  loss_mask: 0.2786  loss_rpn_cls: 0.2145  loss_rpn_loc: 0.3813  time: 4.7748  data_time: 0.0067  lr: 0.0047952  max_mem: 0M
[32m[11/15 03:43:44 d2.utils.events]: [0m eta: 3:08:33  iter: 499  total_loss: 1.612  loss_cls: 0.2554  loss_box_reg: 0.4848  loss_mask: 0.2847  loss_rpn_cls: 0.1655  loss_rpn_loc: 0.4362  time: 4.7572  data_time: 0.0074  lr: 0.004995  max_mem: 0M
[32m[11/15 03:45:05 d2.utils.events]: [0m eta: 3:05:17  iter: 519  total_loss: 1.65  loss_cls: 0.2753  loss_box_reg: 0.4792  loss_mask: 0.2855  loss_rpn_cls: 0.2275  loss_rpn_loc: 0.421  time: 4.7308  data_time: 0.0031  lr: 0.0051948  max_mem: 0M
[32m[11/15 03:46:52 d2.utils.events]: [0m eta: 3:05:32  iter: 539  total_loss: 1.596  loss_cls: 0.2664  loss_box_reg: 0.4457  loss_mask: 0.2926  loss_rpn_cls: 0.2054  loss_rpn_loc: 0.4642  time: 4.7525  data_time: 0.0110  lr: 0.0053946  max_mem: 0M
[32m[11/15 03:48:29 d2.utils.events]: [0m eta: 3:04:29  iter: 559  total_loss: 1.644  loss_cls: 0.2404  loss_box_reg: 0.4666  loss_mask: 0.2749  loss_rpn_cls: 0.2083  loss_rpn_loc: 0.4066  time: 4.7562  data_time: 0.0125  lr: 0.0055944  max_mem: 0M
[32m[11/15 03:49:56 d2.utils.events]: [0m eta: 3:02:10  iter: 579  total_loss: 1.613  loss_cls: 0.2519  loss_box_reg: 0.4428  loss_mask: 0.2588  loss_rpn_cls: 0.205  loss_rpn_loc: 0.4195  time: 4.7418  data_time: 0.0080  lr: 0.0057942  max_mem: 0M
[32m[11/15 03:51:16 d2.utils.events]: [0m eta: 2:59:11  iter: 599  total_loss: 1.675  loss_cls: 0.2582  loss_box_reg: 0.4782  loss_mask: 0.2689  loss_rpn_cls: 0.2019  loss_rpn_loc: 0.4207  time: 4.7169  data_time: 0.0054  lr: 0.005994  max_mem: 0M
[32m[11/15 03:52:50 d2.utils.events]: [0m eta: 2:57:35  iter: 619  total_loss: 1.532  loss_cls: 0.2246  loss_box_reg: 0.4638  loss_mask: 0.2727  loss_rpn_cls: 0.1713  loss_rpn_loc: 0.3957  time: 4.7168  data_time: 0.0051  lr: 0.0061938  max_mem: 0M
[32m[11/15 03:54:28 d2.utils.events]: [0m eta: 2:56:40  iter: 639  total_loss: 1.603  loss_cls: 0.2549  loss_box_reg: 0.4994  loss_mask: 0.2715  loss_rpn_cls: 0.15  loss_rpn_loc: 0.3948  time: 4.7218  data_time: 0.0044  lr: 0.0063936  max_mem: 0M
[32m[11/15 03:55:46 d2.utils.events]: [0m eta: 2:54:09  iter: 659  total_loss: 1.43  loss_cls: 0.2029  loss_box_reg: 0.44  loss_mask: 0.2549  loss_rpn_cls: 0.1779  loss_rpn_loc: 0.3956  time: 4.6969  data_time: 0.0066  lr: 0.0065934  max_mem: 0M
[32m[11/15 03:57:02 d2.utils.events]: [0m eta: 2:52:03  iter: 679  total_loss: 1.506  loss_cls: 0.2396  loss_box_reg: 0.4532  loss_mask: 0.26  loss_rpn_cls: 0.1658  loss_rpn_loc: 0.3861  time: 4.6710  data_time: 0.0050  lr: 0.0067932  max_mem: 0M
[32m[11/15 03:58:28 d2.utils.events]: [0m eta: 2:50:17  iter: 699  total_loss: 1.535  loss_cls: 0.2312  loss_box_reg: 0.4902  loss_mask: 0.2616  loss_rpn_cls: 0.1931  loss_rpn_loc: 0.3574  time: 4.6608  data_time: 0.0036  lr: 0.006993  max_mem: 0M
[32m[11/15 03:59:56 d2.utils.events]: [0m eta: 2:48:11  iter: 719  total_loss: 1.616  loss_cls: 0.2767  loss_box_reg: 0.4984  loss_mask: 0.2582  loss_rpn_cls: 0.2091  loss_rpn_loc: 0.3968  time: 4.6524  data_time: 0.0043  lr: 0.0071928  max_mem: 0M
[32m[11/15 04:01:26 d2.utils.events]: [0m eta: 2:46:34  iter: 739  total_loss: 1.553  loss_cls: 0.2533  loss_box_reg: 0.47  loss_mask: 0.2453  loss_rpn_cls: 0.1969  loss_rpn_loc: 0.396  time: 4.6486  data_time: 0.0041  lr: 0.0073926  max_mem: 0M
[32m[11/15 04:02:54 d2.utils.events]: [0m eta: 2:44:56  iter: 759  total_loss: 1.382  loss_cls: 0.1845  loss_box_reg: 0.3799  loss_mask: 0.2513  loss_rpn_cls: 0.1635  loss_rpn_loc: 0.4086  time: 4.6417  data_time: 0.0041  lr: 0.0075924  max_mem: 0M
[32m[11/15 04:04:12 d2.utils.events]: [0m eta: 2:42:58  iter: 779  total_loss: 1.557  loss_cls: 0.213  loss_box_reg: 0.4049  loss_mask: 0.2629  loss_rpn_cls: 0.1752  loss_rpn_loc: 0.4453  time: 4.6233  data_time: 0.0045  lr: 0.0077922  max_mem: 0M
[32m[11/15 04:05:39 d2.utils.events]: [0m eta: 2:41:28  iter: 799  total_loss: 1.571  loss_cls: 0.2779  loss_box_reg: 0.4542  loss_mask: 0.2601  loss_rpn_cls: 0.1538  loss_rpn_loc: 0.4203  time: 4.6166  data_time: 0.0047  lr: 0.007992  max_mem: 0M
[32m[11/15 04:06:59 d2.utils.events]: [0m eta: 2:39:44  iter: 819  total_loss: 1.525  loss_cls: 0.2374  loss_box_reg: 0.4541  loss_mask: 0.2577  loss_rpn_cls: 0.1571  loss_rpn_loc: 0.4242  time: 4.6007  data_time: 0.0035  lr: 0.0081918  max_mem: 0M
[32m[11/15 04:08:14 d2.utils.events]: [0m eta: 2:37:31  iter: 839  total_loss: 1.489  loss_cls: 0.2196  loss_box_reg: 0.4158  loss_mask: 0.2477  loss_rpn_cls: 0.1711  loss_rpn_loc: 0.416  time: 4.5801  data_time: 0.0038  lr: 0.0083916  max_mem: 0M
[32m[11/15 04:09:38 d2.utils.events]: [0m eta: 2:35:46  iter: 859  total_loss: 1.524  loss_cls: 0.2515  loss_box_reg: 0.4782  loss_mask: 0.2441  loss_rpn_cls: 0.1625  loss_rpn_loc: 0.3797  time: 4.5711  data_time: 0.0040  lr: 0.0085914  max_mem: 0M
[32m[11/15 04:10:55 d2.utils.events]: [0m eta: 2:33:40  iter: 879  total_loss: 1.468  loss_cls: 0.2104  loss_box_reg: 0.4657  loss_mask: 0.2405  loss_rpn_cls: 0.1438  loss_rpn_loc: 0.3875  time: 4.5557  data_time: 0.0055  lr: 0.0087912  max_mem: 0M
[32m[11/15 04:12:15 d2.utils.events]: [0m eta: 2:31:52  iter: 899  total_loss: 1.441  loss_cls: 0.2185  loss_box_reg: 0.4158  loss_mask: 0.2327  loss_rpn_cls: 0.2101  loss_rpn_loc: 0.388  time: 4.5427  data_time: 0.0048  lr: 0.008991  max_mem: 0M
[32m[11/15 04:13:34 d2.utils.events]: [0m eta: 2:30:07  iter: 919  total_loss: 1.486  loss_cls: 0.2177  loss_box_reg: 0.475  loss_mask: 0.2585  loss_rpn_cls: 0.1679  loss_rpn_loc: 0.3975  time: 4.5296  data_time: 0.0045  lr: 0.0091908  max_mem: 0M
[32m[11/15 04:14:57 d2.utils.events]: [0m eta: 2:28:25  iter: 939  total_loss: 1.493  loss_cls: 0.2165  loss_box_reg: 0.4645  loss_mask: 0.2566  loss_rpn_cls: 0.1432  loss_rpn_loc: 0.3841  time: 4.5215  data_time: 0.0042  lr: 0.0093906  max_mem: 0M
[32m[11/15 04:16:25 d2.utils.events]: [0m eta: 2:26:59  iter: 959  total_loss: 1.447  loss_cls: 0.2106  loss_box_reg: 0.4573  loss_mask: 0.2486  loss_rpn_cls: 0.1483  loss_rpn_loc: 0.4029  time: 4.5188  data_time: 0.0042  lr: 0.0095904  max_mem: 0M
[32m[11/15 04:17:57 d2.utils.events]: [0m eta: 2:25:48  iter: 979  total_loss: 1.372  loss_cls: 0.1948  loss_box_reg: 0.4408  loss_mask: 0.2392  loss_rpn_cls: 0.1461  loss_rpn_loc: 0.3482  time: 4.5206  data_time: 0.0043  lr: 0.0097902  max_mem: 0M
[32m[11/15 04:19:21 d2.utils.events]: [0m eta: 2:24:22  iter: 999  total_loss: 1.555  loss_cls: 0.242  loss_box_reg: 0.4796  loss_mask: 0.242  loss_rpn_cls: 0.1684  loss_rpn_loc: 0.3526  time: 4.5138  data_time: 0.0044  lr: 0.00999  max_mem: 0M
[32m[11/15 04:20:45 d2.utils.events]: [0m eta: 2:22:47  iter: 1019  total_loss: 1.468  loss_cls: 0.2194  loss_box_reg: 0.4674  loss_mask: 0.2377  loss_rpn_cls: 0.1545  loss_rpn_loc: 0.3814  time: 4.5083  data_time: 0.0038  lr: 0.01  max_mem: 0M
[32m[11/15 04:22:08 d2.utils.events]: [0m eta: 2:21:20  iter: 1039  total_loss: 1.598  loss_cls: 0.2348  loss_box_reg: 0.4684  loss_mask: 0.2507  loss_rpn_cls: 0.213  loss_rpn_loc: 0.4174  time: 4.5007  data_time: 0.0049  lr: 0.01  max_mem: 0M
[32m[11/15 04:23:34 d2.utils.events]: [0m eta: 2:20:10  iter: 1059  total_loss: 1.462  loss_cls: 0.2383  loss_box_reg: 0.4678  loss_mask: 0.2347  loss_rpn_cls: 0.1376  loss_rpn_loc: 0.4131  time: 4.4969  data_time: 0.0044  lr: 0.01  max_mem: 0M
[32m[11/15 04:24:56 d2.utils.events]: [0m eta: 2:18:54  iter: 1079  total_loss: 1.432  loss_cls: 0.2294  loss_box_reg: 0.4541  loss_mask: 0.2358  loss_rpn_cls: 0.1536  loss_rpn_loc: 0.3828  time: 4.4899  data_time: 0.0037  lr: 0.01  max_mem: 0M
[32m[11/15 04:26:18 d2.utils.events]: [0m eta: 2:17:11  iter: 1099  total_loss: 1.462  loss_cls: 0.2255  loss_box_reg: 0.4665  loss_mask: 0.2356  loss_rpn_cls: 0.1415  loss_rpn_loc: 0.3679  time: 4.4826  data_time: 0.0044  lr: 0.01  max_mem: 0M
[32m[11/15 04:27:40 d2.utils.events]: [0m eta: 2:15:13  iter: 1119  total_loss: 1.362  loss_cls: 0.1877  loss_box_reg: 0.438  loss_mask: 0.2229  loss_rpn_cls: 0.1481  loss_rpn_loc: 0.3685  time: 4.4761  data_time: 0.0043  lr: 0.01  max_mem: 0M
[32m[11/15 04:29:01 d2.utils.events]: [0m eta: 2:13:32  iter: 1139  total_loss: 1.366  loss_cls: 0.1938  loss_box_reg: 0.4147  loss_mask: 0.2188  loss_rpn_cls: 0.1501  loss_rpn_loc: 0.3733  time: 4.4678  data_time: 0.0038  lr: 0.01  max_mem: 0M
[32m[11/15 04:30:31 d2.utils.events]: [0m eta: 2:11:50  iter: 1159  total_loss: 1.357  loss_cls: 0.2241  loss_box_reg: 0.4497  loss_mask: 0.2339  loss_rpn_cls: 0.1486  loss_rpn_loc: 0.347  time: 4.4688  data_time: 0.0046  lr: 0.01  max_mem: 0M
[32m[11/15 04:32:01 d2.utils.events]: [0m eta: 2:09:45  iter: 1179  total_loss: 1.371  loss_cls: 0.2078  loss_box_reg: 0.4446  loss_mask: 0.2323  loss_rpn_cls: 0.1377  loss_rpn_loc: 0.3499  time: 4.4691  data_time: 0.0037  lr: 0.01  max_mem: 0M
[32m[11/15 04:33:25 d2.utils.events]: [0m eta: 2:08:15  iter: 1199  total_loss: 1.31  loss_cls: 0.1669  loss_box_reg: 0.4121  loss_mask: 0.2167  loss_rpn_cls: 0.1528  loss_rpn_loc: 0.3574  time: 4.4647  data_time: 0.0038  lr: 0.01  max_mem: 0M
[32m[11/15 04:34:54 d2.utils.events]: [0m eta: 2:06:47  iter: 1219  total_loss: 1.42  loss_cls: 0.2213  loss_box_reg: 0.427  loss_mask: 0.2382  loss_rpn_cls: 0.1435  loss_rpn_loc: 0.371  time: 4.4641  data_time: 0.0043  lr: 0.01  max_mem: 0M
[32m[11/15 04:36:27 d2.utils.events]: [0m eta: 2:05:31  iter: 1239  total_loss: 1.396  loss_cls: 0.2012  loss_box_reg: 0.4496  loss_mask: 0.2382  loss_rpn_cls: 0.1377  loss_rpn_loc: 0.3716  time: 4.4676  data_time: 0.0043  lr: 0.01  max_mem: 0M
[32m[11/15 04:37:52 d2.utils.events]: [0m eta: 2:04:09  iter: 1259  total_loss: 1.399  loss_cls: 0.2121  loss_box_reg: 0.418  loss_mask: 0.2326  loss_rpn_cls: 0.1273  loss_rpn_loc: 0.3895  time: 4.4642  data_time: 0.0035  lr: 0.01  max_mem: 0M
[32m[11/15 04:39:25 d2.utils.events]: [0m eta: 2:02:34  iter: 1279  total_loss: 1.331  loss_cls: 0.2043  loss_box_reg: 0.4274  loss_mask: 0.2214  loss_rpn_cls: 0.1252  loss_rpn_loc: 0.3425  time: 4.4664  data_time: 0.0034  lr: 0.01  max_mem: 0M
[32m[11/15 04:40:53 d2.utils.events]: [0m eta: 2:01:07  iter: 1299  total_loss: 1.388  loss_cls: 0.2046  loss_box_reg: 0.4603  loss_mask: 0.2329  loss_rpn_cls: 0.1279  loss_rpn_loc: 0.3363  time: 4.4660  data_time: 0.0046  lr: 0.01  max_mem: 0M
[32m[11/15 04:42:22 d2.utils.events]: [0m eta: 1:59:44  iter: 1319  total_loss: 1.374  loss_cls: 0.208  loss_box_reg: 0.4368  loss_mask: 0.2093  loss_rpn_cls: 0.1283  loss_rpn_loc: 0.3618  time: 4.4654  data_time: 0.0047  lr: 0.01  max_mem: 0M
[32m[11/15 04:43:54 d2.utils.events]: [0m eta: 1:58:18  iter: 1339  total_loss: 1.428  loss_cls: 0.2325  loss_box_reg: 0.4476  loss_mask: 0.2312  loss_rpn_cls: 0.1748  loss_rpn_loc: 0.3353  time: 4.4675  data_time: 0.0038  lr: 0.01  max_mem: 0M
[32m[11/15 04:45:26 d2.utils.events]: [0m eta: 1:56:53  iter: 1359  total_loss: 1.389  loss_cls: 0.218  loss_box_reg: 0.4301  loss_mask: 0.2164  loss_rpn_cls: 0.1432  loss_rpn_loc: 0.3594  time: 4.4696  data_time: 0.0039  lr: 0.01  max_mem: 0M
[32m[11/15 04:46:58 d2.utils.events]: [0m eta: 1:55:28  iter: 1379  total_loss: 1.35  loss_cls: 0.1981  loss_box_reg: 0.4196  loss_mask: 0.2149  loss_rpn_cls: 0.1369  loss_rpn_loc: 0.3466  time: 4.4713  data_time: 0.0036  lr: 0.01  max_mem: 0M
[32m[11/15 04:48:34 d2.utils.events]: [0m eta: 1:54:01  iter: 1399  total_loss: 1.3  loss_cls: 0.2116  loss_box_reg: 0.4362  loss_mask: 0.2128  loss_rpn_cls: 0.1323  loss_rpn_loc: 0.3364  time: 4.4759  data_time: 0.0038  lr: 0.01  max_mem: 0M
[32m[11/15 04:50:25 d2.utils.events]: [0m eta: 1:52:37  iter: 1419  total_loss: 1.293  loss_cls: 0.1999  loss_box_reg: 0.4151  loss_mask: 0.1984  loss_rpn_cls: 0.1169  loss_rpn_loc: 0.333  time: 4.4910  data_time: 0.0046  lr: 0.01  max_mem: 0M
[32m[11/15 04:52:15 d2.utils.events]: [0m eta: 1:51:42  iter: 1439  total_loss: 1.305  loss_cls: 0.2007  loss_box_reg: 0.4351  loss_mask: 0.209  loss_rpn_cls: 0.1136  loss_rpn_loc: 0.3489  time: 4.5051  data_time: 0.0046  lr: 0.01  max_mem: 0M
[32m[11/15 04:53:58 d2.utils.events]: [0m eta: 1:50:27  iter: 1459  total_loss: 1.267  loss_cls: 0.1919  loss_box_reg: 0.4293  loss_mask: 0.2031  loss_rpn_cls: 0.1198  loss_rpn_loc: 0.3202  time: 4.5139  data_time: 0.0051  lr: 0.01  max_mem: 0M
[32m[11/15 04:55:26 d2.utils.events]: [0m eta: 1:49:08  iter: 1479  total_loss: 1.27  loss_cls: 0.2141  loss_box_reg: 0.4204  loss_mask: 0.2133  loss_rpn_cls: 0.09528  loss_rpn_loc: 0.335  time: 4.5119  data_time: 0.0035  lr: 0.01  max_mem: 0M
[32m[11/15 04:56:58 d2.utils.events]: [0m eta: 1:47:47  iter: 1499  total_loss: 1.35  loss_cls: 0.2217  loss_box_reg: 0.453  loss_mask: 0.2238  loss_rpn_cls: 0.1185  loss_rpn_loc: 0.327  time: 4.5135  data_time: 0.0040  lr: 0.01  max_mem: 0M
[32m[11/15 04:58:23 d2.utils.events]: [0m eta: 1:46:24  iter: 1519  total_loss: 1.362  loss_cls: 0.197  loss_box_reg: 0.4507  loss_mask: 0.2122  loss_rpn_cls: 0.133  loss_rpn_loc: 0.3557  time: 4.5102  data_time: 0.0042  lr: 0.01  max_mem: 0M
[32m[11/15 04:59:55 d2.utils.events]: [0m eta: 1:44:55  iter: 1539  total_loss: 1.367  loss_cls: 0.1993  loss_box_reg: 0.4137  loss_mask: 0.2245  loss_rpn_cls: 0.1302  loss_rpn_loc: 0.3927  time: 4.5113  data_time: 0.0035  lr: 0.01  max_mem: 0M
[32m[11/15 05:01:25 d2.utils.events]: [0m eta: 1:43:21  iter: 1559  total_loss: 1.22  loss_cls: 0.1426  loss_box_reg: 0.3823  loss_mask: 0.2141  loss_rpn_cls: 0.1286  loss_rpn_loc: 0.362  time: 4.5110  data_time: 0.0040  lr: 0.01  max_mem: 0M
[32m[11/15 05:02:57 d2.utils.events]: [0m eta: 1:42:03  iter: 1579  total_loss: 1.266  loss_cls: 0.212  loss_box_reg: 0.398  loss_mask: 0.1996  loss_rpn_cls: 0.1095  loss_rpn_loc: 0.3486  time: 4.5117  data_time: 0.0033  lr: 0.01  max_mem: 0M
[32m[11/15 05:04:22 d2.utils.events]: [0m eta: 1:40:40  iter: 1599  total_loss: 1.243  loss_cls: 0.175  loss_box_reg: 0.4177  loss_mask: 0.2002  loss_rpn_cls: 0.1187  loss_rpn_loc: 0.344  time: 4.5089  data_time: 0.0040  lr: 0.01  max_mem: 0M
[32m[11/15 05:05:54 d2.utils.events]: [0m eta: 1:39:14  iter: 1619  total_loss: 1.236  loss_cls: 0.1856  loss_box_reg: 0.4182  loss_mask: 0.1951  loss_rpn_cls: 0.126  loss_rpn_loc: 0.3152  time: 4.5097  data_time: 0.0046  lr: 0.01  max_mem: 0M
[32m[11/15 05:07:30 d2.utils.events]: [0m eta: 1:37:48  iter: 1639  total_loss: 1.243  loss_cls: 0.1858  loss_box_reg: 0.3968  loss_mask: 0.1982  loss_rpn_cls: 0.1061  loss_rpn_loc: 0.3144  time: 4.5133  data_time: 0.0063  lr: 0.01  max_mem: 0M
[32m[11/15 05:09:07 d2.utils.events]: [0m eta: 1:36:45  iter: 1659  total_loss: 1.28  loss_cls: 0.2187  loss_box_reg: 0.4427  loss_mask: 0.2024  loss_rpn_cls: 0.12  loss_rpn_loc: 0.3022  time: 4.5172  data_time: 0.0062  lr: 0.01  max_mem: 0M
[32m[11/15 05:10:44 d2.utils.events]: [0m eta: 1:35:42  iter: 1679  total_loss: 1.137  loss_cls: 0.1501  loss_box_reg: 0.3855  loss_mask: 0.2108  loss_rpn_cls: 0.1135  loss_rpn_loc: 0.3322  time: 4.5213  data_time: 0.0055  lr: 0.01  max_mem: 0M
[32m[11/15 05:12:00 d2.utils.events]: [0m eta: 1:34:04  iter: 1699  total_loss: 1.169  loss_cls: 0.1434  loss_box_reg: 0.3325  loss_mask: 0.2151  loss_rpn_cls: 0.1338  loss_rpn_loc: 0.3344  time: 4.5127  data_time: 0.0066  lr: 0.01  max_mem: 0M
[32m[11/15 05:13:21 d2.utils.events]: [0m eta: 1:32:32  iter: 1719  total_loss: 1.241  loss_cls: 0.2006  loss_box_reg: 0.4227  loss_mask: 0.208  loss_rpn_cls: 0.1407  loss_rpn_loc: 0.3039  time: 4.5070  data_time: 0.0066  lr: 0.01  max_mem: 0M
[32m[11/15 05:14:43 d2.utils.events]: [0m eta: 1:30:51  iter: 1739  total_loss: 1.302  loss_cls: 0.2078  loss_box_reg: 0.436  loss_mask: 0.2106  loss_rpn_cls: 0.1206  loss_rpn_loc: 0.3082  time: 4.5025  data_time: 0.0058  lr: 0.01  max_mem: 0M
[32m[11/15 05:16:18 d2.utils.events]: [0m eta: 1:29:33  iter: 1759  total_loss: 1.202  loss_cls: 0.1976  loss_box_reg: 0.4257  loss_mask: 0.1991  loss_rpn_cls: 0.09953  loss_rpn_loc: 0.2903  time: 4.5051  data_time: 0.0073  lr: 0.01  max_mem: 0M
[32m[11/15 05:18:00 d2.utils.events]: [0m eta: 1:28:42  iter: 1779  total_loss: 1.305  loss_cls: 0.1918  loss_box_reg: 0.4166  loss_mask: 0.214  loss_rpn_cls: 0.1554  loss_rpn_loc: 0.3384  time: 4.5120  data_time: 0.0064  lr: 0.01  max_mem: 0M
[32m[11/15 05:19:40 d2.utils.events]: [0m eta: 1:27:36  iter: 1799  total_loss: 1.23  loss_cls: 0.1945  loss_box_reg: 0.4163  loss_mask: 0.199  loss_rpn_cls: 0.1112  loss_rpn_loc: 0.3147  time: 4.5173  data_time: 0.0078  lr: 0.01  max_mem: 0M
[32m[11/15 05:21:16 d2.utils.events]: [0m eta: 1:26:24  iter: 1819  total_loss: 1.222  loss_cls: 0.1938  loss_box_reg: 0.4154  loss_mask: 0.1982  loss_rpn_cls: 0.113  loss_rpn_loc: 0.3251  time: 4.5205  data_time: 0.0048  lr: 0.01  max_mem: 0M
[32m[11/15 05:22:51 d2.utils.events]: [0m eta: 1:25:14  iter: 1839  total_loss: 1.255  loss_cls: 0.171  loss_box_reg: 0.3821  loss_mask: 0.2001  loss_rpn_cls: 0.1321  loss_rpn_loc: 0.311  time: 4.5230  data_time: 0.0069  lr: 0.01  max_mem: 0M
[32m[11/15 05:24:23 d2.utils.events]: [0m eta: 1:23:59  iter: 1859  total_loss: 1.182  loss_cls: 0.1809  loss_box_reg: 0.3837  loss_mask: 0.1935  loss_rpn_cls: 0.1224  loss_rpn_loc: 0.3163  time: 4.5236  data_time: 0.0065  lr: 0.01  max_mem: 0M
[32m[11/15 05:25:57 d2.utils.events]: [0m eta: 1:22:39  iter: 1879  total_loss: 1.212  loss_cls: 0.1841  loss_box_reg: 0.4036  loss_mask: 0.2032  loss_rpn_cls: 0.12  loss_rpn_loc: 0.3046  time: 4.5256  data_time: 0.0052  lr: 0.01  max_mem: 0M
[32m[11/15 05:27:29 d2.utils.events]: [0m eta: 1:21:25  iter: 1899  total_loss: 1.267  loss_cls: 0.197  loss_box_reg: 0.4214  loss_mask: 0.2081  loss_rpn_cls: 0.08951  loss_rpn_loc: 0.3343  time: 4.5263  data_time: 0.0056  lr: 0.01  max_mem: 0M
[32m[11/15 05:29:03 d2.utils.events]: [0m eta: 1:20:31  iter: 1919  total_loss: 1.255  loss_cls: 0.1972  loss_box_reg: 0.4302  loss_mask: 0.2065  loss_rpn_cls: 0.09418  loss_rpn_loc: 0.3138  time: 4.5280  data_time: 0.0044  lr: 0.01  max_mem: 0M
[32m[11/15 05:30:37 d2.utils.events]: [0m eta: 1:19:10  iter: 1939  total_loss: 1.217  loss_cls: 0.2005  loss_box_reg: 0.4134  loss_mask: 0.1961  loss_rpn_cls: 0.1083  loss_rpn_loc: 0.3011  time: 4.5296  data_time: 0.0064  lr: 0.01  max_mem: 0M
[32m[11/15 05:32:14 d2.utils.events]: [0m eta: 1:17:47  iter: 1959  total_loss: 1.227  loss_cls: 0.1892  loss_box_reg: 0.3995  loss_mask: 0.1871  loss_rpn_cls: 0.1086  loss_rpn_loc: 0.2877  time: 4.5329  data_time: 0.0065  lr: 0.01  max_mem: 0M
[32m[11/15 05:33:50 d2.utils.events]: [0m eta: 1:16:30  iter: 1979  total_loss: 1.154  loss_cls: 0.1877  loss_box_reg: 0.3873  loss_mask: 0.1797  loss_rpn_cls: 0.09826  loss_rpn_loc: 0.2858  time: 4.5358  data_time: 0.0076  lr: 0.01  max_mem: 0M
[32m[11/15 05:35:22 d2.utils.events]: [0m eta: 1:15:02  iter: 1999  total_loss: 1.15  loss_cls: 0.1732  loss_box_reg: 0.3903  loss_mask: 0.1899  loss_rpn_cls: 0.1166  loss_rpn_loc: 0.2903  time: 4.5364  data_time: 0.0069  lr: 0.01  max_mem: 0M
[32m[11/15 05:37:00 d2.utils.events]: [0m eta: 1:13:47  iter: 2019  total_loss: 1.188  loss_cls: 0.1808  loss_box_reg: 0.3954  loss_mask: 0.1969  loss_rpn_cls: 0.1042  loss_rpn_loc: 0.316  time: 4.5400  data_time: 0.0048  lr: 0.01  max_mem: 0M
[32m[11/15 05:38:30 d2.utils.events]: [0m eta: 1:12:29  iter: 2039  total_loss: 1.197  loss_cls: 0.1811  loss_box_reg: 0.376  loss_mask: 0.1841  loss_rpn_cls: 0.09825  loss_rpn_loc: 0.3077  time: 4.5396  data_time: 0.0073  lr: 0.01  max_mem: 0M
[32m[11/15 05:40:00 d2.utils.events]: [0m eta: 1:11:04  iter: 2059  total_loss: 1.26  loss_cls: 0.1853  loss_box_reg: 0.3968  loss_mask: 0.1986  loss_rpn_cls: 0.1284  loss_rpn_loc: 0.3128  time: 4.5389  data_time: 0.0068  lr: 0.01  max_mem: 0M
[32m[11/15 05:41:28 d2.utils.events]: [0m eta: 1:09:36  iter: 2079  total_loss: 1.235  loss_cls: 0.195  loss_box_reg: 0.3919  loss_mask: 0.1954  loss_rpn_cls: 0.1496  loss_rpn_loc: 0.3262  time: 4.5375  data_time: 0.0062  lr: 0.01  max_mem: 0M
[32m[11/15 05:42:59 d2.utils.events]: [0m eta: 1:08:15  iter: 2099  total_loss: 1.209  loss_cls: 0.1921  loss_box_reg: 0.3855  loss_mask: 0.1957  loss_rpn_cls: 0.1169  loss_rpn_loc: 0.2946  time: 4.5378  data_time: 0.0046  lr: 0.01  max_mem: 0M
[32m[11/15 05:44:24 d2.utils.events]: [0m eta: 1:06:49  iter: 2119  total_loss: 1.184  loss_cls: 0.168  loss_box_reg: 0.3889  loss_mask: 0.1919  loss_rpn_cls: 0.1044  loss_rpn_loc: 0.2838  time: 4.5352  data_time: 0.0048  lr: 0.01  max_mem: 0M
[32m[11/15 05:45:51 d2.utils.events]: [0m eta: 1:05:20  iter: 2139  total_loss: 1.259  loss_cls: 0.1916  loss_box_reg: 0.372  loss_mask: 0.1975  loss_rpn_cls: 0.11  loss_rpn_loc: 0.3628  time: 4.5332  data_time: 0.0084  lr: 0.01  max_mem: 0M
[32m[11/15 05:47:23 d2.utils.events]: [0m eta: 1:03:54  iter: 2159  total_loss: 1.206  loss_cls: 0.1765  loss_box_reg: 0.4235  loss_mask: 0.2073  loss_rpn_cls: 0.1178  loss_rpn_loc: 0.3415  time: 4.5340  data_time: 0.0047  lr: 0.01  max_mem: 0M
[32m[11/15 05:48:56 d2.utils.events]: [0m eta: 1:02:23  iter: 2179  total_loss: 1.125  loss_cls: 0.1719  loss_box_reg: 0.394  loss_mask: 0.1905  loss_rpn_cls: 0.09619  loss_rpn_loc: 0.3028  time: 4.5346  data_time: 0.0048  lr: 0.01  max_mem: 0M
[32m[11/15 05:50:30 d2.utils.events]: [0m eta: 1:01:07  iter: 2199  total_loss: 1.22  loss_cls: 0.1926  loss_box_reg: 0.4021  loss_mask: 0.1978  loss_rpn_cls: 0.08481  loss_rpn_loc: 0.3076  time: 4.5365  data_time: 0.0058  lr: 0.01  max_mem: 0M
[32m[11/15 05:52:05 d2.utils.events]: [0m eta: 0:59:39  iter: 2219  total_loss: 1.155  loss_cls: 0.1703  loss_box_reg: 0.3839  loss_mask: 0.1841  loss_rpn_cls: 0.09093  loss_rpn_loc: 0.2831  time: 4.5380  data_time: 0.0068  lr: 0.01  max_mem: 0M
[32m[11/15 05:53:35 d2.utils.events]: [0m eta: 0:58:04  iter: 2239  total_loss: 1.157  loss_cls: 0.1789  loss_box_reg: 0.3919  loss_mask: 0.1996  loss_rpn_cls: 0.0954  loss_rpn_loc: 0.2681  time: 4.5377  data_time: 0.0051  lr: 0.01  max_mem: 0M
[32m[11/15 05:55:14 d2.utils.events]: [0m eta: 0:56:36  iter: 2259  total_loss: 1.172  loss_cls: 0.1731  loss_box_reg: 0.4077  loss_mask: 0.1853  loss_rpn_cls: 0.0748  loss_rpn_loc: 0.3193  time: 4.5414  data_time: 0.0057  lr: 0.01  max_mem: 0M
[32m[11/15 05:56:51 d2.utils.events]: [0m eta: 0:55:05  iter: 2279  total_loss: 1.123  loss_cls: 0.163  loss_box_reg: 0.3624  loss_mask: 0.1765  loss_rpn_cls: 0.1153  loss_rpn_loc: 0.326  time: 4.5443  data_time: 0.0057  lr: 0.01  max_mem: 0M
[32m[11/15 05:58:23 d2.utils.events]: [0m eta: 0:53:33  iter: 2299  total_loss: 1.164  loss_cls: 0.1779  loss_box_reg: 0.4017  loss_mask: 0.1854  loss_rpn_cls: 0.1158  loss_rpn_loc: 0.2953  time: 4.5446  data_time: 0.0051  lr: 0.01  max_mem: 0M
[32m[11/15 05:59:56 d2.utils.events]: [0m eta: 0:52:04  iter: 2319  total_loss: 1.152  loss_cls: 0.151  loss_box_reg: 0.3774  loss_mask: 0.1871  loss_rpn_cls: 0.1142  loss_rpn_loc: 0.2893  time: 4.5453  data_time: 0.0039  lr: 0.01  max_mem: 0M
[32m[11/15 06:01:22 d2.utils.events]: [0m eta: 0:50:29  iter: 2339  total_loss: 1.114  loss_cls: 0.1664  loss_box_reg: 0.3829  loss_mask: 0.1897  loss_rpn_cls: 0.07564  loss_rpn_loc: 0.2736  time: 4.5432  data_time: 0.0031  lr: 0.01  max_mem: 0M
[32m[11/15 06:02:58 d2.utils.events]: [0m eta: 0:48:59  iter: 2359  total_loss: 1.096  loss_cls: 0.1618  loss_box_reg: 0.3844  loss_mask: 0.1872  loss_rpn_cls: 0.08583  loss_rpn_loc: 0.2714  time: 4.5454  data_time: 0.0045  lr: 0.01  max_mem: 0M
[32m[11/15 06:04:30 d2.utils.events]: [0m eta: 0:47:28  iter: 2379  total_loss: 1.137  loss_cls: 0.1736  loss_box_reg: 0.3725  loss_mask: 0.1874  loss_rpn_cls: 0.08518  loss_rpn_loc: 0.2611  time: 4.5460  data_time: 0.0033  lr: 0.01  max_mem: 0M
[32m[11/15 06:06:09 d2.utils.events]: [0m eta: 0:45:58  iter: 2399  total_loss: 1.127  loss_cls: 0.1627  loss_box_reg: 0.4032  loss_mask: 0.1927  loss_rpn_cls: 0.1034  loss_rpn_loc: 0.2748  time: 4.5493  data_time: 0.0048  lr: 0.01  max_mem: 0M
[32m[11/15 06:07:40 d2.utils.events]: [0m eta: 0:44:21  iter: 2419  total_loss: 1.133  loss_cls: 0.1771  loss_box_reg: 0.3828  loss_mask: 0.1887  loss_rpn_cls: 0.0961  loss_rpn_loc: 0.2828  time: 4.5494  data_time: 0.0030  lr: 0.01  max_mem: 0M
[32m[11/15 06:09:19 d2.utils.events]: [0m eta: 0:42:47  iter: 2439  total_loss: 1.155  loss_cls: 0.1869  loss_box_reg: 0.379  loss_mask: 0.1829  loss_rpn_cls: 0.1179  loss_rpn_loc: 0.2766  time: 4.5527  data_time: 0.0032  lr: 0.01  max_mem: 0M
[32m[11/15 06:11:04 d2.utils.events]: [0m eta: 0:41:17  iter: 2459  total_loss: 1.068  loss_cls: 0.1643  loss_box_reg: 0.3709  loss_mask: 0.1848  loss_rpn_cls: 0.09039  loss_rpn_loc: 0.2711  time: 4.5583  data_time: 0.0048  lr: 0.01  max_mem: 0M
[32m[11/15 06:13:04 d2.utils.events]: [0m eta: 0:39:54  iter: 2479  total_loss: 1.039  loss_cls: 0.1616  loss_box_reg: 0.3617  loss_mask: 0.1769  loss_rpn_cls: 0.08665  loss_rpn_loc: 0.2924  time: 4.5700  data_time: 0.0060  lr: 0.01  max_mem: 0M
[32m[11/15 06:14:43 d2.utils.events]: [0m eta: 0:38:24  iter: 2499  total_loss: 1.106  loss_cls: 0.1679  loss_box_reg: 0.3799  loss_mask: 0.184  loss_rpn_cls: 0.08742  loss_rpn_loc: 0.2694  time: 4.5727  data_time: 0.0068  lr: 0.01  max_mem: 0M
[32m[11/15 06:16:15 d2.utils.events]: [0m eta: 0:36:54  iter: 2519  total_loss: 1.108  loss_cls: 0.1612  loss_box_reg: 0.3729  loss_mask: 0.1788  loss_rpn_cls: 0.07533  loss_rpn_loc: 0.2742  time: 4.5729  data_time: 0.0072  lr: 0.01  max_mem: 0M
[32m[11/15 06:17:45 d2.utils.events]: [0m eta: 0:35:22  iter: 2539  total_loss: 1.118  loss_cls: 0.1689  loss_box_reg: 0.3693  loss_mask: 0.1817  loss_rpn_cls: 0.0905  loss_rpn_loc: 0.2706  time: 4.5726  data_time: 0.0046  lr: 0.01  max_mem: 0M
[32m[11/15 06:19:14 d2.utils.events]: [0m eta: 0:33:49  iter: 2559  total_loss: 1.083  loss_cls: 0.1516  loss_box_reg: 0.383  loss_mask: 0.1749  loss_rpn_cls: 0.08603  loss_rpn_loc: 0.2726  time: 4.5714  data_time: 0.0076  lr: 0.01  max_mem: 0M
[32m[11/15 06:20:41 d2.utils.events]: [0m eta: 0:32:15  iter: 2579  total_loss: 1.103  loss_cls: 0.166  loss_box_reg: 0.3565  loss_mask: 0.1677  loss_rpn_cls: 0.1046  loss_rpn_loc: 0.2733  time: 4.5696  data_time: 0.0041  lr: 0.01  max_mem: 0M
[32m[11/15 06:22:14 d2.utils.events]: [0m eta: 0:30:45  iter: 2599  total_loss: 1.091  loss_cls: 0.1623  loss_box_reg: 0.3729  loss_mask: 0.175  loss_rpn_cls: 0.1199  loss_rpn_loc: 0.2667  time: 4.5701  data_time: 0.0058  lr: 0.01  max_mem: 0M
[32m[11/15 06:23:47 d2.utils.events]: [0m eta: 0:29:14  iter: 2619  total_loss: 1.098  loss_cls: 0.1418  loss_box_reg: 0.3548  loss_mask: 0.1779  loss_rpn_cls: 0.113  loss_rpn_loc: 0.2899  time: 4.5709  data_time: 0.0062  lr: 0.01  max_mem: 0M
[32m[11/15 06:25:18 d2.utils.events]: [0m eta: 0:27:41  iter: 2639  total_loss: 1.083  loss_cls: 0.1783  loss_box_reg: 0.3648  loss_mask: 0.1732  loss_rpn_cls: 0.07801  loss_rpn_loc: 0.2621  time: 4.5707  data_time: 0.0062  lr: 0.01  max_mem: 0M
[32m[11/15 06:26:53 d2.utils.events]: [0m eta: 0:26:08  iter: 2659  total_loss: 1.072  loss_cls: 0.1629  loss_box_reg: 0.3843  loss_mask: 0.1795  loss_rpn_cls: 0.07835  loss_rpn_loc: 0.2601  time: 4.5721  data_time: 0.0066  lr: 0.01  max_mem: 0M
[32m[11/15 06:28:25 d2.utils.events]: [0m eta: 0:24:32  iter: 2679  total_loss: 1.071  loss_cls: 0.1619  loss_box_reg: 0.3462  loss_mask: 0.1735  loss_rpn_cls: 0.1034  loss_rpn_loc: 0.2789  time: 4.5724  data_time: 0.0078  lr: 0.01  max_mem: 0M
[32m[11/15 06:29:50 d2.utils.events]: [0m eta: 0:23:03  iter: 2699  total_loss: 1.077  loss_cls: 0.1528  loss_box_reg: 0.3742  loss_mask: 0.1789  loss_rpn_cls: 0.1016  loss_rpn_loc: 0.2714  time: 4.5698  data_time: 0.0051  lr: 0.01  max_mem: 0M
[32m[11/15 06:31:15 d2.utils.events]: [0m eta: 0:21:31  iter: 2719  total_loss: 1.122  loss_cls: 0.1513  loss_box_reg: 0.3699  loss_mask: 0.1698  loss_rpn_cls: 0.1124  loss_rpn_loc: 0.2757  time: 4.5675  data_time: 0.0054  lr: 0.01  max_mem: 0M
[32m[11/15 06:32:31 d2.utils.events]: [0m eta: 0:19:58  iter: 2739  total_loss: 1.09  loss_cls: 0.1739  loss_box_reg: 0.3674  loss_mask: 0.1749  loss_rpn_cls: 0.08557  loss_rpn_loc: 0.2727  time: 4.5617  data_time: 0.0053  lr: 0.01  max_mem: 0M
[32m[11/15 06:33:49 d2.utils.events]: [0m eta: 0:18:21  iter: 2759  total_loss: 1.013  loss_cls: 0.1356  loss_box_reg: 0.3502  loss_mask: 0.1655  loss_rpn_cls: 0.09891  loss_rpn_loc: 0.2674  time: 4.5571  data_time: 0.0074  lr: 0.01  max_mem: 0M
[32m[11/15 06:35:22 d2.utils.events]: [0m eta: 0:16:48  iter: 2779  total_loss: 0.9837  loss_cls: 0.1517  loss_box_reg: 0.3423  loss_mask: 0.1606  loss_rpn_cls: 0.08085  loss_rpn_loc: 0.2467  time: 4.5575  data_time: 0.0064  lr: 0.01  max_mem: 0M
[32m[11/15 06:36:59 d2.utils.events]: [0m eta: 0:15:14  iter: 2799  total_loss: 0.9666  loss_cls: 0.1472  loss_box_reg: 0.3327  loss_mask: 0.1627  loss_rpn_cls: 0.08205  loss_rpn_loc: 0.2471  time: 4.5599  data_time: 0.0168  lr: 0.01  max_mem: 0M
[32m[11/15 06:38:43 d2.utils.events]: [0m eta: 0:13:42  iter: 2819  total_loss: 1  loss_cls: 0.1363  loss_box_reg: 0.3426  loss_mask: 0.1709  loss_rpn_cls: 0.09784  loss_rpn_loc: 0.2625  time: 4.5643  data_time: 0.0074  lr: 0.01  max_mem: 0M
[32m[11/15 06:40:20 d2.utils.events]: [0m eta: 0:12:11  iter: 2839  total_loss: 1.075  loss_cls: 0.146  loss_box_reg: 0.3537  loss_mask: 0.1653  loss_rpn_cls: 0.08975  loss_rpn_loc: 0.2682  time: 4.5661  data_time: 0.0063  lr: 0.01  max_mem: 0M
[32m[11/15 06:41:54 d2.utils.events]: [0m eta: 0:10:39  iter: 2859  total_loss: 1.049  loss_cls: 0.1529  loss_box_reg: 0.343  loss_mask: 0.1689  loss_rpn_cls: 0.1078  loss_rpn_loc: 0.2688  time: 4.5670  data_time: 0.0047  lr: 0.01  max_mem: 0M
[32m[11/15 06:43:30 d2.utils.events]: [0m eta: 0:09:08  iter: 2879  total_loss: 1.042  loss_cls: 0.1553  loss_box_reg: 0.3444  loss_mask: 0.1699  loss_rpn_cls: 0.06742  loss_rpn_loc: 0.2624  time: 4.5686  data_time: 0.0046  lr: 0.01  max_mem: 0M
[32m[11/15 06:45:07 d2.utils.events]: [0m eta: 0:07:37  iter: 2899  total_loss: 1.074  loss_cls: 0.1554  loss_box_reg: 0.362  loss_mask: 0.1932  loss_rpn_cls: 0.07951  loss_rpn_loc: 0.2489  time: 4.5705  data_time: 0.0039  lr: 0.01  max_mem: 0M
[32m[11/15 06:46:35 d2.utils.events]: [0m eta: 0:06:05  iter: 2919  total_loss: 1.036  loss_cls: 0.1614  loss_box_reg: 0.3589  loss_mask: 0.1782  loss_rpn_cls: 0.08621  loss_rpn_loc: 0.2533  time: 4.5696  data_time: 0.0077  lr: 0.01  max_mem: 0M
[32m[11/15 06:48:07 d2.utils.events]: [0m eta: 0:04:33  iter: 2939  total_loss: 1.022  loss_cls: 0.1479  loss_box_reg: 0.3486  loss_mask: 0.1676  loss_rpn_cls: 0.1002  loss_rpn_loc: 0.2605  time: 4.5698  data_time: 0.0061  lr: 0.01  max_mem: 0M
[32m[11/15 06:49:52 d2.utils.events]: [0m eta: 0:03:02  iter: 2959  total_loss: 1.005  loss_cls: 0.1495  loss_box_reg: 0.3646  loss_mask: 0.1731  loss_rpn_cls: 0.08221  loss_rpn_loc: 0.2541  time: 4.5741  data_time: 0.0045  lr: 0.01  max_mem: 0M
[32m[11/15 06:51:27 d2.utils.events]: [0m eta: 0:01:31  iter: 2979  total_loss: 0.9879  loss_cls: 0.1463  loss_box_reg: 0.3694  loss_mask: 0.172  loss_rpn_cls: 0.08486  loss_rpn_loc: 0.2473  time: 4.5754  data_time: 0.0079  lr: 0.01  max_mem: 0M
[32m[11/15 06:53:01 d2.utils.events]: [0m eta: 0:00:00  iter: 2999  total_loss: 1.03  loss_cls: 0.1664  loss_box_reg: 0.3587  loss_mask: 0.1738  loss_rpn_cls: 0.0757  loss_rpn_loc: 0.2561  time: 4.5760  data_time: 0.0062  lr: 0.01  max_mem: 0M
[32m[11/15 06:53:01 d2.engine.hooks]: [0mOverall training speed: 2998 iterations in 3:48:39 (4.5761 s / it)
[32m[11/15 06:53:01 d2.engine.hooks]: [0mTotal training time: 3:48:48 (0:00:09 on hooks)
[32m[11/15 06:53:02 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[32m[11/15 06:53:02 d2.data.common]: [0mSerializing 20 elements to byte tensors and concatenating them all ...
[32m[11/15 06:53:02 d2.data.common]: [0mSerialized dataset takes 0.46 MiB
[5m[31mWARNING[0m [32m[11/15 06:53:02 d2.engine.defaults]: [0mNo evaluator found. Use `DefaultTrainer.test(evaluators=)`, or implement its `build_evaluator` method.
[32m[11/15 06:53:02 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[32m[11/15 06:53:02 d2.data.common]: [0mSerializing 6 elements to byte tensors and concatenating them all ...
[32m[11/15 06:53:02 d2.data.common]: [0mSerialized dataset takes 0.11 MiB
[5m[31mWARNING[0m [32m[11/15 06:53:02 d2.engine.defaults]: [0mNo evaluator found. Use `DefaultTrainer.test(evaluators=)`, or implement its `build_evaluator` method.
USING MODEL WEIGHT: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp21/model_0002999.pth
Dataset: satellite_Val
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S08_03_SE1_1000X03.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S08_03_SE1_1000X03.png
	num_instances: 84
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S06_01_SE1_500X67.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S06_01_SE1_500X67.png
	num_instances: 57
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S04_02_SE1_1000X50.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S04_02_SE1_1000X50.png
	num_instances: 41
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S03_03_SE1_1250X41.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S03_03_SE1_1250X41.png
	num_instances: 102
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S02_01_SE1_300X14.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S02_01_SE1_300X14.png
	num_instances: 78
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/HP743_2S_250x.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/HP743_2S_250x.png
	num_instances: 57
gt filename: S08_03_SE1_1000X03.png	 pred filename: S08_03_SE1_1000X03.png
gt filename: S06_01_SE1_500X67.png	 pred filename: S06_01_SE1_500X67.png
gt filename: S04_02_SE1_1000X50.png	 pred filename: S04_02_SE1_1000X50.png
gt filename: S03_03_SE1_1250X41.png	 pred filename: S03_03_SE1_1250X41.png
gt filename: S02_01_SE1_300X14.png	 pred filename: S02_01_SE1_300X14.png
gt filename: HP743_2S_250x.png	 pred filename: HP743_2S_250x.png
x:  [1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2]
y:  [0.57, 0.4, 0.61, 0.51, 0.46, 0.44, 0.55, 0.43, 0.56, 0.47, 0.37, 0.51]
Average Precision Score:  0.4991053858757551
Average Recall Score:     0.47882591930210977
Precision: 0.8105449235262471
Recall: 0.6972561983471074
---
Precision: 0.5974791067269489
Recall: 0.4798635563380282
---
Precision: 0.7296631979411435
Recall: 0.6388752816694425
---
Precision: 0.6046406338426712
Recall: 0.5818221423514677
---
Precision: 0.8044204851752021
Recall: 0.6414753675522311
---
Precision: 0.3114974318451205
Recall: 0.32776253429782987
---
USING MODEL WEIGHT: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp21/model_final.pth
Dataset: satellite_Val
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S08_03_SE1_1000X03.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S08_03_SE1_1000X03.png
	num_instances: 84
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S06_01_SE1_500X67.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S06_01_SE1_500X67.png
	num_instances: 57
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S04_02_SE1_1000X50.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S04_02_SE1_1000X50.png
	num_instances: 41
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S03_03_SE1_1250X41.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S03_03_SE1_1250X41.png
	num_instances: 102
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S02_01_SE1_300X14.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S02_01_SE1_300X14.png
	num_instances: 78
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/HP743_2S_250x.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/HP743_2S_250x.png
	num_instances: 57
gt filename: S08_03_SE1_1000X03.png	 pred filename: S08_03_SE1_1000X03.png
gt filename: S06_01_SE1_500X67.png	 pred filename: S06_01_SE1_500X67.png
gt filename: S04_02_SE1_1000X50.png	 pred filename: S04_02_SE1_1000X50.png
gt filename: S03_03_SE1_1250X41.png	 pred filename: S03_03_SE1_1250X41.png
gt filename: S02_01_SE1_300X14.png	 pred filename: S02_01_SE1_300X14.png
gt filename: HP743_2S_250x.png	 pred filename: HP743_2S_250x.png
x:  [1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2]
y:  [0.57, 0.4, 0.61, 0.51, 0.46, 0.44, 0.55, 0.43, 0.56, 0.47, 0.37, 0.51]
Average Precision Score:  0.4991053858757551
Average Recall Score:     0.47882591930210977
Precision: 0.8105449235262471
Recall: 0.6972561983471074
---
Precision: 0.5974791067269489
Recall: 0.4798635563380282
---
Precision: 0.7296631979411435
Recall: 0.6388752816694425
---
Precision: 0.6046406338426712
Recall: 0.5818221423514677
---
Precision: 0.8044204851752021
Recall: 0.6414753675522311
---
Precision: 0.3114974318451205
Recall: 0.32776253429782987
---
Ignoring Final Model
Deleting: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp21/model_0002999.pth
Current File Path
../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp21/model_0002999.pth
New File Path
../../../../../../../ocean/projects/dmr200021p/sprice/variance/CPU_NO_CONFIG/trial1/model1.pth
Deleting: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp21/model_final.pth
Current File Path
../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp21/model_final.pth
New File Path
../../../../../../../ocean/projects/dmr200021p/sprice/variance/CPU_NO_CONFIG/trial1/model1.pth
Deleting: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp21/results_checkpoint_0002999.pickle
../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp21/results_checkpoint_0002999.pickle
Deleting: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp21/results_checkpoint_final.pickle
../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp21/results_checkpoint_final.pickle
Removing: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp21/metrics.json
Removing: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp21/last_checkpoint
Registered Datasets: ['satellite_Train', 'satellite_Val']
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S06_02_SE1_500X71.png
	num_instances: 104
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/HP743_11S_250x.png
	num_instances: 39
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/HP743_5S_500x.png
	num_instances: 65
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S08_03_SE1_1000X03.png
	num_instances: 88
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S06_01_SE1_500X67.png
	num_instances: 54
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S04_02_SE1_1000X50.png
	num_instances: 45
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S03_03_SE1_1250X41.png
	num_instances: 111
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S02_01_SE1_300X14.png
	num_instances: 98
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/HP743_2S_250x.png
	num_instances: 49
Weights not found, weights will be downloaded from source: https://dl.fbaipublicfiles.com/detectron2/COCO-InstanceSegmentation/mask_rcnn_R_50_FPN_3x/137849600/model_final_f10217.pkl
[32m[11/15 06:53:42 d2.engine.defaults]: [0mModel:
GeneralizedRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): StandardROIHeads(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): FastRCNNConvFCHead(
      (flatten): Flatten(start_dim=1, end_dim=-1)
      (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      (fc_relu1): ReLU()
      (fc2): Linear(in_features=1024, out_features=1024, bias=True)
      (fc_relu2): ReLU()
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=1024, out_features=2, bias=True)
      (bbox_pred): Linear(in_features=1024, out_features=4, bias=True)
    )
    (mask_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(14, 14), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(14, 14), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (mask_head): MaskRCNNConvUpsampleHead(
      (mask_fcn1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn2): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn3): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn4): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
      (deconv_relu): ReLU()
      (predictor): Conv2d(256, 1, kernel_size=(1, 1), stride=(1, 1))
    )
  )
)
[32m[11/15 06:53:42 d2.data.build]: [0mRemoved 0 images with no usable annotations. 20 images left.
[32m[11/15 06:53:42 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[32m[11/15 06:53:42 d2.data.build]: [0mUsing training sampler TrainingSampler
[32m[11/15 06:53:42 d2.data.common]: [0mSerializing 20 elements to byte tensors and concatenating them all ...
[32m[11/15 06:53:42 d2.data.common]: [0mSerialized dataset takes 0.46 MiB
[5m[31mWARNING[0m [32m[11/15 06:53:42 d2.solver.build]: [0mSOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[32m[11/15 06:53:42 d2.checkpoint.c2_model_loading]: [0mRenaming Caffe2 weights ......
[32m[11/15 06:53:42 d2.checkpoint.c2_model_loading]: [0mFollowing weights matched with submodule backbone.bottom_up:
| Names in Model    | Names in Checkpoint      | Shapes                                          |
|:------------------|:-------------------------|:------------------------------------------------|
| res2.0.conv1.*    | res2_0_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,1,1)             |
| res2.0.conv2.*    | res2_0_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.0.conv3.*    | res2_0_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.0.shortcut.* | res2_0_branch1_{bn_*,w}  | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.1.conv1.*    | res2_1_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,256,1,1)            |
| res2.1.conv2.*    | res2_1_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.1.conv3.*    | res2_1_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.2.conv1.*    | res2_2_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,256,1,1)            |
| res2.2.conv2.*    | res2_2_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.2.conv3.*    | res2_2_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res3.0.conv1.*    | res3_0_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,256,1,1)       |
| res3.0.conv2.*    | res3_0_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.0.conv3.*    | res3_0_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.0.shortcut.* | res3_0_branch1_{bn_*,w}  | (512,) (512,) (512,) (512,) (512,256,1,1)       |
| res3.1.conv1.*    | res3_1_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.1.conv2.*    | res3_1_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.1.conv3.*    | res3_1_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.2.conv1.*    | res3_2_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.2.conv2.*    | res3_2_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.2.conv3.*    | res3_2_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.3.conv1.*    | res3_3_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.3.conv2.*    | res3_3_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.3.conv3.*    | res3_3_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res4.0.conv1.*    | res4_0_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,512,1,1)       |
| res4.0.conv2.*    | res4_0_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.0.conv3.*    | res4_0_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.0.shortcut.* | res4_0_branch1_{bn_*,w}  | (1024,) (1024,) (1024,) (1024,) (1024,512,1,1)  |
| res4.1.conv1.*    | res4_1_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.1.conv2.*    | res4_1_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.1.conv3.*    | res4_1_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.2.conv1.*    | res4_2_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.2.conv2.*    | res4_2_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.2.conv3.*    | res4_2_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.3.conv1.*    | res4_3_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.3.conv2.*    | res4_3_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.3.conv3.*    | res4_3_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.4.conv1.*    | res4_4_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.4.conv2.*    | res4_4_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.4.conv3.*    | res4_4_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.5.conv1.*    | res4_5_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.5.conv2.*    | res4_5_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.5.conv3.*    | res4_5_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res5.0.conv1.*    | res5_0_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,1024,1,1)      |
| res5.0.conv2.*    | res5_0_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.0.conv3.*    | res5_0_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| res5.0.shortcut.* | res5_0_branch1_{bn_*,w}  | (2048,) (2048,) (2048,) (2048,) (2048,1024,1,1) |
| res5.1.conv1.*    | res5_1_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,2048,1,1)      |
| res5.1.conv2.*    | res5_1_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.1.conv3.*    | res5_1_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| res5.2.conv1.*    | res5_2_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,2048,1,1)      |
| res5.2.conv2.*    | res5_2_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.2.conv3.*    | res5_2_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| stem.conv1.norm.* | res_conv1_bn_*           | (64,) (64,) (64,) (64,)                         |
| stem.conv1.weight | conv1_w                  | (64, 3, 7, 7)                                   |
[32m[11/15 06:53:42 d2.engine.train_loop]: [0mStarting training from iteration 0
[32m[11/15 06:55:06 d2.utils.events]: [0m eta: 3:26:22  iter: 19  total_loss: 3.015  loss_cls: 0.4989  loss_box_reg: 0.04195  loss_mask: 0.6764  loss_rpn_cls: 0.6654  loss_rpn_loc: 1.179  time: 4.1218  data_time: 0.0318  lr: 0.00019981  max_mem: 0M
[32m[11/15 06:56:30 d2.utils.events]: [0m eta: 3:21:19  iter: 39  total_loss: 2.276  loss_cls: 0.264  loss_box_reg: 0.06496  loss_mask: 0.5964  loss_rpn_cls: 0.5737  loss_rpn_loc: 0.7355  time: 4.1538  data_time: 0.0066  lr: 0.00039961  max_mem: 0M
[32m[11/15 06:57:43 d2.utils.events]: [0m eta: 3:14:08  iter: 59  total_loss: 2.022  loss_cls: 0.1528  loss_box_reg: 0.06599  loss_mask: 0.5884  loss_rpn_cls: 0.5668  loss_rpn_loc: 0.6022  time: 3.9906  data_time: 0.0043  lr: 0.00059941  max_mem: 0M
[32m[11/15 06:58:59 d2.utils.events]: [0m eta: 3:06:57  iter: 79  total_loss: 2  loss_cls: 0.2099  loss_box_reg: 0.1132  loss_mask: 0.5631  loss_rpn_cls: 0.5652  loss_rpn_loc: 0.5488  time: 3.9373  data_time: 0.0065  lr: 0.00079921  max_mem: 0M
[32m[11/15 07:00:24 d2.utils.events]: [0m eta: 3:08:09  iter: 99  total_loss: 2.158  loss_cls: 0.2942  loss_box_reg: 0.281  loss_mask: 0.552  loss_rpn_cls: 0.5368  loss_rpn_loc: 0.5118  time: 3.9999  data_time: 0.0075  lr: 0.00099901  max_mem: 0M
[32m[11/15 07:01:48 d2.utils.events]: [0m eta: 3:07:31  iter: 119  total_loss: 2.202  loss_cls: 0.3488  loss_box_reg: 0.3495  loss_mask: 0.5211  loss_rpn_cls: 0.4226  loss_rpn_loc: 0.5227  time: 4.0304  data_time: 0.0076  lr: 0.0011988  max_mem: 0M
[32m[11/15 07:03:07 d2.utils.events]: [0m eta: 3:07:25  iter: 139  total_loss: 2.122  loss_cls: 0.3105  loss_box_reg: 0.4788  loss_mask: 0.4939  loss_rpn_cls: 0.3501  loss_rpn_loc: 0.4895  time: 4.0210  data_time: 0.0114  lr: 0.0013986  max_mem: 0M
[32m[11/15 07:04:25 d2.utils.events]: [0m eta: 3:04:55  iter: 159  total_loss: 2.064  loss_cls: 0.2756  loss_box_reg: 0.4929  loss_mask: 0.4738  loss_rpn_cls: 0.2802  loss_rpn_loc: 0.4731  time: 4.0042  data_time: 0.0106  lr: 0.0015984  max_mem: 0M
[32m[11/15 07:05:55 d2.utils.events]: [0m eta: 3:08:12  iter: 179  total_loss: 1.814  loss_cls: 0.2644  loss_box_reg: 0.3578  loss_mask: 0.44  loss_rpn_cls: 0.2893  loss_rpn_loc: 0.4986  time: 4.0616  data_time: 0.0075  lr: 0.0017982  max_mem: 0M
[32m[11/15 07:07:26 d2.utils.events]: [0m eta: 3:10:12  iter: 199  total_loss: 1.834  loss_cls: 0.2609  loss_box_reg: 0.4  loss_mask: 0.4176  loss_rpn_cls: 0.2873  loss_rpn_loc: 0.498  time: 4.1105  data_time: 0.0058  lr: 0.001998  max_mem: 0M
[32m[11/15 07:08:55 d2.utils.events]: [0m eta: 3:09:31  iter: 219  total_loss: 1.843  loss_cls: 0.244  loss_box_reg: 0.3673  loss_mask: 0.3912  loss_rpn_cls: 0.2859  loss_rpn_loc: 0.4992  time: 4.1403  data_time: 0.0048  lr: 0.0021978  max_mem: 0M
[32m[11/15 07:10:17 d2.utils.events]: [0m eta: 3:08:05  iter: 239  total_loss: 1.887  loss_cls: 0.272  loss_box_reg: 0.4525  loss_mask: 0.3829  loss_rpn_cls: 0.2967  loss_rpn_loc: 0.474  time: 4.1382  data_time: 0.0087  lr: 0.0023976  max_mem: 0M
[32m[11/15 07:11:34 d2.utils.events]: [0m eta: 3:05:32  iter: 259  total_loss: 1.737  loss_cls: 0.2476  loss_box_reg: 0.4233  loss_mask: 0.3632  loss_rpn_cls: 0.2434  loss_rpn_loc: 0.4806  time: 4.1127  data_time: 0.0039  lr: 0.0025974  max_mem: 0M
[32m[11/15 07:12:40 d2.utils.events]: [0m eta: 3:00:49  iter: 279  total_loss: 1.617  loss_cls: 0.191  loss_box_reg: 0.3239  loss_mask: 0.3624  loss_rpn_cls: 0.2736  loss_rpn_loc: 0.477  time: 4.0568  data_time: 0.0032  lr: 0.0027972  max_mem: 0M
[32m[11/15 07:13:47 d2.utils.events]: [0m eta: 2:56:26  iter: 299  total_loss: 1.715  loss_cls: 0.2298  loss_box_reg: 0.3754  loss_mask: 0.3518  loss_rpn_cls: 0.2472  loss_rpn_loc: 0.5108  time: 4.0067  data_time: 0.0031  lr: 0.002997  max_mem: 0M
[32m[11/15 07:14:50 d2.utils.events]: [0m eta: 2:53:31  iter: 319  total_loss: 1.757  loss_cls: 0.2757  loss_box_reg: 0.4292  loss_mask: 0.3362  loss_rpn_cls: 0.2627  loss_rpn_loc: 0.4634  time: 3.9542  data_time: 0.0064  lr: 0.0031968  max_mem: 0M
[32m[11/15 07:15:58 d2.utils.events]: [0m eta: 2:51:45  iter: 339  total_loss: 1.627  loss_cls: 0.215  loss_box_reg: 0.3846  loss_mask: 0.3301  loss_rpn_cls: 0.2146  loss_rpn_loc: 0.4681  time: 3.9199  data_time: 0.0043  lr: 0.0033966  max_mem: 0M
[32m[11/15 07:17:05 d2.utils.events]: [0m eta: 2:48:49  iter: 359  total_loss: 1.761  loss_cls: 0.2605  loss_box_reg: 0.4754  loss_mask: 0.3441  loss_rpn_cls: 0.2338  loss_rpn_loc: 0.4055  time: 3.8884  data_time: 0.0058  lr: 0.0035964  max_mem: 0M
[32m[11/15 07:18:13 d2.utils.events]: [0m eta: 2:45:27  iter: 379  total_loss: 1.601  loss_cls: 0.2274  loss_box_reg: 0.4212  loss_mask: 0.309  loss_rpn_cls: 0.2345  loss_rpn_loc: 0.4102  time: 3.8639  data_time: 0.0076  lr: 0.0037962  max_mem: 0M
[32m[11/15 07:19:19 d2.utils.events]: [0m eta: 2:43:04  iter: 399  total_loss: 1.658  loss_cls: 0.2279  loss_box_reg: 0.4613  loss_mask: 0.302  loss_rpn_cls: 0.237  loss_rpn_loc: 0.4371  time: 3.8339  data_time: 0.0055  lr: 0.003996  max_mem: 0M
[32m[11/15 07:20:33 d2.utils.events]: [0m eta: 2:41:25  iter: 419  total_loss: 1.617  loss_cls: 0.2351  loss_box_reg: 0.4837  loss_mask: 0.3005  loss_rpn_cls: 0.226  loss_rpn_loc: 0.4045  time: 3.8275  data_time: 0.0049  lr: 0.0041958  max_mem: 0M
[32m[11/15 07:21:51 d2.utils.events]: [0m eta: 2:40:33  iter: 439  total_loss: 1.6  loss_cls: 0.2212  loss_box_reg: 0.4625  loss_mask: 0.2772  loss_rpn_cls: 0.1931  loss_rpn_loc: 0.411  time: 3.8319  data_time: 0.0038  lr: 0.0043956  max_mem: 0M
[32m[11/15 07:23:01 d2.utils.events]: [0m eta: 2:38:19  iter: 459  total_loss: 1.508  loss_cls: 0.2168  loss_box_reg: 0.3973  loss_mask: 0.2892  loss_rpn_cls: 0.2152  loss_rpn_loc: 0.3928  time: 3.8177  data_time: 0.0036  lr: 0.0045954  max_mem: 0M
[32m[11/15 07:24:11 d2.utils.events]: [0m eta: 2:36:22  iter: 479  total_loss: 1.637  loss_cls: 0.2563  loss_box_reg: 0.479  loss_mask: 0.2923  loss_rpn_cls: 0.1922  loss_rpn_loc: 0.4017  time: 3.8041  data_time: 0.0037  lr: 0.0047952  max_mem: 0M
[32m[11/15 07:25:26 d2.utils.events]: [0m eta: 2:35:08  iter: 499  total_loss: 1.567  loss_cls: 0.2341  loss_box_reg: 0.4775  loss_mask: 0.2956  loss_rpn_cls: 0.1934  loss_rpn_loc: 0.3963  time: 3.8018  data_time: 0.0050  lr: 0.004995  max_mem: 0M
[32m[11/15 07:26:42 d2.utils.events]: [0m eta: 2:34:15  iter: 519  total_loss: 1.647  loss_cls: 0.2582  loss_box_reg: 0.4597  loss_mask: 0.2862  loss_rpn_cls: 0.1741  loss_rpn_loc: 0.4272  time: 3.8014  data_time: 0.0041  lr: 0.0051948  max_mem: 0M
[32m[11/15 07:28:00 d2.utils.events]: [0m eta: 2:33:01  iter: 539  total_loss: 1.672  loss_cls: 0.2375  loss_box_reg: 0.4275  loss_mask: 0.305  loss_rpn_cls: 0.2359  loss_rpn_loc: 0.4488  time: 3.8040  data_time: 0.0039  lr: 0.0053946  max_mem: 0M
[32m[11/15 07:29:19 d2.utils.events]: [0m eta: 2:31:46  iter: 559  total_loss: 1.623  loss_cls: 0.2567  loss_box_reg: 0.4787  loss_mask: 0.266  loss_rpn_cls: 0.2068  loss_rpn_loc: 0.4179  time: 3.8104  data_time: 0.0045  lr: 0.0055944  max_mem: 0M
[32m[11/15 07:30:38 d2.utils.events]: [0m eta: 2:30:37  iter: 579  total_loss: 1.671  loss_cls: 0.2426  loss_box_reg: 0.4905  loss_mask: 0.2751  loss_rpn_cls: 0.203  loss_rpn_loc: 0.4312  time: 3.8150  data_time: 0.0037  lr: 0.0057942  max_mem: 0M
[32m[11/15 07:32:01 d2.utils.events]: [0m eta: 2:29:36  iter: 599  total_loss: 1.602  loss_cls: 0.2247  loss_box_reg: 0.4731  loss_mask: 0.2675  loss_rpn_cls: 0.1864  loss_rpn_loc: 0.3891  time: 3.8259  data_time: 0.0032  lr: 0.005994  max_mem: 0M
[32m[11/15 07:33:11 d2.utils.events]: [0m eta: 2:28:02  iter: 619  total_loss: 1.689  loss_cls: 0.2706  loss_box_reg: 0.435  loss_mask: 0.2612  loss_rpn_cls: 0.2451  loss_rpn_loc: 0.4518  time: 3.8158  data_time: 0.0052  lr: 0.0061938  max_mem: 0M
[32m[11/15 07:34:19 d2.utils.events]: [0m eta: 2:26:15  iter: 639  total_loss: 1.607  loss_cls: 0.2251  loss_box_reg: 0.4678  loss_mask: 0.2821  loss_rpn_cls: 0.2362  loss_rpn_loc: 0.4422  time: 3.8018  data_time: 0.0057  lr: 0.0063936  max_mem: 0M
[32m[11/15 07:35:30 d2.utils.events]: [0m eta: 2:24:42  iter: 659  total_loss: 1.572  loss_cls: 0.2409  loss_box_reg: 0.486  loss_mask: 0.2607  loss_rpn_cls: 0.1959  loss_rpn_loc: 0.3833  time: 3.7945  data_time: 0.0050  lr: 0.0065934  max_mem: 0M
[32m[11/15 07:36:40 d2.utils.events]: [0m eta: 2:23:11  iter: 679  total_loss: 1.629  loss_cls: 0.2397  loss_box_reg: 0.505  loss_mask: 0.2923  loss_rpn_cls: 0.1909  loss_rpn_loc: 0.4048  time: 3.7859  data_time: 0.0041  lr: 0.0067932  max_mem: 0M
[32m[11/15 07:37:50 d2.utils.events]: [0m eta: 2:21:45  iter: 699  total_loss: 1.473  loss_cls: 0.2437  loss_box_reg: 0.4069  loss_mask: 0.2743  loss_rpn_cls: 0.1641  loss_rpn_loc: 0.4035  time: 3.7776  data_time: 0.0040  lr: 0.006993  max_mem: 0M
[32m[11/15 07:38:56 d2.utils.events]: [0m eta: 2:20:06  iter: 719  total_loss: 1.582  loss_cls: 0.2074  loss_box_reg: 0.4458  loss_mask: 0.2618  loss_rpn_cls: 0.2205  loss_rpn_loc: 0.4366  time: 3.7646  data_time: 0.0032  lr: 0.0071928  max_mem: 0M
[32m[11/15 07:40:03 d2.utils.events]: [0m eta: 2:18:20  iter: 739  total_loss: 1.563  loss_cls: 0.2417  loss_box_reg: 0.4436  loss_mask: 0.2508  loss_rpn_cls: 0.1953  loss_rpn_loc: 0.4327  time: 3.7526  data_time: 0.0032  lr: 0.0073926  max_mem: 0M
[32m[11/15 07:41:12 d2.utils.events]: [0m eta: 2:16:32  iter: 759  total_loss: 1.497  loss_cls: 0.228  loss_box_reg: 0.4644  loss_mask: 0.2495  loss_rpn_cls: 0.1706  loss_rpn_loc: 0.3875  time: 3.7446  data_time: 0.0032  lr: 0.0075924  max_mem: 0M
[32m[11/15 07:42:20 d2.utils.events]: [0m eta: 2:15:00  iter: 779  total_loss: 1.529  loss_cls: 0.2279  loss_box_reg: 0.4589  loss_mask: 0.2502  loss_rpn_cls: 0.1745  loss_rpn_loc: 0.4406  time: 3.7356  data_time: 0.0033  lr: 0.0077922  max_mem: 0M
[32m[11/15 07:43:30 d2.utils.events]: [0m eta: 2:13:40  iter: 799  total_loss: 1.618  loss_cls: 0.273  loss_box_reg: 0.4653  loss_mask: 0.25  loss_rpn_cls: 0.1434  loss_rpn_loc: 0.4228  time: 3.7300  data_time: 0.0038  lr: 0.007992  max_mem: 0M
[32m[11/15 07:44:40 d2.utils.events]: [0m eta: 2:12:12  iter: 819  total_loss: 1.58  loss_cls: 0.2504  loss_box_reg: 0.4793  loss_mask: 0.2757  loss_rpn_cls: 0.1738  loss_rpn_loc: 0.3909  time: 3.7245  data_time: 0.0038  lr: 0.0081918  max_mem: 0M
[32m[11/15 07:45:54 d2.utils.events]: [0m eta: 2:10:46  iter: 839  total_loss: 1.504  loss_cls: 0.2134  loss_box_reg: 0.4378  loss_mask: 0.2518  loss_rpn_cls: 0.1753  loss_rpn_loc: 0.4164  time: 3.7231  data_time: 0.0059  lr: 0.0083916  max_mem: 0M
[32m[11/15 07:47:03 d2.utils.events]: [0m eta: 2:09:32  iter: 859  total_loss: 1.597  loss_cls: 0.2542  loss_box_reg: 0.4699  loss_mask: 0.254  loss_rpn_cls: 0.174  loss_rpn_loc: 0.4142  time: 3.7174  data_time: 0.0063  lr: 0.0085914  max_mem: 0M
[32m[11/15 07:48:11 d2.utils.events]: [0m eta: 2:08:09  iter: 879  total_loss: 1.5  loss_cls: 0.2163  loss_box_reg: 0.5007  loss_mask: 0.2485  loss_rpn_cls: 0.1804  loss_rpn_loc: 0.3899  time: 3.7104  data_time: 0.0066  lr: 0.0087912  max_mem: 0M
[32m[11/15 07:49:21 d2.utils.events]: [0m eta: 2:06:44  iter: 899  total_loss: 1.47  loss_cls: 0.2222  loss_box_reg: 0.4378  loss_mask: 0.2376  loss_rpn_cls: 0.1945  loss_rpn_loc: 0.3894  time: 3.7053  data_time: 0.0054  lr: 0.008991  max_mem: 0M
[32m[11/15 07:50:34 d2.utils.events]: [0m eta: 2:05:30  iter: 919  total_loss: 1.467  loss_cls: 0.2105  loss_box_reg: 0.4559  loss_mask: 0.2357  loss_rpn_cls: 0.1559  loss_rpn_loc: 0.3876  time: 3.7045  data_time: 0.0041  lr: 0.0091908  max_mem: 0M
[32m[11/15 07:51:49 d2.utils.events]: [0m eta: 2:04:19  iter: 939  total_loss: 1.508  loss_cls: 0.2342  loss_box_reg: 0.4516  loss_mask: 0.2393  loss_rpn_cls: 0.1874  loss_rpn_loc: 0.38  time: 3.7053  data_time: 0.0049  lr: 0.0093906  max_mem: 0M
[32m[11/15 07:52:56 d2.utils.events]: [0m eta: 2:02:51  iter: 959  total_loss: 1.484  loss_cls: 0.2408  loss_box_reg: 0.4567  loss_mask: 0.249  loss_rpn_cls: 0.176  loss_rpn_loc: 0.3859  time: 3.6975  data_time: 0.0025  lr: 0.0095904  max_mem: 0M
[32m[11/15 07:54:07 d2.utils.events]: [0m eta: 2:01:32  iter: 979  total_loss: 1.443  loss_cls: 0.2123  loss_box_reg: 0.4007  loss_mask: 0.224  loss_rpn_cls: 0.1642  loss_rpn_loc: 0.3798  time: 3.6943  data_time: 0.0058  lr: 0.0097902  max_mem: 0M
[32m[11/15 07:55:24 d2.utils.events]: [0m eta: 2:00:20  iter: 999  total_loss: 1.491  loss_cls: 0.2286  loss_box_reg: 0.4686  loss_mask: 0.2222  loss_rpn_cls: 0.1533  loss_rpn_loc: 0.3959  time: 3.6977  data_time: 0.0032  lr: 0.00999  max_mem: 0M
[32m[11/15 07:56:34 d2.utils.events]: [0m eta: 1:58:49  iter: 1019  total_loss: 1.454  loss_cls: 0.2097  loss_box_reg: 0.4249  loss_mask: 0.2397  loss_rpn_cls: 0.1881  loss_rpn_loc: 0.3878  time: 3.6936  data_time: 0.0058  lr: 0.01  max_mem: 0M
[32m[11/15 07:57:48 d2.utils.events]: [0m eta: 1:57:28  iter: 1039  total_loss: 1.491  loss_cls: 0.2332  loss_box_reg: 0.4609  loss_mask: 0.2456  loss_rpn_cls: 0.1608  loss_rpn_loc: 0.3832  time: 3.6937  data_time: 0.0042  lr: 0.01  max_mem: 0M
[32m[11/15 07:58:59 d2.utils.events]: [0m eta: 1:56:10  iter: 1059  total_loss: 1.455  loss_cls: 0.2295  loss_box_reg: 0.4942  loss_mask: 0.2279  loss_rpn_cls: 0.1861  loss_rpn_loc: 0.3707  time: 3.6911  data_time: 0.0033  lr: 0.01  max_mem: 0M
[32m[11/15 08:00:17 d2.utils.events]: [0m eta: 1:54:59  iter: 1079  total_loss: 1.412  loss_cls: 0.2388  loss_box_reg: 0.4706  loss_mask: 0.2288  loss_rpn_cls: 0.1581  loss_rpn_loc: 0.3481  time: 3.6951  data_time: 0.0030  lr: 0.01  max_mem: 0M
[32m[11/15 08:01:32 d2.utils.events]: [0m eta: 1:53:34  iter: 1099  total_loss: 1.463  loss_cls: 0.2369  loss_box_reg: 0.4304  loss_mask: 0.2262  loss_rpn_cls: 0.1517  loss_rpn_loc: 0.3786  time: 3.6954  data_time: 0.0045  lr: 0.01  max_mem: 0M
[32m[11/15 08:02:43 d2.utils.events]: [0m eta: 1:52:04  iter: 1119  total_loss: 1.421  loss_cls: 0.2449  loss_box_reg: 0.4753  loss_mask: 0.2259  loss_rpn_cls: 0.1493  loss_rpn_loc: 0.352  time: 3.6931  data_time: 0.0040  lr: 0.01  max_mem: 0M
[32m[11/15 08:03:56 d2.utils.events]: [0m eta: 1:50:46  iter: 1139  total_loss: 1.421  loss_cls: 0.2202  loss_box_reg: 0.4439  loss_mask: 0.221  loss_rpn_cls: 0.1454  loss_rpn_loc: 0.3549  time: 3.6921  data_time: 0.0039  lr: 0.01  max_mem: 0M
[32m[11/15 08:05:04 d2.utils.events]: [0m eta: 1:49:11  iter: 1159  total_loss: 1.39  loss_cls: 0.2101  loss_box_reg: 0.4766  loss_mask: 0.2362  loss_rpn_cls: 0.1732  loss_rpn_loc: 0.3478  time: 3.6873  data_time: 0.0078  lr: 0.01  max_mem: 0M
[32m[11/15 08:06:18 d2.utils.events]: [0m eta: 1:47:43  iter: 1179  total_loss: 1.332  loss_cls: 0.1894  loss_box_reg: 0.4494  loss_mask: 0.224  loss_rpn_cls: 0.1754  loss_rpn_loc: 0.3846  time: 3.6875  data_time: 0.0053  lr: 0.01  max_mem: 0M
[32m[11/15 08:07:27 d2.utils.events]: [0m eta: 1:45:55  iter: 1199  total_loss: 1.38  loss_cls: 0.179  loss_box_reg: 0.4063  loss_mask: 0.2179  loss_rpn_cls: 0.1338  loss_rpn_loc: 0.4076  time: 3.6832  data_time: 0.0050  lr: 0.01  max_mem: 0M
[32m[11/15 08:08:37 d2.utils.events]: [0m eta: 1:44:20  iter: 1219  total_loss: 1.381  loss_cls: 0.2083  loss_box_reg: 0.4289  loss_mask: 0.2129  loss_rpn_cls: 0.1588  loss_rpn_loc: 0.3692  time: 3.6805  data_time: 0.0044  lr: 0.01  max_mem: 0M
[32m[11/15 08:09:49 d2.utils.events]: [0m eta: 1:42:59  iter: 1239  total_loss: 1.495  loss_cls: 0.2405  loss_box_reg: 0.4546  loss_mask: 0.2364  loss_rpn_cls: 0.146  loss_rpn_loc: 0.3757  time: 3.6794  data_time: 0.0044  lr: 0.01  max_mem: 0M
[32m[11/15 08:11:05 d2.utils.events]: [0m eta: 1:41:52  iter: 1259  total_loss: 1.394  loss_cls: 0.2103  loss_box_reg: 0.451  loss_mask: 0.2212  loss_rpn_cls: 0.154  loss_rpn_loc: 0.3586  time: 3.6811  data_time: 0.0031  lr: 0.01  max_mem: 0M
[32m[11/15 08:12:14 d2.utils.events]: [0m eta: 1:40:42  iter: 1279  total_loss: 1.43  loss_cls: 0.2171  loss_box_reg: 0.4153  loss_mask: 0.2348  loss_rpn_cls: 0.1368  loss_rpn_loc: 0.3867  time: 3.6777  data_time: 0.0029  lr: 0.01  max_mem: 0M
[32m[11/15 08:13:25 d2.utils.events]: [0m eta: 1:39:38  iter: 1299  total_loss: 1.457  loss_cls: 0.2404  loss_box_reg: 0.4501  loss_mask: 0.22  loss_rpn_cls: 0.1249  loss_rpn_loc: 0.3631  time: 3.6753  data_time: 0.0040  lr: 0.01  max_mem: 0M
[32m[11/15 08:14:35 d2.utils.events]: [0m eta: 1:38:46  iter: 1319  total_loss: 1.357  loss_cls: 0.2052  loss_box_reg: 0.4319  loss_mask: 0.2213  loss_rpn_cls: 0.1256  loss_rpn_loc: 0.3874  time: 3.6725  data_time: 0.0047  lr: 0.01  max_mem: 0M
[32m[11/15 08:15:52 d2.utils.events]: [0m eta: 1:37:57  iter: 1339  total_loss: 1.341  loss_cls: 0.2167  loss_box_reg: 0.4203  loss_mask: 0.2093  loss_rpn_cls: 0.1221  loss_rpn_loc: 0.3918  time: 3.6751  data_time: 0.0066  lr: 0.01  max_mem: 0M
[32m[11/15 08:17:01 d2.utils.events]: [0m eta: 1:36:49  iter: 1359  total_loss: 1.345  loss_cls: 0.2105  loss_box_reg: 0.4184  loss_mask: 0.2332  loss_rpn_cls: 0.1158  loss_rpn_loc: 0.3533  time: 3.6720  data_time: 0.0063  lr: 0.01  max_mem: 0M
[32m[11/15 08:18:14 d2.utils.events]: [0m eta: 1:36:06  iter: 1379  total_loss: 1.36  loss_cls: 0.2047  loss_box_reg: 0.4328  loss_mask: 0.2182  loss_rpn_cls: 0.1241  loss_rpn_loc: 0.3667  time: 3.6713  data_time: 0.0061  lr: 0.01  max_mem: 0M
[32m[11/15 08:19:24 d2.utils.events]: [0m eta: 1:35:07  iter: 1399  total_loss: 1.322  loss_cls: 0.1868  loss_box_reg: 0.4082  loss_mask: 0.1935  loss_rpn_cls: 0.1207  loss_rpn_loc: 0.3666  time: 3.6688  data_time: 0.0055  lr: 0.01  max_mem: 0M
[32m[11/15 08:20:37 d2.utils.events]: [0m eta: 1:33:59  iter: 1419  total_loss: 1.378  loss_cls: 0.2282  loss_box_reg: 0.4385  loss_mask: 0.2086  loss_rpn_cls: 0.1137  loss_rpn_loc: 0.3441  time: 3.6690  data_time: 0.0041  lr: 0.01  max_mem: 0M
[32m[11/15 08:21:47 d2.utils.events]: [0m eta: 1:32:20  iter: 1439  total_loss: 1.396  loss_cls: 0.2087  loss_box_reg: 0.4078  loss_mask: 0.219  loss_rpn_cls: 0.1556  loss_rpn_loc: 0.353  time: 3.6665  data_time: 0.0044  lr: 0.01  max_mem: 0M
[32m[11/15 08:22:58 d2.utils.events]: [0m eta: 1:31:23  iter: 1459  total_loss: 1.327  loss_cls: 0.1907  loss_box_reg: 0.4099  loss_mask: 0.2178  loss_rpn_cls: 0.147  loss_rpn_loc: 0.3374  time: 3.6650  data_time: 0.0066  lr: 0.01  max_mem: 0M
[32m[11/15 08:24:09 d2.utils.events]: [0m eta: 1:30:17  iter: 1479  total_loss: 1.37  loss_cls: 0.2216  loss_box_reg: 0.4516  loss_mask: 0.2131  loss_rpn_cls: 0.14  loss_rpn_loc: 0.3463  time: 3.6634  data_time: 0.0045  lr: 0.01  max_mem: 0M
[32m[11/15 08:25:24 d2.utils.events]: [0m eta: 1:29:06  iter: 1499  total_loss: 1.249  loss_cls: 0.173  loss_box_reg: 0.414  loss_mask: 0.2139  loss_rpn_cls: 0.1303  loss_rpn_loc: 0.3411  time: 3.6647  data_time: 0.0032  lr: 0.01  max_mem: 0M
[32m[11/15 08:26:36 d2.utils.events]: [0m eta: 1:27:42  iter: 1519  total_loss: 1.26  loss_cls: 0.1848  loss_box_reg: 0.4178  loss_mask: 0.2139  loss_rpn_cls: 0.1159  loss_rpn_loc: 0.3187  time: 3.6634  data_time: 0.0053  lr: 0.01  max_mem: 0M
[32m[11/15 08:27:49 d2.utils.events]: [0m eta: 1:26:11  iter: 1539  total_loss: 1.358  loss_cls: 0.2224  loss_box_reg: 0.4267  loss_mask: 0.2225  loss_rpn_cls: 0.1476  loss_rpn_loc: 0.3304  time: 3.6633  data_time: 0.0023  lr: 0.01  max_mem: 0M
[32m[11/15 08:29:00 d2.utils.events]: [0m eta: 1:24:58  iter: 1559  total_loss: 1.331  loss_cls: 0.2119  loss_box_reg: 0.4445  loss_mask: 0.2076  loss_rpn_cls: 0.1157  loss_rpn_loc: 0.3335  time: 3.6618  data_time: 0.0062  lr: 0.01  max_mem: 0M
[32m[11/15 08:30:15 d2.utils.events]: [0m eta: 1:23:46  iter: 1579  total_loss: 1.286  loss_cls: 0.2006  loss_box_reg: 0.427  loss_mask: 0.2101  loss_rpn_cls: 0.1176  loss_rpn_loc: 0.3297  time: 3.6629  data_time: 0.0049  lr: 0.01  max_mem: 0M
[32m[11/15 08:31:24 d2.utils.events]: [0m eta: 1:22:18  iter: 1599  total_loss: 1.299  loss_cls: 0.2076  loss_box_reg: 0.4251  loss_mask: 0.2133  loss_rpn_cls: 0.1143  loss_rpn_loc: 0.3362  time: 3.6603  data_time: 0.0072  lr: 0.01  max_mem: 0M
[32m[11/15 08:32:34 d2.utils.events]: [0m eta: 1:21:09  iter: 1619  total_loss: 1.258  loss_cls: 0.1995  loss_box_reg: 0.4222  loss_mask: 0.215  loss_rpn_cls: 0.1204  loss_rpn_loc: 0.3069  time: 3.6581  data_time: 0.0061  lr: 0.01  max_mem: 0M
[32m[11/15 08:33:48 d2.utils.events]: [0m eta: 1:20:17  iter: 1639  total_loss: 1.297  loss_cls: 0.2117  loss_box_reg: 0.434  loss_mask: 0.2076  loss_rpn_cls: 0.1031  loss_rpn_loc: 0.3153  time: 3.6585  data_time: 0.0066  lr: 0.01  max_mem: 0M
[32m[11/15 08:34:59 d2.utils.events]: [0m eta: 1:19:05  iter: 1659  total_loss: 1.305  loss_cls: 0.2124  loss_box_reg: 0.4136  loss_mask: 0.198  loss_rpn_cls: 0.1527  loss_rpn_loc: 0.3253  time: 3.6574  data_time: 0.0049  lr: 0.01  max_mem: 0M
[32m[11/15 08:36:17 d2.utils.events]: [0m eta: 1:18:15  iter: 1679  total_loss: 1.238  loss_cls: 0.2048  loss_box_reg: 0.4133  loss_mask: 0.1949  loss_rpn_cls: 0.1118  loss_rpn_loc: 0.3107  time: 3.6605  data_time: 0.0085  lr: 0.01  max_mem: 0M
[32m[11/15 08:37:29 d2.utils.events]: [0m eta: 1:17:02  iter: 1699  total_loss: 1.22  loss_cls: 0.1832  loss_box_reg: 0.4222  loss_mask: 0.1959  loss_rpn_cls: 0.1078  loss_rpn_loc: 0.3282  time: 3.6595  data_time: 0.0045  lr: 0.01  max_mem: 0M
[32m[11/15 08:38:41 d2.utils.events]: [0m eta: 1:15:57  iter: 1719  total_loss: 1.234  loss_cls: 0.1964  loss_box_reg: 0.4277  loss_mask: 0.2078  loss_rpn_cls: 0.1077  loss_rpn_loc: 0.3126  time: 3.6590  data_time: 0.0029  lr: 0.01  max_mem: 0M
[32m[11/15 08:39:52 d2.utils.events]: [0m eta: 1:14:51  iter: 1739  total_loss: 1.331  loss_cls: 0.2076  loss_box_reg: 0.4412  loss_mask: 0.2023  loss_rpn_cls: 0.1393  loss_rpn_loc: 0.3119  time: 3.6572  data_time: 0.0026  lr: 0.01  max_mem: 0M
[32m[11/15 08:41:09 d2.utils.events]: [0m eta: 1:13:54  iter: 1759  total_loss: 1.322  loss_cls: 0.2044  loss_box_reg: 0.4164  loss_mask: 0.1987  loss_rpn_cls: 0.1078  loss_rpn_loc: 0.3303  time: 3.6596  data_time: 0.0041  lr: 0.01  max_mem: 0M
[32m[11/15 08:42:22 d2.utils.events]: [0m eta: 1:12:47  iter: 1779  total_loss: 1.278  loss_cls: 0.2002  loss_box_reg: 0.4327  loss_mask: 0.1956  loss_rpn_cls: 0.111  loss_rpn_loc: 0.3197  time: 3.6597  data_time: 0.0041  lr: 0.01  max_mem: 0M
[32m[11/15 08:43:32 d2.utils.events]: [0m eta: 1:11:31  iter: 1799  total_loss: 1.235  loss_cls: 0.2027  loss_box_reg: 0.4017  loss_mask: 0.1945  loss_rpn_cls: 0.1052  loss_rpn_loc: 0.3015  time: 3.6576  data_time: 0.0043  lr: 0.01  max_mem: 0M
[32m[11/15 08:44:41 d2.utils.events]: [0m eta: 1:10:16  iter: 1819  total_loss: 1.263  loss_cls: 0.1901  loss_box_reg: 0.4124  loss_mask: 0.1935  loss_rpn_cls: 0.1384  loss_rpn_loc: 0.3103  time: 3.6552  data_time: 0.0028  lr: 0.01  max_mem: 0M
[32m[11/15 08:45:56 d2.utils.events]: [0m eta: 1:09:05  iter: 1839  total_loss: 1.226  loss_cls: 0.2018  loss_box_reg: 0.4163  loss_mask: 0.1815  loss_rpn_cls: 0.1004  loss_rpn_loc: 0.3191  time: 3.6566  data_time: 0.0036  lr: 0.01  max_mem: 0M
[32m[11/15 08:47:09 d2.utils.events]: [0m eta: 1:07:55  iter: 1859  total_loss: 1.221  loss_cls: 0.1893  loss_box_reg: 0.4101  loss_mask: 0.1977  loss_rpn_cls: 0.1262  loss_rpn_loc: 0.3047  time: 3.6565  data_time: 0.0033  lr: 0.01  max_mem: 0M
[32m[11/15 08:48:23 d2.utils.events]: [0m eta: 1:06:49  iter: 1879  total_loss: 1.214  loss_cls: 0.1801  loss_box_reg: 0.4004  loss_mask: 0.2022  loss_rpn_cls: 0.1118  loss_rpn_loc: 0.3032  time: 3.6570  data_time: 0.0075  lr: 0.01  max_mem: 0M
[32m[11/15 08:49:36 d2.utils.events]: [0m eta: 1:05:39  iter: 1899  total_loss: 1.299  loss_cls: 0.2117  loss_box_reg: 0.4132  loss_mask: 0.2108  loss_rpn_cls: 0.1331  loss_rpn_loc: 0.3025  time: 3.6569  data_time: 0.0035  lr: 0.01  max_mem: 0M
[32m[11/15 08:50:51 d2.utils.events]: [0m eta: 1:04:31  iter: 1919  total_loss: 1.23  loss_cls: 0.1927  loss_box_reg: 0.4278  loss_mask: 0.1974  loss_rpn_cls: 0.1326  loss_rpn_loc: 0.3047  time: 3.6576  data_time: 0.0040  lr: 0.01  max_mem: 0M
[32m[11/15 08:52:04 d2.utils.events]: [0m eta: 1:03:18  iter: 1939  total_loss: 1.181  loss_cls: 0.1797  loss_box_reg: 0.3923  loss_mask: 0.1938  loss_rpn_cls: 0.1027  loss_rpn_loc: 0.31  time: 3.6574  data_time: 0.0050  lr: 0.01  max_mem: 0M
[32m[11/15 08:53:15 d2.utils.events]: [0m eta: 1:02:10  iter: 1959  total_loss: 1.197  loss_cls: 0.2017  loss_box_reg: 0.419  loss_mask: 0.1995  loss_rpn_cls: 0.09531  loss_rpn_loc: 0.3019  time: 3.6566  data_time: 0.0050  lr: 0.01  max_mem: 0M
[32m[11/15 08:54:27 d2.utils.events]: [0m eta: 1:01:05  iter: 1979  total_loss: 1.128  loss_cls: 0.1575  loss_box_reg: 0.3758  loss_mask: 0.1954  loss_rpn_cls: 0.1102  loss_rpn_loc: 0.2848  time: 3.6559  data_time: 0.0060  lr: 0.01  max_mem: 0M
[32m[11/15 08:55:38 d2.utils.events]: [0m eta: 0:59:49  iter: 1999  total_loss: 1.168  loss_cls: 0.1602  loss_box_reg: 0.386  loss_mask: 0.1971  loss_rpn_cls: 0.1262  loss_rpn_loc: 0.3014  time: 3.6549  data_time: 0.0040  lr: 0.01  max_mem: 0M
[32m[11/15 08:56:46 d2.utils.events]: [0m eta: 0:58:34  iter: 2019  total_loss: 1.239  loss_cls: 0.1885  loss_box_reg: 0.3966  loss_mask: 0.1949  loss_rpn_cls: 0.1467  loss_rpn_loc: 0.3212  time: 3.6525  data_time: 0.0041  lr: 0.01  max_mem: 0M
[32m[11/15 08:57:56 d2.utils.events]: [0m eta: 0:57:16  iter: 2039  total_loss: 1.179  loss_cls: 0.1826  loss_box_reg: 0.3918  loss_mask: 0.1962  loss_rpn_cls: 0.1128  loss_rpn_loc: 0.3053  time: 3.6507  data_time: 0.0037  lr: 0.01  max_mem: 0M
[32m[11/15 08:59:09 d2.utils.events]: [0m eta: 0:56:09  iter: 2059  total_loss: 1.158  loss_cls: 0.1776  loss_box_reg: 0.4087  loss_mask: 0.1856  loss_rpn_cls: 0.09059  loss_rpn_loc: 0.3041  time: 3.6506  data_time: 0.0040  lr: 0.01  max_mem: 0M
[32m[11/15 09:00:23 d2.utils.events]: [0m eta: 0:54:58  iter: 2079  total_loss: 1.146  loss_cls: 0.1741  loss_box_reg: 0.3984  loss_mask: 0.1894  loss_rpn_cls: 0.09985  loss_rpn_loc: 0.2924  time: 3.6514  data_time: 0.0039  lr: 0.01  max_mem: 0M
[32m[11/15 09:01:35 d2.utils.events]: [0m eta: 0:53:41  iter: 2099  total_loss: 1.178  loss_cls: 0.1829  loss_box_reg: 0.404  loss_mask: 0.1927  loss_rpn_cls: 0.0899  loss_rpn_loc: 0.2881  time: 3.6506  data_time: 0.0040  lr: 0.01  max_mem: 0M
[32m[11/15 09:02:48 d2.utils.events]: [0m eta: 0:52:31  iter: 2119  total_loss: 1.186  loss_cls: 0.1898  loss_box_reg: 0.3917  loss_mask: 0.1948  loss_rpn_cls: 0.09652  loss_rpn_loc: 0.2856  time: 3.6505  data_time: 0.0044  lr: 0.01  max_mem: 0M
[32m[11/15 09:04:00 d2.utils.events]: [0m eta: 0:51:18  iter: 2139  total_loss: 1.177  loss_cls: 0.17  loss_box_reg: 0.4028  loss_mask: 0.1962  loss_rpn_cls: 0.08453  loss_rpn_loc: 0.3027  time: 3.6502  data_time: 0.0047  lr: 0.01  max_mem: 0M
[32m[11/15 09:05:12 d2.utils.events]: [0m eta: 0:50:10  iter: 2159  total_loss: 1.195  loss_cls: 0.1898  loss_box_reg: 0.4094  loss_mask: 0.1939  loss_rpn_cls: 0.112  loss_rpn_loc: 0.3038  time: 3.6495  data_time: 0.0032  lr: 0.01  max_mem: 0M
[32m[11/15 09:06:25 d2.utils.events]: [0m eta: 0:48:55  iter: 2179  total_loss: 1.177  loss_cls: 0.1773  loss_box_reg: 0.3999  loss_mask: 0.1993  loss_rpn_cls: 0.1125  loss_rpn_loc: 0.2944  time: 3.6496  data_time: 0.0071  lr: 0.01  max_mem: 0M
[32m[11/15 09:07:36 d2.utils.events]: [0m eta: 0:47:46  iter: 2199  total_loss: 1.201  loss_cls: 0.1734  loss_box_reg: 0.3922  loss_mask: 0.1849  loss_rpn_cls: 0.09094  loss_rpn_loc: 0.2921  time: 3.6487  data_time: 0.0041  lr: 0.01  max_mem: 0M
[32m[11/15 09:08:48 d2.utils.events]: [0m eta: 0:46:35  iter: 2219  total_loss: 1.223  loss_cls: 0.1883  loss_box_reg: 0.3847  loss_mask: 0.1929  loss_rpn_cls: 0.1164  loss_rpn_loc: 0.2957  time: 3.6483  data_time: 0.0037  lr: 0.01  max_mem: 0M
[32m[11/15 09:10:01 d2.utils.events]: [0m eta: 0:45:20  iter: 2239  total_loss: 1.112  loss_cls: 0.1695  loss_box_reg: 0.3758  loss_mask: 0.1842  loss_rpn_cls: 0.1086  loss_rpn_loc: 0.3086  time: 3.6483  data_time: 0.0041  lr: 0.01  max_mem: 0M
[32m[11/15 09:11:17 d2.utils.events]: [0m eta: 0:44:04  iter: 2259  total_loss: 1.14  loss_cls: 0.1724  loss_box_reg: 0.3697  loss_mask: 0.178  loss_rpn_cls: 0.09849  loss_rpn_loc: 0.3166  time: 3.6497  data_time: 0.0064  lr: 0.01  max_mem: 0M
[32m[11/15 09:12:31 d2.utils.events]: [0m eta: 0:42:56  iter: 2279  total_loss: 1.136  loss_cls: 0.1761  loss_box_reg: 0.372  loss_mask: 0.1763  loss_rpn_cls: 0.1044  loss_rpn_loc: 0.2692  time: 3.6499  data_time: 0.0058  lr: 0.01  max_mem: 0M
[32m[11/15 09:13:44 d2.utils.events]: [0m eta: 0:41:47  iter: 2299  total_loss: 1.138  loss_cls: 0.1735  loss_box_reg: 0.3718  loss_mask: 0.1821  loss_rpn_cls: 0.0861  loss_rpn_loc: 0.2817  time: 3.6498  data_time: 0.0029  lr: 0.01  max_mem: 0M
[32m[11/15 09:14:56 d2.utils.events]: [0m eta: 0:40:38  iter: 2319  total_loss: 1.182  loss_cls: 0.1741  loss_box_reg: 0.3949  loss_mask: 0.1907  loss_rpn_cls: 0.1252  loss_rpn_loc: 0.2818  time: 3.6492  data_time: 0.0029  lr: 0.01  max_mem: 0M
[32m[11/15 09:16:11 d2.utils.events]: [0m eta: 0:39:22  iter: 2339  total_loss: 1.192  loss_cls: 0.2022  loss_box_reg: 0.4071  loss_mask: 0.1851  loss_rpn_cls: 0.0979  loss_rpn_loc: 0.2873  time: 3.6502  data_time: 0.0042  lr: 0.01  max_mem: 0M
[32m[11/15 09:17:25 d2.utils.events]: [0m eta: 0:38:15  iter: 2359  total_loss: 1.115  loss_cls: 0.1705  loss_box_reg: 0.388  loss_mask: 0.188  loss_rpn_cls: 0.0933  loss_rpn_loc: 0.2819  time: 3.6508  data_time: 0.0040  lr: 0.01  max_mem: 0M
[32m[11/15 09:18:40 d2.utils.events]: [0m eta: 0:37:04  iter: 2379  total_loss: 1.142  loss_cls: 0.1622  loss_box_reg: 0.385  loss_mask: 0.183  loss_rpn_cls: 0.1033  loss_rpn_loc: 0.2758  time: 3.6515  data_time: 0.0027  lr: 0.01  max_mem: 0M
[32m[11/15 09:19:52 d2.utils.events]: [0m eta: 0:35:54  iter: 2399  total_loss: 1.17  loss_cls: 0.1886  loss_box_reg: 0.3883  loss_mask: 0.1965  loss_rpn_cls: 0.09385  loss_rpn_loc: 0.2758  time: 3.6512  data_time: 0.0033  lr: 0.01  max_mem: 0M
[32m[11/15 09:21:09 d2.utils.events]: [0m eta: 0:34:46  iter: 2419  total_loss: 1.129  loss_cls: 0.162  loss_box_reg: 0.3727  loss_mask: 0.1797  loss_rpn_cls: 0.08194  loss_rpn_loc: 0.2834  time: 3.6526  data_time: 0.0045  lr: 0.01  max_mem: 0M
[32m[11/15 09:22:21 d2.utils.events]: [0m eta: 0:33:37  iter: 2439  total_loss: 1.14  loss_cls: 0.1676  loss_box_reg: 0.3761  loss_mask: 0.1796  loss_rpn_cls: 0.1042  loss_rpn_loc: 0.2886  time: 3.6522  data_time: 0.0043  lr: 0.01  max_mem: 0M
[32m[11/15 09:23:34 d2.utils.events]: [0m eta: 0:32:25  iter: 2459  total_loss: 1.149  loss_cls: 0.1746  loss_box_reg: 0.3863  loss_mask: 0.1878  loss_rpn_cls: 0.09838  loss_rpn_loc: 0.2774  time: 3.6522  data_time: 0.0047  lr: 0.01  max_mem: 0M
[32m[11/15 09:24:46 d2.utils.events]: [0m eta: 0:31:11  iter: 2479  total_loss: 1.091  loss_cls: 0.1826  loss_box_reg: 0.3751  loss_mask: 0.1832  loss_rpn_cls: 0.08556  loss_rpn_loc: 0.2735  time: 3.6517  data_time: 0.0037  lr: 0.01  max_mem: 0M
[32m[11/15 09:26:04 d2.utils.events]: [0m eta: 0:30:01  iter: 2499  total_loss: 1.053  loss_cls: 0.1635  loss_box_reg: 0.3669  loss_mask: 0.1749  loss_rpn_cls: 0.08045  loss_rpn_loc: 0.2617  time: 3.6536  data_time: 0.0048  lr: 0.01  max_mem: 0M
[32m[11/15 09:27:19 d2.utils.events]: [0m eta: 0:28:53  iter: 2519  total_loss: 1.075  loss_cls: 0.1713  loss_box_reg: 0.3904  loss_mask: 0.1825  loss_rpn_cls: 0.08231  loss_rpn_loc: 0.2614  time: 3.6546  data_time: 0.0057  lr: 0.01  max_mem: 0M
[32m[11/15 09:28:33 d2.utils.events]: [0m eta: 0:27:42  iter: 2539  total_loss: 1.092  loss_cls: 0.1626  loss_box_reg: 0.3671  loss_mask: 0.1732  loss_rpn_cls: 0.09035  loss_rpn_loc: 0.28  time: 3.6547  data_time: 0.0048  lr: 0.01  max_mem: 0M
[32m[11/15 09:29:45 d2.utils.events]: [0m eta: 0:26:30  iter: 2559  total_loss: 1.097  loss_cls: 0.1671  loss_box_reg: 0.3754  loss_mask: 0.1872  loss_rpn_cls: 0.09231  loss_rpn_loc: 0.2973  time: 3.6545  data_time: 0.0026  lr: 0.01  max_mem: 0M
[32m[11/15 09:31:00 d2.utils.events]: [0m eta: 0:25:17  iter: 2579  total_loss: 1.109  loss_cls: 0.1557  loss_box_reg: 0.3565  loss_mask: 0.178  loss_rpn_cls: 0.1161  loss_rpn_loc: 0.2842  time: 3.6552  data_time: 0.0049  lr: 0.01  max_mem: 0M
[32m[11/15 09:32:15 d2.utils.events]: [0m eta: 0:24:09  iter: 2599  total_loss: 1.129  loss_cls: 0.1873  loss_box_reg: 0.3663  loss_mask: 0.1896  loss_rpn_cls: 0.09179  loss_rpn_loc: 0.2667  time: 3.6560  data_time: 0.0052  lr: 0.01  max_mem: 0M
[32m[11/15 09:33:27 d2.utils.events]: [0m eta: 0:22:57  iter: 2619  total_loss: 1.081  loss_cls: 0.1691  loss_box_reg: 0.3718  loss_mask: 0.1848  loss_rpn_cls: 0.08498  loss_rpn_loc: 0.264  time: 3.6554  data_time: 0.0068  lr: 0.01  max_mem: 0M
[32m[11/15 09:34:43 d2.utils.events]: [0m eta: 0:21:44  iter: 2639  total_loss: 1.083  loss_cls: 0.1678  loss_box_reg: 0.3742  loss_mask: 0.1836  loss_rpn_cls: 0.08202  loss_rpn_loc: 0.2702  time: 3.6563  data_time: 0.0077  lr: 0.01  max_mem: 0M
[32m[11/15 09:35:58 d2.utils.events]: [0m eta: 0:20:34  iter: 2659  total_loss: 1.115  loss_cls: 0.1709  loss_box_reg: 0.3802  loss_mask: 0.1716  loss_rpn_cls: 0.1076  loss_rpn_loc: 0.2682  time: 3.6571  data_time: 0.0065  lr: 0.01  max_mem: 0M
[32m[11/15 09:37:11 d2.utils.events]: [0m eta: 0:19:16  iter: 2679  total_loss: 1.148  loss_cls: 0.1605  loss_box_reg: 0.3927  loss_mask: 0.182  loss_rpn_cls: 0.1201  loss_rpn_loc: 0.2663  time: 3.6569  data_time: 0.0072  lr: 0.01  max_mem: 0M
[32m[11/15 09:38:24 d2.utils.events]: [0m eta: 0:18:04  iter: 2699  total_loss: 1.045  loss_cls: 0.1468  loss_box_reg: 0.3765  loss_mask: 0.1749  loss_rpn_cls: 0.06936  loss_rpn_loc: 0.3009  time: 3.6569  data_time: 0.0048  lr: 0.01  max_mem: 0M
[32m[11/15 09:39:35 d2.utils.events]: [0m eta: 0:16:50  iter: 2719  total_loss: 1.065  loss_cls: 0.1582  loss_box_reg: 0.3695  loss_mask: 0.1827  loss_rpn_cls: 0.1084  loss_rpn_loc: 0.2825  time: 3.6560  data_time: 0.0038  lr: 0.01  max_mem: 0M
[32m[11/15 09:40:52 d2.utils.events]: [0m eta: 0:15:38  iter: 2739  total_loss: 1.088  loss_cls: 0.1492  loss_box_reg: 0.389  loss_mask: 0.1696  loss_rpn_cls: 0.09449  loss_rpn_loc: 0.2645  time: 3.6576  data_time: 0.0035  lr: 0.01  max_mem: 0M
[32m[11/15 09:42:05 d2.utils.events]: [0m eta: 0:14:25  iter: 2759  total_loss: 1.043  loss_cls: 0.1527  loss_box_reg: 0.3588  loss_mask: 0.1696  loss_rpn_cls: 0.08069  loss_rpn_loc: 0.2847  time: 3.6574  data_time: 0.0050  lr: 0.01  max_mem: 0M
[32m[11/15 09:43:19 d2.utils.events]: [0m eta: 0:13:13  iter: 2779  total_loss: 1.072  loss_cls: 0.1621  loss_box_reg: 0.3519  loss_mask: 0.1817  loss_rpn_cls: 0.07496  loss_rpn_loc: 0.2995  time: 3.6578  data_time: 0.0048  lr: 0.01  max_mem: 0M
[32m[11/15 09:44:32 d2.utils.events]: [0m eta: 0:12:02  iter: 2799  total_loss: 1.052  loss_cls: 0.1533  loss_box_reg: 0.3554  loss_mask: 0.1767  loss_rpn_cls: 0.08035  loss_rpn_loc: 0.2631  time: 3.6578  data_time: 0.0049  lr: 0.01  max_mem: 0M
[32m[11/15 09:45:49 d2.utils.events]: [0m eta: 0:10:52  iter: 2819  total_loss: 1.04  loss_cls: 0.1682  loss_box_reg: 0.3509  loss_mask: 0.1638  loss_rpn_cls: 0.1  loss_rpn_loc: 0.2603  time: 3.6590  data_time: 0.0071  lr: 0.01  max_mem: 0M
[32m[11/15 09:47:03 d2.utils.events]: [0m eta: 0:09:41  iter: 2839  total_loss: 1.04  loss_cls: 0.1567  loss_box_reg: 0.3565  loss_mask: 0.1723  loss_rpn_cls: 0.09322  loss_rpn_loc: 0.2574  time: 3.6593  data_time: 0.0051  lr: 0.01  max_mem: 0M
[32m[11/15 09:48:16 d2.utils.events]: [0m eta: 0:08:28  iter: 2859  total_loss: 1.026  loss_cls: 0.1364  loss_box_reg: 0.3395  loss_mask: 0.1693  loss_rpn_cls: 0.1081  loss_rpn_loc: 0.2618  time: 3.6593  data_time: 0.0041  lr: 0.01  max_mem: 0M
[32m[11/15 09:49:30 d2.utils.events]: [0m eta: 0:07:16  iter: 2879  total_loss: 1.066  loss_cls: 0.1543  loss_box_reg: 0.3572  loss_mask: 0.1705  loss_rpn_cls: 0.1047  loss_rpn_loc: 0.2759  time: 3.6594  data_time: 0.0052  lr: 0.01  max_mem: 0M
[32m[11/15 09:50:42 d2.utils.events]: [0m eta: 0:06:03  iter: 2899  total_loss: 1.037  loss_cls: 0.1566  loss_box_reg: 0.3541  loss_mask: 0.1712  loss_rpn_cls: 0.0925  loss_rpn_loc: 0.2504  time: 3.6592  data_time: 0.0037  lr: 0.01  max_mem: 0M
[32m[11/15 09:51:59 d2.utils.events]: [0m eta: 0:04:51  iter: 2919  total_loss: 0.9755  loss_cls: 0.1464  loss_box_reg: 0.3384  loss_mask: 0.1592  loss_rpn_cls: 0.08306  loss_rpn_loc: 0.244  time: 3.6606  data_time: 0.0062  lr: 0.01  max_mem: 0M
[32m[11/15 09:53:10 d2.utils.events]: [0m eta: 0:03:38  iter: 2939  total_loss: 0.9897  loss_cls: 0.1475  loss_box_reg: 0.349  loss_mask: 0.171  loss_rpn_cls: 0.09289  loss_rpn_loc: 0.2436  time: 3.6598  data_time: 0.0046  lr: 0.01  max_mem: 0M
[32m[11/15 09:54:26 d2.utils.events]: [0m eta: 0:02:25  iter: 2959  total_loss: 1.01  loss_cls: 0.1415  loss_box_reg: 0.3289  loss_mask: 0.167  loss_rpn_cls: 0.07867  loss_rpn_loc: 0.2487  time: 3.6605  data_time: 0.0043  lr: 0.01  max_mem: 0M
[32m[11/15 09:55:42 d2.utils.events]: [0m eta: 0:01:12  iter: 2979  total_loss: 1.02  loss_cls: 0.1384  loss_box_reg: 0.3439  loss_mask: 0.1686  loss_rpn_cls: 0.09555  loss_rpn_loc: 0.2742  time: 3.6616  data_time: 0.0048  lr: 0.01  max_mem: 0M
[32m[11/15 09:56:55 d2.utils.events]: [0m eta: 0:00:00  iter: 2999  total_loss: 1.014  loss_cls: 0.1425  loss_box_reg: 0.3329  loss_mask: 0.1724  loss_rpn_cls: 0.08999  loss_rpn_loc: 0.2654  time: 3.6613  data_time: 0.0042  lr: 0.01  max_mem: 0M
[32m[11/15 09:56:56 d2.engine.hooks]: [0mOverall training speed: 2998 iterations in 3:02:56 (3.6614 s / it)
[32m[11/15 09:56:56 d2.engine.hooks]: [0mTotal training time: 3:03:03 (0:00:07 on hooks)
[32m[11/15 09:56:56 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[32m[11/15 09:56:56 d2.data.common]: [0mSerializing 20 elements to byte tensors and concatenating them all ...
[32m[11/15 09:56:56 d2.data.common]: [0mSerialized dataset takes 0.46 MiB
[5m[31mWARNING[0m [32m[11/15 09:56:56 d2.engine.defaults]: [0mNo evaluator found. Use `DefaultTrainer.test(evaluators=)`, or implement its `build_evaluator` method.
[32m[11/15 09:56:56 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[32m[11/15 09:56:56 d2.data.common]: [0mSerializing 6 elements to byte tensors and concatenating them all ...
[32m[11/15 09:56:56 d2.data.common]: [0mSerialized dataset takes 0.11 MiB
[5m[31mWARNING[0m [32m[11/15 09:56:56 d2.engine.defaults]: [0mNo evaluator found. Use `DefaultTrainer.test(evaluators=)`, or implement its `build_evaluator` method.
USING MODEL WEIGHT: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp21/model_0002999.pth
Dataset: satellite_Val
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S08_03_SE1_1000X03.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S08_03_SE1_1000X03.png
	num_instances: 110
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S06_01_SE1_500X67.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S06_01_SE1_500X67.png
	num_instances: 125
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S04_02_SE1_1000X50.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S04_02_SE1_1000X50.png
	num_instances: 55
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S03_03_SE1_1250X41.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S03_03_SE1_1250X41.png
	num_instances: 127
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S02_01_SE1_300X14.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S02_01_SE1_300X14.png
	num_instances: 93
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/HP743_2S_250x.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/HP743_2S_250x.png
	num_instances: 57
gt filename: S08_03_SE1_1000X03.png	 pred filename: S08_03_SE1_1000X03.png
gt filename: S06_01_SE1_500X67.png	 pred filename: S06_01_SE1_500X67.png
gt filename: S04_02_SE1_1000X50.png	 pred filename: S04_02_SE1_1000X50.png
gt filename: S03_03_SE1_1250X41.png	 pred filename: S03_03_SE1_1250X41.png
gt filename: S02_01_SE1_300X14.png	 pred filename: S02_01_SE1_300X14.png
gt filename: HP743_2S_250x.png	 pred filename: HP743_2S_250x.png
x:  [1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2]
y:  [0.48, 0.14, 0.53, 0.49, 0.52, 0.56, 0.6, 0.31, 0.64, 0.56, 0.49, 0.65]
Average Precision Score:  0.4518020710831427
Average Recall Score:     0.5438246146579481
Precision: 0.4397304517723992
Recall: 0.6498143892522539
---
Precision: 0.1195182753414557
Recall: 0.4533830580713905
---
Precision: 0.722147789343502
Recall: 0.6471185814554857
---
Precision: 0.4593243078424198
Recall: 0.5565791418296467
---
Precision: 0.673469387755102
Recall: 0.5912052117263844
---
Precision: 0.5565616045845272
Recall: 0.6084450570103997
---
USING MODEL WEIGHT: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp21/model_final.pth
Dataset: satellite_Val
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S08_03_SE1_1000X03.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S08_03_SE1_1000X03.png
	num_instances: 110
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S06_01_SE1_500X67.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S06_01_SE1_500X67.png
	num_instances: 125
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S04_02_SE1_1000X50.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S04_02_SE1_1000X50.png
	num_instances: 55
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S03_03_SE1_1250X41.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S03_03_SE1_1250X41.png
	num_instances: 127
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S02_01_SE1_300X14.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S02_01_SE1_300X14.png
	num_instances: 93
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/HP743_2S_250x.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/HP743_2S_250x.png
	num_instances: 57
gt filename: S08_03_SE1_1000X03.png	 pred filename: S08_03_SE1_1000X03.png
gt filename: S06_01_SE1_500X67.png	 pred filename: S06_01_SE1_500X67.png
gt filename: S04_02_SE1_1000X50.png	 pred filename: S04_02_SE1_1000X50.png
gt filename: S03_03_SE1_1250X41.png	 pred filename: S03_03_SE1_1250X41.png
gt filename: S02_01_SE1_300X14.png	 pred filename: S02_01_SE1_300X14.png
gt filename: HP743_2S_250x.png	 pred filename: HP743_2S_250x.png
x:  [1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2]
y:  [0.48, 0.14, 0.53, 0.49, 0.52, 0.56, 0.6, 0.31, 0.64, 0.56, 0.49, 0.65]
Average Precision Score:  0.4518020710831427
Average Recall Score:     0.5438246146579481
Precision: 0.4397304517723992
Recall: 0.6498143892522539
---
Precision: 0.1195182753414557
Recall: 0.4533830580713905
---
Precision: 0.722147789343502
Recall: 0.6471185814554857
---
Precision: 0.4593243078424198
Recall: 0.5565791418296467
---
Precision: 0.673469387755102
Recall: 0.5912052117263844
---
Precision: 0.5565616045845272
Recall: 0.6084450570103997
---
Ignoring Final Model
Deleting: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp21/model_0002999.pth
Current File Path
../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp21/model_0002999.pth
New File Path
../../../../../../../ocean/projects/dmr200021p/sprice/variance/CPU_NO_CONFIG/trial1/model2.pth
Deleting: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp21/model_final.pth
Current File Path
../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp21/model_final.pth
New File Path
../../../../../../../ocean/projects/dmr200021p/sprice/variance/CPU_NO_CONFIG/trial1/model2.pth
Deleting: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp21/results_checkpoint_0002999.pickle
../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp21/results_checkpoint_0002999.pickle
Deleting: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp21/results_checkpoint_final.pickle
../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp21/results_checkpoint_final.pickle
Removing: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp21/metrics.json
Removing: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp21/last_checkpoint
/var/spool/slurm/d/job5037837/slurm_script: line 9: ./gpua.out: No such file or directory
