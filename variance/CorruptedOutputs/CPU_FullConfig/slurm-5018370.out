[W Context.cpp:70] Warning: torch.use_deterministic_algorithms is in beta, and its design and functionality may change in the future. (function operator())
Registered Datasets: ['satellite_Train', 'satellite_Val']
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/HP743_4S_500x.png
	num_instances: 103
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S08_01_SE1_1000X94.png
	num_instances: 68
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/HP743_6S_250x.png
	num_instances: 102
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S08_03_SE1_1000X03.png
	num_instances: 88
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S06_01_SE1_500X67.png
	num_instances: 54
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S04_02_SE1_1000X50.png
	num_instances: 45
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S03_03_SE1_1250X41.png
	num_instances: 111
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S02_01_SE1_300X14.png
	num_instances: 98
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/HP743_2S_250x.png
	num_instances: 49
Weights not found, weights will be downloaded from source: https://dl.fbaipublicfiles.com/detectron2/COCO-InstanceSegmentation/mask_rcnn_R_50_FPN_3x/137849600/model_final_f10217.pkl
[32m[11/13 21:28:39 d2.engine.defaults]: [0mModel:
GeneralizedRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): StandardROIHeads(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): FastRCNNConvFCHead(
      (flatten): Flatten(start_dim=1, end_dim=-1)
      (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      (fc_relu1): ReLU()
      (fc2): Linear(in_features=1024, out_features=1024, bias=True)
      (fc_relu2): ReLU()
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=1024, out_features=2, bias=True)
      (bbox_pred): Linear(in_features=1024, out_features=4, bias=True)
    )
    (mask_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(14, 14), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(14, 14), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (mask_head): MaskRCNNConvUpsampleHead(
      (mask_fcn1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn2): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn3): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn4): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
      (deconv_relu): ReLU()
      (predictor): Conv2d(256, 1, kernel_size=(1, 1), stride=(1, 1))
    )
  )
)
[32m[11/13 21:28:39 d2.data.build]: [0mRemoved 0 images with no usable annotations. 20 images left.
[32m[11/13 21:28:39 d2.data.build]: [0mDistribution of instances among all 1 categories:
[36m|  category  | #instances   |
|:----------:|:-------------|
| satellite  | 1412         |
|            |              |[0m
[32m[11/13 21:28:40 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice')]
[32m[11/13 21:28:40 d2.data.build]: [0mUsing training sampler TrainingSampler
[32m[11/13 21:28:40 d2.data.common]: [0mSerializing 20 elements to byte tensors and concatenating them all ...
[32m[11/13 21:28:40 d2.data.common]: [0mSerialized dataset takes 0.46 MiB
[5m[31mWARNING[0m [32m[11/13 21:28:40 d2.solver.build]: [0mSOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[32m[11/13 21:28:40 d2.checkpoint.c2_model_loading]: [0mRenaming Caffe2 weights ......
[32m[11/13 21:28:40 d2.checkpoint.c2_model_loading]: [0mFollowing weights matched with submodule backbone.bottom_up:
| Names in Model    | Names in Checkpoint      | Shapes                                          |
|:------------------|:-------------------------|:------------------------------------------------|
| res2.0.conv1.*    | res2_0_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,1,1)             |
| res2.0.conv2.*    | res2_0_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.0.conv3.*    | res2_0_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.0.shortcut.* | res2_0_branch1_{bn_*,w}  | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.1.conv1.*    | res2_1_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,256,1,1)            |
| res2.1.conv2.*    | res2_1_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.1.conv3.*    | res2_1_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.2.conv1.*    | res2_2_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,256,1,1)            |
| res2.2.conv2.*    | res2_2_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.2.conv3.*    | res2_2_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res3.0.conv1.*    | res3_0_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,256,1,1)       |
| res3.0.conv2.*    | res3_0_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.0.conv3.*    | res3_0_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.0.shortcut.* | res3_0_branch1_{bn_*,w}  | (512,) (512,) (512,) (512,) (512,256,1,1)       |
| res3.1.conv1.*    | res3_1_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.1.conv2.*    | res3_1_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.1.conv3.*    | res3_1_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.2.conv1.*    | res3_2_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.2.conv2.*    | res3_2_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.2.conv3.*    | res3_2_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.3.conv1.*    | res3_3_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.3.conv2.*    | res3_3_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.3.conv3.*    | res3_3_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res4.0.conv1.*    | res4_0_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,512,1,1)       |
| res4.0.conv2.*    | res4_0_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.0.conv3.*    | res4_0_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.0.shortcut.* | res4_0_branch1_{bn_*,w}  | (1024,) (1024,) (1024,) (1024,) (1024,512,1,1)  |
| res4.1.conv1.*    | res4_1_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.1.conv2.*    | res4_1_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.1.conv3.*    | res4_1_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.2.conv1.*    | res4_2_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.2.conv2.*    | res4_2_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.2.conv3.*    | res4_2_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.3.conv1.*    | res4_3_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.3.conv2.*    | res4_3_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.3.conv3.*    | res4_3_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.4.conv1.*    | res4_4_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.4.conv2.*    | res4_4_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.4.conv3.*    | res4_4_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.5.conv1.*    | res4_5_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.5.conv2.*    | res4_5_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.5.conv3.*    | res4_5_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res5.0.conv1.*    | res5_0_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,1024,1,1)      |
| res5.0.conv2.*    | res5_0_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.0.conv3.*    | res5_0_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| res5.0.shortcut.* | res5_0_branch1_{bn_*,w}  | (2048,) (2048,) (2048,) (2048,) (2048,1024,1,1) |
| res5.1.conv1.*    | res5_1_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,2048,1,1)      |
| res5.1.conv2.*    | res5_1_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.1.conv3.*    | res5_1_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| res5.2.conv1.*    | res5_2_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,2048,1,1)      |
| res5.2.conv2.*    | res5_2_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.2.conv3.*    | res5_2_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| stem.conv1.norm.* | res_conv1_bn_*           | (64,) (64,) (64,) (64,)                         |
| stem.conv1.weight | conv1_w                  | (64, 3, 7, 7)                                   |
[32m[11/13 21:28:40 d2.engine.train_loop]: [0mStarting training from iteration 0
[32m[11/13 21:29:48 d2.utils.events]: [0m eta: 2:44:19  iter: 19  total_loss: 3.299  loss_cls: 0.5196  loss_box_reg: 0.02739  loss_mask: 0.6726  loss_rpn_cls: 0.6624  loss_rpn_loc: 1.269  time: 3.2811  data_time: 0.0139  lr: 0.00019981  max_mem: 0M
[32m[11/13 21:30:47 d2.utils.events]: [0m eta: 2:33:04  iter: 39  total_loss: 2.408  loss_cls: 0.353  loss_box_reg: 0.0366  loss_mask: 0.5966  loss_rpn_cls: 0.6079  loss_rpn_loc: 0.8124  time: 3.1122  data_time: 0.0044  lr: 0.00039961  max_mem: 0M
[32m[11/13 21:31:48 d2.utils.events]: [0m eta: 2:31:44  iter: 59  total_loss: 2.14  loss_cls: 0.2758  loss_box_reg: 0.06761  loss_mask: 0.5832  loss_rpn_cls: 0.5732  loss_rpn_loc: 0.6399  time: 3.0856  data_time: 0.0052  lr: 0.00059941  max_mem: 0M
[32m[11/13 21:32:55 d2.utils.events]: [0m eta: 2:30:37  iter: 79  total_loss: 2.088  loss_cls: 0.2408  loss_box_reg: 0.167  loss_mask: 0.5632  loss_rpn_cls: 0.5431  loss_rpn_loc: 0.5478  time: 3.1498  data_time: 0.0034  lr: 0.00079921  max_mem: 0M
[32m[11/13 21:34:03 d2.utils.events]: [0m eta: 2:32:33  iter: 99  total_loss: 2.122  loss_cls: 0.2652  loss_box_reg: 0.3352  loss_mask: 0.54  loss_rpn_cls: 0.4601  loss_rpn_loc: 0.5138  time: 3.2012  data_time: 0.0062  lr: 0.00099901  max_mem: 0M
[32m[11/13 21:35:10 d2.utils.events]: [0m eta: 2:32:01  iter: 119  total_loss: 2.116  loss_cls: 0.2833  loss_box_reg: 0.4248  loss_mask: 0.5117  loss_rpn_cls: 0.3868  loss_rpn_loc: 0.5009  time: 3.2238  data_time: 0.0059  lr: 0.0011988  max_mem: 0M
[32m[11/13 21:36:16 d2.utils.events]: [0m eta: 2:31:03  iter: 139  total_loss: 2.029  loss_cls: 0.27  loss_box_reg: 0.4271  loss_mask: 0.4687  loss_rpn_cls: 0.3358  loss_rpn_loc: 0.4981  time: 3.2395  data_time: 0.0047  lr: 0.0013986  max_mem: 0M
[32m[11/13 21:37:31 d2.utils.events]: [0m eta: 2:30:36  iter: 159  total_loss: 2.026  loss_cls: 0.3394  loss_box_reg: 0.4839  loss_mask: 0.4366  loss_rpn_cls: 0.3428  loss_rpn_loc: 0.4938  time: 3.3045  data_time: 0.0051  lr: 0.0015984  max_mem: 0M
[32m[11/13 21:38:37 d2.utils.events]: [0m eta: 2:29:34  iter: 179  total_loss: 1.86  loss_cls: 0.2701  loss_box_reg: 0.4661  loss_mask: 0.4145  loss_rpn_cls: 0.289  loss_rpn_loc: 0.4701  time: 3.3030  data_time: 0.0037  lr: 0.0017982  max_mem: 0M
[32m[11/13 21:39:46 d2.utils.events]: [0m eta: 2:29:49  iter: 199  total_loss: 1.815  loss_cls: 0.2634  loss_box_reg: 0.4287  loss_mask: 0.3863  loss_rpn_cls: 0.2698  loss_rpn_loc: 0.4557  time: 3.3150  data_time: 0.0058  lr: 0.001998  max_mem: 0M
[32m[11/13 21:40:53 d2.utils.events]: [0m eta: 2:29:32  iter: 219  total_loss: 1.72  loss_cls: 0.242  loss_box_reg: 0.4053  loss_mask: 0.3469  loss_rpn_cls: 0.2643  loss_rpn_loc: 0.4341  time: 3.3172  data_time: 0.0048  lr: 0.0021978  max_mem: 0M
[32m[11/13 21:42:05 d2.utils.events]: [0m eta: 2:29:56  iter: 239  total_loss: 1.725  loss_cls: 0.2392  loss_box_reg: 0.4024  loss_mask: 0.3397  loss_rpn_cls: 0.2449  loss_rpn_loc: 0.4859  time: 3.3435  data_time: 0.0040  lr: 0.0023976  max_mem: 0M
[32m[11/13 21:43:15 d2.utils.events]: [0m eta: 2:29:02  iter: 259  total_loss: 1.692  loss_cls: 0.2453  loss_box_reg: 0.4473  loss_mask: 0.3233  loss_rpn_cls: 0.2331  loss_rpn_loc: 0.4519  time: 3.3536  data_time: 0.0038  lr: 0.0025974  max_mem: 0M
[32m[11/13 21:44:24 d2.utils.events]: [0m eta: 2:28:27  iter: 279  total_loss: 1.522  loss_cls: 0.1992  loss_box_reg: 0.4029  loss_mask: 0.3234  loss_rpn_cls: 0.1905  loss_rpn_loc: 0.4145  time: 3.3628  data_time: 0.0041  lr: 0.0027972  max_mem: 0M
[32m[11/13 21:45:36 d2.utils.events]: [0m eta: 2:29:36  iter: 299  total_loss: 1.673  loss_cls: 0.2366  loss_box_reg: 0.4892  loss_mask: 0.2994  loss_rpn_cls: 0.2245  loss_rpn_loc: 0.4008  time: 3.3764  data_time: 0.0054  lr: 0.002997  max_mem: 0M
[32m[11/13 21:46:44 d2.utils.events]: [0m eta: 2:28:40  iter: 319  total_loss: 1.709  loss_cls: 0.2342  loss_box_reg: 0.4658  loss_mask: 0.3201  loss_rpn_cls: 0.2235  loss_rpn_loc: 0.4063  time: 3.3783  data_time: 0.0052  lr: 0.0031968  max_mem: 0M
[32m[11/13 21:48:01 d2.utils.events]: [0m eta: 2:28:06  iter: 339  total_loss: 1.696  loss_cls: 0.2512  loss_box_reg: 0.4661  loss_mask: 0.31  loss_rpn_cls: 0.2054  loss_rpn_loc: 0.4611  time: 3.4078  data_time: 0.0067  lr: 0.0033966  max_mem: 0M
[32m[11/13 21:49:12 d2.utils.events]: [0m eta: 2:27:26  iter: 359  total_loss: 1.581  loss_cls: 0.2242  loss_box_reg: 0.4942  loss_mask: 0.2884  loss_rpn_cls: 0.1947  loss_rpn_loc: 0.3806  time: 3.4150  data_time: 0.0046  lr: 0.0035964  max_mem: 0M
[32m[11/13 21:50:20 d2.utils.events]: [0m eta: 2:26:19  iter: 379  total_loss: 1.543  loss_cls: 0.2093  loss_box_reg: 0.4049  loss_mask: 0.295  loss_rpn_cls: 0.2249  loss_rpn_loc: 0.3885  time: 3.4143  data_time: 0.0041  lr: 0.0037962  max_mem: 0M
[32m[11/13 21:51:30 d2.utils.events]: [0m eta: 2:25:27  iter: 399  total_loss: 1.515  loss_cls: 0.2063  loss_box_reg: 0.4246  loss_mask: 0.2744  loss_rpn_cls: 0.2234  loss_rpn_loc: 0.4282  time: 3.4184  data_time: 0.0048  lr: 0.003996  max_mem: 0M
[32m[11/13 21:52:43 d2.utils.events]: [0m eta: 2:24:47  iter: 419  total_loss: 1.537  loss_cls: 0.1888  loss_box_reg: 0.4327  loss_mask: 0.2663  loss_rpn_cls: 0.2287  loss_rpn_loc: 0.4275  time: 3.4298  data_time: 0.0038  lr: 0.0041958  max_mem: 0M
[32m[11/13 21:53:54 d2.utils.events]: [0m eta: 2:24:03  iter: 439  total_loss: 1.576  loss_cls: 0.2122  loss_box_reg: 0.4559  loss_mask: 0.2701  loss_rpn_cls: 0.1717  loss_rpn_loc: 0.4064  time: 3.4332  data_time: 0.0042  lr: 0.0043956  max_mem: 0M
[32m[11/13 21:55:03 d2.utils.events]: [0m eta: 2:23:12  iter: 459  total_loss: 1.458  loss_cls: 0.2153  loss_box_reg: 0.4681  loss_mask: 0.271  loss_rpn_cls: 0.1881  loss_rpn_loc: 0.3691  time: 3.4356  data_time: 0.0032  lr: 0.0045954  max_mem: 0M
[32m[11/13 21:56:12 d2.utils.events]: [0m eta: 2:22:04  iter: 479  total_loss: 1.41  loss_cls: 0.1933  loss_box_reg: 0.4316  loss_mask: 0.2586  loss_rpn_cls: 0.1621  loss_rpn_loc: 0.3775  time: 3.4352  data_time: 0.0049  lr: 0.0047952  max_mem: 0M
[32m[11/13 21:57:26 d2.utils.events]: [0m eta: 2:21:12  iter: 499  total_loss: 1.511  loss_cls: 0.1749  loss_box_reg: 0.4137  loss_mask: 0.2552  loss_rpn_cls: 0.2018  loss_rpn_loc: 0.3978  time: 3.4470  data_time: 0.0059  lr: 0.004995  max_mem: 0M
[32m[11/13 21:58:34 d2.utils.events]: [0m eta: 2:19:49  iter: 519  total_loss: 1.51  loss_cls: 0.2235  loss_box_reg: 0.453  loss_mask: 0.2581  loss_rpn_cls: 0.1837  loss_rpn_loc: 0.3937  time: 3.4446  data_time: 0.0040  lr: 0.0051948  max_mem: 0M
[32m[11/13 21:59:43 d2.utils.events]: [0m eta: 2:19:01  iter: 539  total_loss: 1.408  loss_cls: 0.219  loss_box_reg: 0.43  loss_mask: 0.25  loss_rpn_cls: 0.1416  loss_rpn_loc: 0.3722  time: 3.4450  data_time: 0.0062  lr: 0.0053946  max_mem: 0M
[32m[11/13 22:00:56 d2.utils.events]: [0m eta: 2:18:21  iter: 559  total_loss: 1.441  loss_cls: 0.2292  loss_box_reg: 0.4483  loss_mask: 0.2525  loss_rpn_cls: 0.136  loss_rpn_loc: 0.3599  time: 3.4506  data_time: 0.0028  lr: 0.0055944  max_mem: 0M
[32m[11/13 22:02:15 d2.utils.events]: [0m eta: 2:17:44  iter: 579  total_loss: 1.459  loss_cls: 0.2132  loss_box_reg: 0.4371  loss_mask: 0.2581  loss_rpn_cls: 0.183  loss_rpn_loc: 0.4093  time: 3.4679  data_time: 0.0052  lr: 0.0057942  max_mem: 0M
[32m[11/13 22:03:32 d2.utils.events]: [0m eta: 2:17:12  iter: 599  total_loss: 1.534  loss_cls: 0.2259  loss_box_reg: 0.4604  loss_mask: 0.2505  loss_rpn_cls: 0.1613  loss_rpn_loc: 0.4157  time: 3.4806  data_time: 0.0037  lr: 0.005994  max_mem: 0M
[32m[11/13 22:04:43 d2.utils.events]: [0m eta: 2:16:10  iter: 619  total_loss: 1.498  loss_cls: 0.2039  loss_box_reg: 0.4468  loss_mask: 0.2554  loss_rpn_cls: 0.1536  loss_rpn_loc: 0.3991  time: 3.4831  data_time: 0.0026  lr: 0.0061938  max_mem: 0M
[32m[11/13 22:05:57 d2.utils.events]: [0m eta: 2:15:11  iter: 639  total_loss: 1.436  loss_cls: 0.2273  loss_box_reg: 0.4307  loss_mask: 0.235  loss_rpn_cls: 0.1391  loss_rpn_loc: 0.3758  time: 3.4905  data_time: 0.0032  lr: 0.0063936  max_mem: 0M
[32m[11/13 22:07:12 d2.utils.events]: [0m eta: 2:14:16  iter: 659  total_loss: 1.49  loss_cls: 0.2199  loss_box_reg: 0.4233  loss_mask: 0.2492  loss_rpn_cls: 0.1565  loss_rpn_loc: 0.407  time: 3.4980  data_time: 0.0035  lr: 0.0065934  max_mem: 0M
[32m[11/13 22:08:27 d2.utils.events]: [0m eta: 2:13:18  iter: 679  total_loss: 1.456  loss_cls: 0.2417  loss_box_reg: 0.4396  loss_mask: 0.236  loss_rpn_cls: 0.1653  loss_rpn_loc: 0.3801  time: 3.5056  data_time: 0.0049  lr: 0.0067932  max_mem: 0M
[32m[11/13 22:09:40 d2.utils.events]: [0m eta: 2:12:33  iter: 699  total_loss: 1.433  loss_cls: 0.2029  loss_box_reg: 0.4358  loss_mask: 0.2429  loss_rpn_cls: 0.1624  loss_rpn_loc: 0.3928  time: 3.5097  data_time: 0.0059  lr: 0.006993  max_mem: 0M
[32m[11/13 22:10:54 d2.utils.events]: [0m eta: 2:11:27  iter: 719  total_loss: 1.469  loss_cls: 0.2041  loss_box_reg: 0.4347  loss_mask: 0.2372  loss_rpn_cls: 0.1714  loss_rpn_loc: 0.4186  time: 3.5143  data_time: 0.0081  lr: 0.0071928  max_mem: 0M
[32m[11/13 22:12:10 d2.utils.events]: [0m eta: 2:10:42  iter: 739  total_loss: 1.322  loss_cls: 0.1705  loss_box_reg: 0.4172  loss_mask: 0.2309  loss_rpn_cls: 0.1396  loss_rpn_loc: 0.3769  time: 3.5223  data_time: 0.0090  lr: 0.0073926  max_mem: 0M
[32m[11/13 22:13:22 d2.utils.events]: [0m eta: 2:09:35  iter: 759  total_loss: 1.289  loss_cls: 0.1732  loss_box_reg: 0.383  loss_mask: 0.2196  loss_rpn_cls: 0.1555  loss_rpn_loc: 0.362  time: 3.5239  data_time: 0.0074  lr: 0.0075924  max_mem: 0M
[32m[11/13 22:14:37 d2.utils.events]: [0m eta: 2:08:42  iter: 779  total_loss: 1.291  loss_cls: 0.1905  loss_box_reg: 0.4303  loss_mask: 0.2184  loss_rpn_cls: 0.1315  loss_rpn_loc: 0.3549  time: 3.5303  data_time: 0.0080  lr: 0.0077922  max_mem: 0M
[32m[11/13 22:15:49 d2.utils.events]: [0m eta: 2:07:47  iter: 799  total_loss: 1.376  loss_cls: 0.1858  loss_box_reg: 0.4334  loss_mask: 0.2281  loss_rpn_cls: 0.1577  loss_rpn_loc: 0.3982  time: 3.5317  data_time: 0.0085  lr: 0.007992  max_mem: 0M
[32m[11/13 22:17:10 d2.utils.events]: [0m eta: 2:06:54  iter: 819  total_loss: 1.363  loss_cls: 0.1949  loss_box_reg: 0.4268  loss_mask: 0.2227  loss_rpn_cls: 0.1528  loss_rpn_loc: 0.3868  time: 3.5445  data_time: 0.0052  lr: 0.0081918  max_mem: 0M
[32m[11/13 22:18:19 d2.utils.events]: [0m eta: 2:05:40  iter: 839  total_loss: 1.318  loss_cls: 0.1918  loss_box_reg: 0.4534  loss_mask: 0.227  loss_rpn_cls: 0.1338  loss_rpn_loc: 0.3394  time: 3.5417  data_time: 0.0036  lr: 0.0083916  max_mem: 0M
[32m[11/13 22:19:28 d2.utils.events]: [0m eta: 2:04:18  iter: 859  total_loss: 1.351  loss_cls: 0.1891  loss_box_reg: 0.4223  loss_mask: 0.2126  loss_rpn_cls: 0.1243  loss_rpn_loc: 0.3518  time: 3.5394  data_time: 0.0032  lr: 0.0085914  max_mem: 0M
[32m[11/13 22:20:36 d2.utils.events]: [0m eta: 2:02:57  iter: 879  total_loss: 1.375  loss_cls: 0.1962  loss_box_reg: 0.4361  loss_mask: 0.219  loss_rpn_cls: 0.1459  loss_rpn_loc: 0.3533  time: 3.5369  data_time: 0.0033  lr: 0.0087912  max_mem: 0M
[32m[11/13 22:21:46 d2.utils.events]: [0m eta: 2:01:44  iter: 899  total_loss: 1.334  loss_cls: 0.1739  loss_box_reg: 0.4279  loss_mask: 0.2231  loss_rpn_cls: 0.1595  loss_rpn_loc: 0.36  time: 3.5358  data_time: 0.0042  lr: 0.008991  max_mem: 0M
[32m[11/13 22:23:01 d2.utils.events]: [0m eta: 2:00:38  iter: 919  total_loss: 1.288  loss_cls: 0.1548  loss_box_reg: 0.3835  loss_mask: 0.2123  loss_rpn_cls: 0.1463  loss_rpn_loc: 0.3611  time: 3.5404  data_time: 0.0031  lr: 0.0091908  max_mem: 0M
[32m[11/13 22:24:16 d2.utils.events]: [0m eta: 1:59:39  iter: 939  total_loss: 1.349  loss_cls: 0.2124  loss_box_reg: 0.4485  loss_mask: 0.2155  loss_rpn_cls: 0.1163  loss_rpn_loc: 0.3484  time: 3.5449  data_time: 0.0056  lr: 0.0093906  max_mem: 0M
[32m[11/13 22:25:36 d2.utils.events]: [0m eta: 1:58:51  iter: 959  total_loss: 1.301  loss_cls: 0.2134  loss_box_reg: 0.409  loss_mask: 0.2221  loss_rpn_cls: 0.1073  loss_rpn_loc: 0.3566  time: 3.5546  data_time: 0.0032  lr: 0.0095904  max_mem: 0M
[32m[11/13 22:26:42 d2.utils.events]: [0m eta: 1:57:27  iter: 979  total_loss: 1.411  loss_cls: 0.1787  loss_box_reg: 0.393  loss_mask: 0.2423  loss_rpn_cls: 0.123  loss_rpn_loc: 0.432  time: 3.5492  data_time: 0.0042  lr: 0.0097902  max_mem: 0M
[32m[11/13 22:28:02 d2.utils.events]: [0m eta: 1:56:25  iter: 999  total_loss: 1.35  loss_cls: 0.1701  loss_box_reg: 0.3922  loss_mask: 0.2241  loss_rpn_cls: 0.1467  loss_rpn_loc: 0.4123  time: 3.5579  data_time: 0.0043  lr: 0.00999  max_mem: 0M
[32m[11/13 22:29:09 d2.utils.events]: [0m eta: 1:55:13  iter: 1019  total_loss: 1.343  loss_cls: 0.2016  loss_box_reg: 0.4031  loss_mask: 0.2121  loss_rpn_cls: 0.1327  loss_rpn_loc: 0.3648  time: 3.5543  data_time: 0.0053  lr: 0.01  max_mem: 0M
[32m[11/13 22:30:23 d2.utils.events]: [0m eta: 1:54:37  iter: 1039  total_loss: 1.312  loss_cls: 0.1815  loss_box_reg: 0.4231  loss_mask: 0.2121  loss_rpn_cls: 0.1337  loss_rpn_loc: 0.3659  time: 3.5569  data_time: 0.0059  lr: 0.01  max_mem: 0M
[32m[11/13 22:31:34 d2.utils.events]: [0m eta: 1:53:35  iter: 1059  total_loss: 1.253  loss_cls: 0.1649  loss_box_reg: 0.4072  loss_mask: 0.2084  loss_rpn_cls: 0.1293  loss_rpn_loc: 0.3428  time: 3.5562  data_time: 0.0047  lr: 0.01  max_mem: 0M
[32m[11/13 22:32:46 d2.utils.events]: [0m eta: 1:52:31  iter: 1079  total_loss: 1.193  loss_cls: 0.1603  loss_box_reg: 0.3709  loss_mask: 0.1944  loss_rpn_cls: 0.1126  loss_rpn_loc: 0.3402  time: 3.5575  data_time: 0.0039  lr: 0.01  max_mem: 0M
[32m[11/13 22:33:57 d2.utils.events]: [0m eta: 1:51:41  iter: 1099  total_loss: 1.205  loss_cls: 0.1542  loss_box_reg: 0.3962  loss_mask: 0.2061  loss_rpn_cls: 0.1001  loss_rpn_loc: 0.3241  time: 3.5571  data_time: 0.0048  lr: 0.01  max_mem: 0M
[32m[11/13 22:35:07 d2.utils.events]: [0m eta: 1:50:34  iter: 1119  total_loss: 1.26  loss_cls: 0.1922  loss_box_reg: 0.4113  loss_mask: 0.2194  loss_rpn_cls: 0.1304  loss_rpn_loc: 0.3384  time: 3.5558  data_time: 0.0030  lr: 0.01  max_mem: 0M
[32m[11/13 22:36:18 d2.utils.events]: [0m eta: 1:49:29  iter: 1139  total_loss: 1.257  loss_cls: 0.1841  loss_box_reg: 0.4068  loss_mask: 0.2124  loss_rpn_cls: 0.1083  loss_rpn_loc: 0.343  time: 3.5562  data_time: 0.0054  lr: 0.01  max_mem: 0M
[32m[11/13 22:37:33 d2.utils.events]: [0m eta: 1:48:16  iter: 1159  total_loss: 1.27  loss_cls: 0.1713  loss_box_reg: 0.3895  loss_mask: 0.2215  loss_rpn_cls: 0.1012  loss_rpn_loc: 0.3474  time: 3.5590  data_time: 0.0037  lr: 0.01  max_mem: 0M
[32m[11/13 22:38:43 d2.utils.events]: [0m eta: 1:47:13  iter: 1179  total_loss: 1.211  loss_cls: 0.1597  loss_box_reg: 0.3882  loss_mask: 0.1956  loss_rpn_cls: 0.1133  loss_rpn_loc: 0.3502  time: 3.5583  data_time: 0.0041  lr: 0.01  max_mem: 0M
[32m[11/13 22:39:51 d2.utils.events]: [0m eta: 1:46:03  iter: 1199  total_loss: 1.18  loss_cls: 0.1532  loss_box_reg: 0.3596  loss_mask: 0.1874  loss_rpn_cls: 0.1296  loss_rpn_loc: 0.3784  time: 3.5559  data_time: 0.0064  lr: 0.01  max_mem: 0M
[32m[11/13 22:40:57 d2.utils.events]: [0m eta: 1:44:48  iter: 1219  total_loss: 1.189  loss_cls: 0.1679  loss_box_reg: 0.3785  loss_mask: 0.1972  loss_rpn_cls: 0.0865  loss_rpn_loc: 0.3414  time: 3.5514  data_time: 0.0048  lr: 0.01  max_mem: 0M
[32m[11/13 22:42:06 d2.utils.events]: [0m eta: 1:43:34  iter: 1239  total_loss: 1.223  loss_cls: 0.1674  loss_box_reg: 0.4115  loss_mask: 0.1989  loss_rpn_cls: 0.1096  loss_rpn_loc: 0.3536  time: 3.5500  data_time: 0.0040  lr: 0.01  max_mem: 0M
[32m[11/13 22:43:16 d2.utils.events]: [0m eta: 1:42:23  iter: 1259  total_loss: 1.196  loss_cls: 0.1624  loss_box_reg: 0.3775  loss_mask: 0.2031  loss_rpn_cls: 0.1052  loss_rpn_loc: 0.3333  time: 3.5492  data_time: 0.0045  lr: 0.01  max_mem: 0M
[32m[11/13 22:44:27 d2.utils.events]: [0m eta: 1:41:15  iter: 1279  total_loss: 1.246  loss_cls: 0.17  loss_box_reg: 0.3728  loss_mask: 0.197  loss_rpn_cls: 0.1316  loss_rpn_loc: 0.3637  time: 3.5488  data_time: 0.0034  lr: 0.01  max_mem: 0M
[32m[11/13 22:45:36 d2.utils.events]: [0m eta: 1:39:59  iter: 1299  total_loss: 1.178  loss_cls: 0.1841  loss_box_reg: 0.3789  loss_mask: 0.1924  loss_rpn_cls: 0.126  loss_rpn_loc: 0.342  time: 3.5474  data_time: 0.0083  lr: 0.01  max_mem: 0M
[32m[11/13 22:46:47 d2.utils.events]: [0m eta: 1:38:58  iter: 1319  total_loss: 1.21  loss_cls: 0.1753  loss_box_reg: 0.3916  loss_mask: 0.1993  loss_rpn_cls: 0.1049  loss_rpn_loc: 0.3454  time: 3.5474  data_time: 0.0055  lr: 0.01  max_mem: 0M
[32m[11/13 22:47:55 d2.utils.events]: [0m eta: 1:37:38  iter: 1339  total_loss: 1.176  loss_cls: 0.1666  loss_box_reg: 0.3884  loss_mask: 0.1948  loss_rpn_cls: 0.1138  loss_rpn_loc: 0.3291  time: 3.5452  data_time: 0.0041  lr: 0.01  max_mem: 0M
[32m[11/13 22:49:02 d2.utils.events]: [0m eta: 1:36:19  iter: 1359  total_loss: 1.147  loss_cls: 0.1636  loss_box_reg: 0.3674  loss_mask: 0.1774  loss_rpn_cls: 0.1277  loss_rpn_loc: 0.2929  time: 3.5426  data_time: 0.0040  lr: 0.01  max_mem: 0M
[32m[11/13 22:50:10 d2.utils.events]: [0m eta: 1:35:00  iter: 1379  total_loss: 1.202  loss_cls: 0.1702  loss_box_reg: 0.3864  loss_mask: 0.1898  loss_rpn_cls: 0.1205  loss_rpn_loc: 0.314  time: 3.5402  data_time: 0.0049  lr: 0.01  max_mem: 0M
[32m[11/13 22:51:16 d2.utils.events]: [0m eta: 1:33:36  iter: 1399  total_loss: 1.129  loss_cls: 0.1661  loss_box_reg: 0.3672  loss_mask: 0.1927  loss_rpn_cls: 0.09735  loss_rpn_loc: 0.3207  time: 3.5370  data_time: 0.0041  lr: 0.01  max_mem: 0M
[32m[11/13 22:52:36 d2.utils.events]: [0m eta: 1:32:31  iter: 1419  total_loss: 1.204  loss_cls: 0.1691  loss_box_reg: 0.3542  loss_mask: 0.187  loss_rpn_cls: 0.1085  loss_rpn_loc: 0.3325  time: 3.5431  data_time: 0.0029  lr: 0.01  max_mem: 0M
[32m[11/13 22:53:44 d2.utils.events]: [0m eta: 1:31:07  iter: 1439  total_loss: 1.146  loss_cls: 0.1563  loss_box_reg: 0.3679  loss_mask: 0.1884  loss_rpn_cls: 0.1293  loss_rpn_loc: 0.2904  time: 3.5408  data_time: 0.0036  lr: 0.01  max_mem: 0M
[32m[11/13 22:54:53 d2.utils.events]: [0m eta: 1:29:49  iter: 1459  total_loss: 1.147  loss_cls: 0.1658  loss_box_reg: 0.3815  loss_mask: 0.1946  loss_rpn_cls: 0.1156  loss_rpn_loc: 0.2911  time: 3.5399  data_time: 0.0060  lr: 0.01  max_mem: 0M
[32m[11/13 22:56:01 d2.utils.events]: [0m eta: 1:28:39  iter: 1479  total_loss: 1.194  loss_cls: 0.1729  loss_box_reg: 0.3931  loss_mask: 0.193  loss_rpn_cls: 0.119  loss_rpn_loc: 0.3142  time: 3.5377  data_time: 0.0042  lr: 0.01  max_mem: 0M
[32m[11/13 22:57:10 d2.utils.events]: [0m eta: 1:27:27  iter: 1499  total_loss: 1.117  loss_cls: 0.1618  loss_box_reg: 0.392  loss_mask: 0.1863  loss_rpn_cls: 0.1043  loss_rpn_loc: 0.2916  time: 3.5364  data_time: 0.0033  lr: 0.01  max_mem: 0M
[32m[11/13 22:58:23 d2.utils.events]: [0m eta: 1:26:34  iter: 1519  total_loss: 1.105  loss_cls: 0.1429  loss_box_reg: 0.3718  loss_mask: 0.1849  loss_rpn_cls: 0.1225  loss_rpn_loc: 0.2864  time: 3.5384  data_time: 0.0051  lr: 0.01  max_mem: 0M
[32m[11/13 22:59:33 d2.utils.events]: [0m eta: 1:25:25  iter: 1539  total_loss: 1.117  loss_cls: 0.1507  loss_box_reg: 0.3637  loss_mask: 0.1789  loss_rpn_cls: 0.09451  loss_rpn_loc: 0.2964  time: 3.5374  data_time: 0.0030  lr: 0.01  max_mem: 0M
[32m[11/13 23:00:42 d2.utils.events]: [0m eta: 1:24:13  iter: 1559  total_loss: 1.091  loss_cls: 0.156  loss_box_reg: 0.3693  loss_mask: 0.1873  loss_rpn_cls: 0.09656  loss_rpn_loc: 0.2824  time: 3.5367  data_time: 0.0036  lr: 0.01  max_mem: 0M
[32m[11/13 23:01:54 d2.utils.events]: [0m eta: 1:22:49  iter: 1579  total_loss: 1.055  loss_cls: 0.1468  loss_box_reg: 0.3745  loss_mask: 0.1892  loss_rpn_cls: 0.08295  loss_rpn_loc: 0.2822  time: 3.5371  data_time: 0.0039  lr: 0.01  max_mem: 0M
[32m[11/13 23:03:08 d2.utils.events]: [0m eta: 1:21:35  iter: 1599  total_loss: 1.252  loss_cls: 0.1484  loss_box_reg: 0.3478  loss_mask: 0.1845  loss_rpn_cls: 0.224  loss_rpn_loc: 0.3209  time: 3.5393  data_time: 0.0045  lr: 0.01  max_mem: 0M
[32m[11/13 23:04:17 d2.utils.events]: [0m eta: 1:20:21  iter: 1619  total_loss: 1.105  loss_cls: 0.1374  loss_box_reg: 0.3409  loss_mask: 0.1765  loss_rpn_cls: 0.1108  loss_rpn_loc: 0.318  time: 3.5381  data_time: 0.0029  lr: 0.01  max_mem: 0M
[32m[11/13 23:05:29 d2.utils.events]: [0m eta: 1:18:56  iter: 1639  total_loss: 1.076  loss_cls: 0.1365  loss_box_reg: 0.3358  loss_mask: 0.1781  loss_rpn_cls: 0.08864  loss_rpn_loc: 0.3192  time: 3.5388  data_time: 0.0053  lr: 0.01  max_mem: 0M
[32m[11/13 23:06:40 d2.utils.events]: [0m eta: 1:17:35  iter: 1659  total_loss: 1.085  loss_cls: 0.1649  loss_box_reg: 0.353  loss_mask: 0.1832  loss_rpn_cls: 0.09546  loss_rpn_loc: 0.2807  time: 3.5391  data_time: 0.0065  lr: 0.01  max_mem: 0M
[32m[11/13 23:07:49 d2.utils.events]: [0m eta: 1:16:11  iter: 1679  total_loss: 1.115  loss_cls: 0.1658  loss_box_reg: 0.362  loss_mask: 0.1805  loss_rpn_cls: 0.1034  loss_rpn_loc: 0.283  time: 3.5378  data_time: 0.0031  lr: 0.01  max_mem: 0M
[32m[11/13 23:08:58 d2.utils.events]: [0m eta: 1:14:49  iter: 1699  total_loss: 1.143  loss_cls: 0.1711  loss_box_reg: 0.3566  loss_mask: 0.1823  loss_rpn_cls: 0.102  loss_rpn_loc: 0.3159  time: 3.5367  data_time: 0.0046  lr: 0.01  max_mem: 0M
[32m[11/13 23:10:09 d2.utils.events]: [0m eta: 1:13:35  iter: 1719  total_loss: 1.166  loss_cls: 0.1572  loss_box_reg: 0.3421  loss_mask: 0.1798  loss_rpn_cls: 0.09428  loss_rpn_loc: 0.3469  time: 3.5368  data_time: 0.0035  lr: 0.01  max_mem: 0M
[32m[11/13 23:11:19 d2.utils.events]: [0m eta: 1:12:22  iter: 1739  total_loss: 1.056  loss_cls: 0.1552  loss_box_reg: 0.334  loss_mask: 0.1651  loss_rpn_cls: 0.1013  loss_rpn_loc: 0.3067  time: 3.5363  data_time: 0.0041  lr: 0.01  max_mem: 0M
[32m[11/13 23:12:31 d2.utils.events]: [0m eta: 1:11:14  iter: 1759  total_loss: 1.039  loss_cls: 0.1564  loss_box_reg: 0.3679  loss_mask: 0.1746  loss_rpn_cls: 0.09568  loss_rpn_loc: 0.2686  time: 3.5374  data_time: 0.0039  lr: 0.01  max_mem: 0M
[32m[11/13 23:13:42 d2.utils.events]: [0m eta: 1:10:01  iter: 1779  total_loss: 1.028  loss_cls: 0.1438  loss_box_reg: 0.3487  loss_mask: 0.1641  loss_rpn_cls: 0.08032  loss_rpn_loc: 0.2856  time: 3.5372  data_time: 0.0037  lr: 0.01  max_mem: 0M
[32m[11/13 23:14:50 d2.utils.events]: [0m eta: 1:08:49  iter: 1799  total_loss: 1.055  loss_cls: 0.1536  loss_box_reg: 0.3402  loss_mask: 0.1687  loss_rpn_cls: 0.07519  loss_rpn_loc: 0.3032  time: 3.5358  data_time: 0.0051  lr: 0.01  max_mem: 0M
[32m[11/13 23:16:10 d2.utils.events]: [0m eta: 1:07:40  iter: 1819  total_loss: 1.05  loss_cls: 0.1518  loss_box_reg: 0.358  loss_mask: 0.1829  loss_rpn_cls: 0.08314  loss_rpn_loc: 0.2743  time: 3.5409  data_time: 0.0032  lr: 0.01  max_mem: 0M
[32m[11/13 23:17:22 d2.utils.events]: [0m eta: 1:06:32  iter: 1839  total_loss: 1.065  loss_cls: 0.1642  loss_box_reg: 0.354  loss_mask: 0.1706  loss_rpn_cls: 0.08341  loss_rpn_loc: 0.2947  time: 3.5413  data_time: 0.0035  lr: 0.01  max_mem: 0M
[32m[11/13 23:18:37 d2.utils.events]: [0m eta: 1:05:24  iter: 1859  total_loss: 0.9846  loss_cls: 0.1402  loss_box_reg: 0.3183  loss_mask: 0.1651  loss_rpn_cls: 0.07635  loss_rpn_loc: 0.2906  time: 3.5437  data_time: 0.0060  lr: 0.01  max_mem: 0M
[32m[11/13 23:19:54 d2.utils.events]: [0m eta: 1:04:20  iter: 1879  total_loss: 1.007  loss_cls: 0.1371  loss_box_reg: 0.3232  loss_mask: 0.1693  loss_rpn_cls: 0.08483  loss_rpn_loc: 0.2719  time: 3.5470  data_time: 0.0034  lr: 0.01  max_mem: 0M
[32m[11/13 23:21:05 d2.utils.events]: [0m eta: 1:03:12  iter: 1899  total_loss: 0.993  loss_cls: 0.1268  loss_box_reg: 0.3259  loss_mask: 0.1586  loss_rpn_cls: 0.1038  loss_rpn_loc: 0.2652  time: 3.5470  data_time: 0.0041  lr: 0.01  max_mem: 0M
[32m[11/13 23:22:16 d2.utils.events]: [0m eta: 1:02:02  iter: 1919  total_loss: 0.9749  loss_cls: 0.1334  loss_box_reg: 0.3247  loss_mask: 0.1642  loss_rpn_cls: 0.07814  loss_rpn_loc: 0.2766  time: 3.5469  data_time: 0.0062  lr: 0.01  max_mem: 0M
[32m[11/13 23:23:40 d2.utils.events]: [0m eta: 1:01:03  iter: 1939  total_loss: 0.9364  loss_cls: 0.1464  loss_box_reg: 0.3118  loss_mask: 0.1606  loss_rpn_cls: 0.08661  loss_rpn_loc: 0.2529  time: 3.5538  data_time: 0.0039  lr: 0.01  max_mem: 0M
[32m[11/13 23:24:51 d2.utils.events]: [0m eta: 0:59:43  iter: 1959  total_loss: 0.9182  loss_cls: 0.1268  loss_box_reg: 0.3214  loss_mask: 0.1548  loss_rpn_cls: 0.07353  loss_rpn_loc: 0.2613  time: 3.5538  data_time: 0.0031  lr: 0.01  max_mem: 0M
[32m[11/13 23:26:05 d2.utils.events]: [0m eta: 0:58:48  iter: 1979  total_loss: 1.048  loss_cls: 0.1497  loss_box_reg: 0.3233  loss_mask: 0.165  loss_rpn_cls: 0.06564  loss_rpn_loc: 0.2754  time: 3.5550  data_time: 0.0060  lr: 0.01  max_mem: 0M
[32m[11/13 23:27:16 d2.utils.events]: [0m eta: 0:57:36  iter: 1999  total_loss: 1.035  loss_cls: 0.1494  loss_box_reg: 0.3416  loss_mask: 0.1633  loss_rpn_cls: 0.107  loss_rpn_loc: 0.2706  time: 3.5551  data_time: 0.0068  lr: 0.01  max_mem: 0M
[32m[11/13 23:28:26 d2.utils.events]: [0m eta: 0:56:31  iter: 2019  total_loss: 1.068  loss_cls: 0.1438  loss_box_reg: 0.3473  loss_mask: 0.1764  loss_rpn_cls: 0.08277  loss_rpn_loc: 0.2871  time: 3.5546  data_time: 0.0074  lr: 0.01  max_mem: 0M
[32m[11/13 23:29:36 d2.utils.events]: [0m eta: 0:55:21  iter: 2039  total_loss: 1.109  loss_cls: 0.1553  loss_box_reg: 0.3459  loss_mask: 0.1685  loss_rpn_cls: 0.1022  loss_rpn_loc: 0.2757  time: 3.5537  data_time: 0.0057  lr: 0.01  max_mem: 0M
[32m[11/13 23:30:45 d2.utils.events]: [0m eta: 0:54:12  iter: 2059  total_loss: 0.9545  loss_cls: 0.1274  loss_box_reg: 0.3232  loss_mask: 0.1646  loss_rpn_cls: 0.07546  loss_rpn_loc: 0.2714  time: 3.5528  data_time: 0.0046  lr: 0.01  max_mem: 0M
[32m[11/13 23:31:55 d2.utils.events]: [0m eta: 0:53:03  iter: 2079  total_loss: 0.9635  loss_cls: 0.1344  loss_box_reg: 0.2996  loss_mask: 0.1533  loss_rpn_cls: 0.08085  loss_rpn_loc: 0.2817  time: 3.5524  data_time: 0.0042  lr: 0.01  max_mem: 0M
[32m[11/13 23:33:10 d2.utils.events]: [0m eta: 0:51:44  iter: 2099  total_loss: 0.9603  loss_cls: 0.1469  loss_box_reg: 0.3224  loss_mask: 0.1558  loss_rpn_cls: 0.06789  loss_rpn_loc: 0.2726  time: 3.5543  data_time: 0.0049  lr: 0.01  max_mem: 0M
[32m[11/13 23:34:17 d2.utils.events]: [0m eta: 0:50:32  iter: 2119  total_loss: 0.9453  loss_cls: 0.1344  loss_box_reg: 0.3186  loss_mask: 0.1597  loss_rpn_cls: 0.07472  loss_rpn_loc: 0.2696  time: 3.5524  data_time: 0.0033  lr: 0.01  max_mem: 0M
[32m[11/13 23:35:36 d2.utils.events]: [0m eta: 0:49:35  iter: 2139  total_loss: 0.9228  loss_cls: 0.136  loss_box_reg: 0.3224  loss_mask: 0.1622  loss_rpn_cls: 0.0568  loss_rpn_loc: 0.2384  time: 3.5560  data_time: 0.0036  lr: 0.01  max_mem: 0M
[32m[11/13 23:36:51 d2.utils.events]: [0m eta: 0:48:27  iter: 2159  total_loss: 0.9523  loss_cls: 0.1264  loss_box_reg: 0.3303  loss_mask: 0.1644  loss_rpn_cls: 0.06324  loss_rpn_loc: 0.2489  time: 3.5577  data_time: 0.0031  lr: 0.01  max_mem: 0M
[32m[11/13 23:38:10 d2.utils.events]: [0m eta: 0:47:27  iter: 2179  total_loss: 0.8748  loss_cls: 0.1324  loss_box_reg: 0.3003  loss_mask: 0.1524  loss_rpn_cls: 0.05769  loss_rpn_loc: 0.2347  time: 3.5612  data_time: 0.0035  lr: 0.01  max_mem: 0M
[32m[11/13 23:39:34 d2.utils.events]: [0m eta: 0:46:30  iter: 2199  total_loss: 0.9856  loss_cls: 0.1298  loss_box_reg: 0.3237  loss_mask: 0.1626  loss_rpn_cls: 0.08464  loss_rpn_loc: 0.2852  time: 3.5673  data_time: 0.0023  lr: 0.01  max_mem: 0M
[32m[11/13 23:40:44 d2.utils.events]: [0m eta: 0:45:25  iter: 2219  total_loss: 0.9171  loss_cls: 0.123  loss_box_reg: 0.3088  loss_mask: 0.1548  loss_rpn_cls: 0.07523  loss_rpn_loc: 0.254  time: 3.5667  data_time: 0.0064  lr: 0.01  max_mem: 0M
[32m[11/13 23:41:53 d2.utils.events]: [0m eta: 0:44:13  iter: 2239  total_loss: 0.9644  loss_cls: 0.121  loss_box_reg: 0.3048  loss_mask: 0.1602  loss_rpn_cls: 0.06726  loss_rpn_loc: 0.2736  time: 3.5655  data_time: 0.0053  lr: 0.01  max_mem: 0M
[32m[11/13 23:43:01 d2.utils.events]: [0m eta: 0:42:58  iter: 2259  total_loss: 0.886  loss_cls: 0.1066  loss_box_reg: 0.2824  loss_mask: 0.1498  loss_rpn_cls: 0.08085  loss_rpn_loc: 0.2573  time: 3.5639  data_time: 0.0045  lr: 0.01  max_mem: 0M
[32m[11/13 23:44:08 d2.utils.events]: [0m eta: 0:41:45  iter: 2279  total_loss: 0.9907  loss_cls: 0.1247  loss_box_reg: 0.3383  loss_mask: 0.1569  loss_rpn_cls: 0.07925  loss_rpn_loc: 0.2783  time: 3.5622  data_time: 0.0053  lr: 0.01  max_mem: 0M
[32m[11/13 23:45:18 d2.utils.events]: [0m eta: 0:40:35  iter: 2299  total_loss: 0.9486  loss_cls: 0.1453  loss_box_reg: 0.3248  loss_mask: 0.1592  loss_rpn_cls: 0.06606  loss_rpn_loc: 0.2607  time: 3.5615  data_time: 0.0070  lr: 0.01  max_mem: 0M
[32m[11/13 23:46:56 d2.utils.events]: [0m eta: 0:39:33  iter: 2319  total_loss: 0.95  loss_cls: 0.1265  loss_box_reg: 0.305  loss_mask: 0.1532  loss_rpn_cls: 0.09592  loss_rpn_loc: 0.2489  time: 3.5732  data_time: 0.0036  lr: 0.01  max_mem: 0M
[32m[11/13 23:48:26 d2.utils.events]: [0m eta: 0:38:29  iter: 2339  total_loss: 0.9966  loss_cls: 0.1284  loss_box_reg: 0.3109  loss_mask: 0.1586  loss_rpn_cls: 0.08961  loss_rpn_loc: 0.2666  time: 3.5811  data_time: 0.0037  lr: 0.01  max_mem: 0M
[32m[11/13 23:50:13 d2.utils.events]: [0m eta: 0:37:34  iter: 2359  total_loss: 0.9799  loss_cls: 0.1198  loss_box_reg: 0.325  loss_mask: 0.1619  loss_rpn_cls: 0.0821  loss_rpn_loc: 0.277  time: 3.5961  data_time: 0.0029  lr: 0.01  max_mem: 0M
[32m[11/13 23:51:58 d2.utils.events]: [0m eta: 0:36:31  iter: 2379  total_loss: 0.9466  loss_cls: 0.1236  loss_box_reg: 0.2919  loss_mask: 0.1551  loss_rpn_cls: 0.09102  loss_rpn_loc: 0.2815  time: 3.6099  data_time: 0.0043  lr: 0.01  max_mem: 0M
[32m[11/13 23:53:49 d2.utils.events]: [0m eta: 0:35:33  iter: 2399  total_loss: 0.9472  loss_cls: 0.1163  loss_box_reg: 0.3206  loss_mask: 0.1604  loss_rpn_cls: 0.09  loss_rpn_loc: 0.2768  time: 3.6262  data_time: 0.0033  lr: 0.01  max_mem: 0M
[32m[11/13 23:55:36 d2.utils.events]: [0m eta: 0:34:25  iter: 2419  total_loss: 0.893  loss_cls: 0.1211  loss_box_reg: 0.2884  loss_mask: 0.1578  loss_rpn_cls: 0.0871  loss_rpn_loc: 0.2487  time: 3.6403  data_time: 0.0032  lr: 0.01  max_mem: 0M
[32m[11/13 23:57:19 d2.utils.events]: [0m eta: 0:33:24  iter: 2439  total_loss: 0.924  loss_cls: 0.1152  loss_box_reg: 0.2942  loss_mask: 0.1507  loss_rpn_cls: 0.07333  loss_rpn_loc: 0.2484  time: 3.6527  data_time: 0.0032  lr: 0.01  max_mem: 0M
[32m[11/13 23:58:58 d2.utils.events]: [0m eta: 0:32:45  iter: 2459  total_loss: 0.8866  loss_cls: 0.1095  loss_box_reg: 0.2899  loss_mask: 0.1546  loss_rpn_cls: 0.08192  loss_rpn_loc: 0.2591  time: 3.6632  data_time: 0.0032  lr: 0.01  max_mem: 0M
[32m[11/14 00:00:53 d2.utils.events]: [0m eta: 0:32:28  iter: 2479  total_loss: 0.9261  loss_cls: 0.1217  loss_box_reg: 0.3002  loss_mask: 0.1555  loss_rpn_cls: 0.07819  loss_rpn_loc: 0.232  time: 3.6799  data_time: 0.0045  lr: 0.01  max_mem: 0M
[32m[11/14 00:02:31 d2.utils.events]: [0m eta: 0:31:18  iter: 2499  total_loss: 0.8787  loss_cls: 0.1104  loss_box_reg: 0.2885  loss_mask: 0.1473  loss_rpn_cls: 0.06319  loss_rpn_loc: 0.2535  time: 3.6897  data_time: 0.0038  lr: 0.01  max_mem: 0M
[32m[11/14 00:04:19 d2.utils.events]: [0m eta: 0:30:11  iter: 2519  total_loss: 0.9071  loss_cls: 0.1054  loss_box_reg: 0.295  loss_mask: 0.1565  loss_rpn_cls: 0.05605  loss_rpn_loc: 0.2585  time: 3.7033  data_time: 0.0038  lr: 0.01  max_mem: 0M
[32m[11/14 00:06:04 d2.utils.events]: [0m eta: 0:29:01  iter: 2539  total_loss: 0.9079  loss_cls: 0.119  loss_box_reg: 0.3098  loss_mask: 0.1528  loss_rpn_cls: 0.07004  loss_rpn_loc: 0.2654  time: 3.7153  data_time: 0.0035  lr: 0.01  max_mem: 0M
[32m[11/14 00:07:49 d2.utils.events]: [0m eta: 0:27:59  iter: 2559  total_loss: 0.9216  loss_cls: 0.1226  loss_box_reg: 0.3007  loss_mask: 0.1616  loss_rpn_cls: 0.07681  loss_rpn_loc: 0.2428  time: 3.7275  data_time: 0.0045  lr: 0.01  max_mem: 0M
[32m[11/14 00:09:35 d2.utils.events]: [0m eta: 0:26:51  iter: 2579  total_loss: 0.9015  loss_cls: 0.1057  loss_box_reg: 0.2787  loss_mask: 0.1503  loss_rpn_cls: 0.06936  loss_rpn_loc: 0.2618  time: 3.7398  data_time: 0.0034  lr: 0.01  max_mem: 0M
[32m[11/14 00:11:30 d2.utils.events]: [0m eta: 0:25:42  iter: 2599  total_loss: 0.8414  loss_cls: 0.1156  loss_box_reg: 0.2914  loss_mask: 0.1473  loss_rpn_cls: 0.06116  loss_rpn_loc: 0.2389  time: 3.7551  data_time: 0.0035  lr: 0.01  max_mem: 0M
[32m[11/14 00:13:15 d2.utils.events]: [0m eta: 0:24:36  iter: 2619  total_loss: 0.8607  loss_cls: 0.126  loss_box_reg: 0.2885  loss_mask: 0.1424  loss_rpn_cls: 0.06164  loss_rpn_loc: 0.2443  time: 3.7664  data_time: 0.0031  lr: 0.01  max_mem: 0M
[32m[11/14 00:15:07 d2.utils.events]: [0m eta: 0:23:27  iter: 2639  total_loss: 0.8926  loss_cls: 0.112  loss_box_reg: 0.2814  loss_mask: 0.1447  loss_rpn_cls: 0.07488  loss_rpn_loc: 0.2597  time: 3.7803  data_time: 0.0032  lr: 0.01  max_mem: 0M
[32m[11/14 00:16:57 d2.utils.events]: [0m eta: 0:22:14  iter: 2659  total_loss: 0.8763  loss_cls: 0.1295  loss_box_reg: 0.2973  loss_mask: 0.1541  loss_rpn_cls: 0.06455  loss_rpn_loc: 0.2352  time: 3.7933  data_time: 0.0040  lr: 0.01  max_mem: 0M
[32m[11/14 00:18:16 d2.utils.events]: [0m eta: 0:20:57  iter: 2679  total_loss: 0.8617  loss_cls: 0.1228  loss_box_reg: 0.2697  loss_mask: 0.1519  loss_rpn_cls: 0.0557  loss_rpn_loc: 0.2405  time: 3.7943  data_time: 0.0050  lr: 0.01  max_mem: 0M
[32m[11/14 00:19:23 d2.utils.events]: [0m eta: 0:19:37  iter: 2699  total_loss: 0.8891  loss_cls: 0.1168  loss_box_reg: 0.2785  loss_mask: 0.1429  loss_rpn_cls: 0.06215  loss_rpn_loc: 0.2294  time: 3.7913  data_time: 0.0043  lr: 0.01  max_mem: 0M
[32m[11/14 00:20:34 d2.utils.events]: [0m eta: 0:18:19  iter: 2719  total_loss: 0.813  loss_cls: 0.1079  loss_box_reg: 0.277  loss_mask: 0.1468  loss_rpn_cls: 0.05664  loss_rpn_loc: 0.2326  time: 3.7894  data_time: 0.0053  lr: 0.01  max_mem: 0M
[32m[11/14 00:21:44 d2.utils.events]: [0m eta: 0:17:00  iter: 2739  total_loss: 0.8649  loss_cls: 0.09289  loss_box_reg: 0.2778  loss_mask: 0.1443  loss_rpn_cls: 0.05652  loss_rpn_loc: 0.2398  time: 3.7873  data_time: 0.0033  lr: 0.01  max_mem: 0M
[32m[11/14 00:22:50 d2.utils.events]: [0m eta: 0:15:41  iter: 2759  total_loss: 0.8266  loss_cls: 0.1127  loss_box_reg: 0.2874  loss_mask: 0.1437  loss_rpn_cls: 0.0516  loss_rpn_loc: 0.2382  time: 3.7835  data_time: 0.0042  lr: 0.01  max_mem: 0M
[32m[11/14 00:24:06 d2.utils.events]: [0m eta: 0:14:23  iter: 2779  total_loss: 0.8597  loss_cls: 0.1221  loss_box_reg: 0.2913  loss_mask: 0.1456  loss_rpn_cls: 0.0638  loss_rpn_loc: 0.2532  time: 3.7836  data_time: 0.0026  lr: 0.01  max_mem: 0M
[32m[11/14 00:25:19 d2.utils.events]: [0m eta: 0:13:06  iter: 2799  total_loss: 0.8753  loss_cls: 0.1087  loss_box_reg: 0.292  loss_mask: 0.1565  loss_rpn_cls: 0.05588  loss_rpn_loc: 0.257  time: 3.7830  data_time: 0.0033  lr: 0.01  max_mem: 0M
[32m[11/14 00:26:33 d2.utils.events]: [0m eta: 0:11:46  iter: 2819  total_loss: 0.8627  loss_cls: 0.1186  loss_box_reg: 0.2856  loss_mask: 0.1508  loss_rpn_cls: 0.05144  loss_rpn_loc: 0.2251  time: 3.7821  data_time: 0.0043  lr: 0.01  max_mem: 0M
[32m[11/14 00:27:48 d2.utils.events]: [0m eta: 0:10:28  iter: 2839  total_loss: 0.8606  loss_cls: 0.1147  loss_box_reg: 0.2751  loss_mask: 0.1411  loss_rpn_cls: 0.08199  loss_rpn_loc: 0.2268  time: 3.7822  data_time: 0.0042  lr: 0.01  max_mem: 0M
[32m[11/14 00:29:03 d2.utils.events]: [0m eta: 0:09:10  iter: 2859  total_loss: 0.8268  loss_cls: 0.1167  loss_box_reg: 0.2754  loss_mask: 0.1395  loss_rpn_cls: 0.06654  loss_rpn_loc: 0.2296  time: 3.7816  data_time: 0.0047  lr: 0.01  max_mem: 0M
[32m[11/14 00:30:18 d2.utils.events]: [0m eta: 0:07:51  iter: 2879  total_loss: 0.8601  loss_cls: 0.1088  loss_box_reg: 0.2926  loss_mask: 0.1444  loss_rpn_cls: 0.05934  loss_rpn_loc: 0.262  time: 3.7814  data_time: 0.0052  lr: 0.01  max_mem: 0M
[32m[11/14 00:31:36 d2.utils.events]: [0m eta: 0:06:33  iter: 2899  total_loss: 0.8811  loss_cls: 0.1063  loss_box_reg: 0.2727  loss_mask: 0.1473  loss_rpn_cls: 0.05303  loss_rpn_loc: 0.2623  time: 3.7824  data_time: 0.0059  lr: 0.01  max_mem: 0M
[32m[11/14 00:32:53 d2.utils.events]: [0m eta: 0:05:14  iter: 2919  total_loss: 0.8061  loss_cls: 0.1086  loss_box_reg: 0.2813  loss_mask: 0.1402  loss_rpn_cls: 0.06458  loss_rpn_loc: 0.2152  time: 3.7828  data_time: 0.0047  lr: 0.01  max_mem: 0M
[32m[11/14 00:34:14 d2.utils.events]: [0m eta: 0:03:55  iter: 2939  total_loss: 0.8159  loss_cls: 0.1075  loss_box_reg: 0.2808  loss_mask: 0.1361  loss_rpn_cls: 0.04873  loss_rpn_loc: 0.2346  time: 3.7848  data_time: 0.0028  lr: 0.01  max_mem: 0M
[32m[11/14 00:35:27 d2.utils.events]: [0m eta: 0:02:37  iter: 2959  total_loss: 0.8462  loss_cls: 0.1102  loss_box_reg: 0.2851  loss_mask: 0.1386  loss_rpn_cls: 0.05237  loss_rpn_loc: 0.2407  time: 3.7838  data_time: 0.0043  lr: 0.01  max_mem: 0M
[32m[11/14 00:36:43 d2.utils.events]: [0m eta: 0:01:18  iter: 2979  total_loss: 0.8508  loss_cls: 0.1201  loss_box_reg: 0.2771  loss_mask: 0.1482  loss_rpn_cls: 0.06794  loss_rpn_loc: 0.2092  time: 3.7837  data_time: 0.0049  lr: 0.01  max_mem: 0M
[32m[11/14 00:37:56 d2.utils.events]: [0m eta: 0:00:00  iter: 2999  total_loss: 0.8352  loss_cls: 0.1006  loss_box_reg: 0.2878  loss_mask: 0.1443  loss_rpn_cls: 0.07418  loss_rpn_loc: 0.2215  time: 3.7826  data_time: 0.0057  lr: 0.01  max_mem: 0M
[32m[11/14 00:37:56 d2.engine.hooks]: [0mOverall training speed: 2998 iterations in 3:09:00 (3.7827 s / it)
[32m[11/14 00:37:56 d2.engine.hooks]: [0mTotal training time: 3:09:07 (0:00:06 on hooks)
[32m[11/14 00:37:56 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[32m[11/14 00:37:56 d2.data.common]: [0mSerializing 20 elements to byte tensors and concatenating them all ...
[32m[11/14 00:37:56 d2.data.common]: [0mSerialized dataset takes 0.46 MiB
[5m[31mWARNING[0m [32m[11/14 00:37:56 d2.engine.defaults]: [0mNo evaluator found. Use `DefaultTrainer.test(evaluators=)`, or implement its `build_evaluator` method.
[32m[11/14 00:37:57 d2.data.build]: [0mDistribution of instances among all 1 categories:
[36m|  category  | #instances   |
|:----------:|:-------------|
| satellite  | 445          |
|            |              |[0m
[32m[11/14 00:37:57 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[32m[11/14 00:37:57 d2.data.common]: [0mSerializing 6 elements to byte tensors and concatenating them all ...
[32m[11/14 00:37:57 d2.data.common]: [0mSerialized dataset takes 0.11 MiB
[5m[31mWARNING[0m [32m[11/14 00:37:57 d2.engine.defaults]: [0mNo evaluator found. Use `DefaultTrainer.test(evaluators=)`, or implement its `build_evaluator` method.
USING MODEL WEIGHT: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp2/model_0002999.pth
Dataset: satellite_Val
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S08_03_SE1_1000X03.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S08_03_SE1_1000X03.png
	num_instances: 96
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S06_01_SE1_500X67.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S06_01_SE1_500X67.png
	num_instances: 68
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S04_02_SE1_1000X50.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S04_02_SE1_1000X50.png
	num_instances: 48
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S03_03_SE1_1250X41.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S03_03_SE1_1250X41.png
	num_instances: 123
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S02_01_SE1_300X14.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S02_01_SE1_300X14.png
	num_instances: 89
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/HP743_2S_250x.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/HP743_2S_250x.png
	num_instances: 65
gt filename: S08_03_SE1_1000X03.png	 pred filename: S08_03_SE1_1000X03.png
gt filename: S06_01_SE1_500X67.png	 pred filename: S06_01_SE1_500X67.png
gt filename: S04_02_SE1_1000X50.png	 pred filename: S04_02_SE1_1000X50.png
gt filename: S03_03_SE1_1250X41.png	 pred filename: S03_03_SE1_1250X41.png
gt filename: S02_01_SE1_300X14.png	 pred filename: S02_01_SE1_300X14.png
gt filename: HP743_2S_250x.png	 pred filename: HP743_2S_250x.png
x:  [1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2]
y:  [0.53, 0.37, 0.58, 0.49, 0.54, 0.54, 0.58, 0.46, 0.62, 0.54, 0.49, 0.71]
Average Precision Score:  0.5079704418939684
Average Recall Score:     0.568225468820707
Precision: 0.5855479687576755
Recall: 0.6164985777088182
---
Precision: 0.4466003848620911
Recall: 0.4743251298646002
---
Precision: 0.7314766158696795
Recall: 0.6816846229187071
---
Precision: 0.5043609527004361
Recall: 0.518180251594003
---
Precision: 0.7892179334372421
Recall: 0.5905598243688255
---
Precision: 0.33095768374164813
Recall: 0.7393034825870647
---
USING MODEL WEIGHT: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp2/model_final.pth
Dataset: satellite_Val
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S08_03_SE1_1000X03.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S08_03_SE1_1000X03.png
	num_instances: 96
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S06_01_SE1_500X67.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S06_01_SE1_500X67.png
	num_instances: 68
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S04_02_SE1_1000X50.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S04_02_SE1_1000X50.png
	num_instances: 48
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S03_03_SE1_1250X41.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S03_03_SE1_1250X41.png
	num_instances: 123
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S02_01_SE1_300X14.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S02_01_SE1_300X14.png
	num_instances: 89
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/HP743_2S_250x.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/HP743_2S_250x.png
	num_instances: 65
gt filename: S08_03_SE1_1000X03.png	 pred filename: S08_03_SE1_1000X03.png
gt filename: S06_01_SE1_500X67.png	 pred filename: S06_01_SE1_500X67.png
gt filename: S04_02_SE1_1000X50.png	 pred filename: S04_02_SE1_1000X50.png
gt filename: S03_03_SE1_1250X41.png	 pred filename: S03_03_SE1_1250X41.png
gt filename: S02_01_SE1_300X14.png	 pred filename: S02_01_SE1_300X14.png
gt filename: HP743_2S_250x.png	 pred filename: HP743_2S_250x.png
x:  [1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2]
y:  [0.53, 0.37, 0.58, 0.49, 0.54, 0.54, 0.58, 0.46, 0.62, 0.54, 0.49, 0.71]
Average Precision Score:  0.5079704418939684
Average Recall Score:     0.568225468820707
Precision: 0.5855479687576755
Recall: 0.6164985777088182
---
Precision: 0.4466003848620911
Recall: 0.4743251298646002
---
Precision: 0.7314766158696795
Recall: 0.6816846229187071
---
Precision: 0.5043609527004361
Recall: 0.518180251594003
---
Precision: 0.7892179334372421
Recall: 0.5905598243688255
---
Precision: 0.33095768374164813
Recall: 0.7393034825870647
---
Ignoring Final Model
Deleting: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp2/model_0002999.pth
Current File Path
../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp2/model_0002999.pth
New File Path
../../../../../../../ocean/projects/dmr200021p/sprice/variance/CPU_FULL_CONFIG/trial1/model10.pth
Deleting: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp2/model_final.pth
Current File Path
../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp2/model_final.pth
New File Path
../../../../../../../ocean/projects/dmr200021p/sprice/variance/CPU_FULL_CONFIG/trial1/model10.pth
Deleting: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp2/results_checkpoint_0002999.pickle
../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp2/results_checkpoint_0002999.pickle
Deleting: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp2/results_checkpoint_final.pickle
../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp2/results_checkpoint_final.pickle
Removing: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp2/metrics.json
Removing: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp2/last_checkpoint
Registered Datasets: ['satellite_Train', 'satellite_Val']
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/HP743_4S_500x.png
	num_instances: 103
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S08_01_SE1_1000X94.png
	num_instances: 68
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/HP743_6S_250x.png
	num_instances: 102
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S08_03_SE1_1000X03.png
	num_instances: 88
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S06_01_SE1_500X67.png
	num_instances: 54
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S04_02_SE1_1000X50.png
	num_instances: 45
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S03_03_SE1_1250X41.png
	num_instances: 111
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S02_01_SE1_300X14.png
	num_instances: 98
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/HP743_2S_250x.png
	num_instances: 49
Weights not found, weights will be downloaded from source: https://dl.fbaipublicfiles.com/detectron2/COCO-InstanceSegmentation/mask_rcnn_R_50_FPN_3x/137849600/model_final_f10217.pkl
[32m[11/14 00:38:39 d2.engine.defaults]: [0mModel:
GeneralizedRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): StandardROIHeads(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): FastRCNNConvFCHead(
      (flatten): Flatten(start_dim=1, end_dim=-1)
      (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      (fc_relu1): ReLU()
      (fc2): Linear(in_features=1024, out_features=1024, bias=True)
      (fc_relu2): ReLU()
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=1024, out_features=2, bias=True)
      (bbox_pred): Linear(in_features=1024, out_features=4, bias=True)
    )
    (mask_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(14, 14), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(14, 14), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (mask_head): MaskRCNNConvUpsampleHead(
      (mask_fcn1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn2): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn3): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn4): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
      (deconv_relu): ReLU()
      (predictor): Conv2d(256, 1, kernel_size=(1, 1), stride=(1, 1))
    )
  )
)
[32m[11/14 00:38:39 d2.data.build]: [0mRemoved 0 images with no usable annotations. 20 images left.
[32m[11/14 00:38:39 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice')]
[32m[11/14 00:38:39 d2.data.build]: [0mUsing training sampler TrainingSampler
[32m[11/14 00:38:39 d2.data.common]: [0mSerializing 20 elements to byte tensors and concatenating them all ...
[32m[11/14 00:38:39 d2.data.common]: [0mSerialized dataset takes 0.46 MiB
[5m[31mWARNING[0m [32m[11/14 00:38:39 d2.solver.build]: [0mSOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[32m[11/14 00:38:39 d2.checkpoint.c2_model_loading]: [0mRenaming Caffe2 weights ......
[32m[11/14 00:38:39 d2.checkpoint.c2_model_loading]: [0mFollowing weights matched with submodule backbone.bottom_up:
| Names in Model    | Names in Checkpoint      | Shapes                                          |
|:------------------|:-------------------------|:------------------------------------------------|
| res2.0.conv1.*    | res2_0_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,1,1)             |
| res2.0.conv2.*    | res2_0_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.0.conv3.*    | res2_0_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.0.shortcut.* | res2_0_branch1_{bn_*,w}  | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.1.conv1.*    | res2_1_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,256,1,1)            |
| res2.1.conv2.*    | res2_1_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.1.conv3.*    | res2_1_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.2.conv1.*    | res2_2_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,256,1,1)            |
| res2.2.conv2.*    | res2_2_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.2.conv3.*    | res2_2_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res3.0.conv1.*    | res3_0_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,256,1,1)       |
| res3.0.conv2.*    | res3_0_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.0.conv3.*    | res3_0_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.0.shortcut.* | res3_0_branch1_{bn_*,w}  | (512,) (512,) (512,) (512,) (512,256,1,1)       |
| res3.1.conv1.*    | res3_1_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.1.conv2.*    | res3_1_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.1.conv3.*    | res3_1_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.2.conv1.*    | res3_2_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.2.conv2.*    | res3_2_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.2.conv3.*    | res3_2_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.3.conv1.*    | res3_3_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.3.conv2.*    | res3_3_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.3.conv3.*    | res3_3_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res4.0.conv1.*    | res4_0_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,512,1,1)       |
| res4.0.conv2.*    | res4_0_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.0.conv3.*    | res4_0_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.0.shortcut.* | res4_0_branch1_{bn_*,w}  | (1024,) (1024,) (1024,) (1024,) (1024,512,1,1)  |
| res4.1.conv1.*    | res4_1_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.1.conv2.*    | res4_1_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.1.conv3.*    | res4_1_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.2.conv1.*    | res4_2_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.2.conv2.*    | res4_2_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.2.conv3.*    | res4_2_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.3.conv1.*    | res4_3_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.3.conv2.*    | res4_3_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.3.conv3.*    | res4_3_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.4.conv1.*    | res4_4_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.4.conv2.*    | res4_4_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.4.conv3.*    | res4_4_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.5.conv1.*    | res4_5_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.5.conv2.*    | res4_5_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.5.conv3.*    | res4_5_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res5.0.conv1.*    | res5_0_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,1024,1,1)      |
| res5.0.conv2.*    | res5_0_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.0.conv3.*    | res5_0_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| res5.0.shortcut.* | res5_0_branch1_{bn_*,w}  | (2048,) (2048,) (2048,) (2048,) (2048,1024,1,1) |
| res5.1.conv1.*    | res5_1_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,2048,1,1)      |
| res5.1.conv2.*    | res5_1_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.1.conv3.*    | res5_1_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| res5.2.conv1.*    | res5_2_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,2048,1,1)      |
| res5.2.conv2.*    | res5_2_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.2.conv3.*    | res5_2_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| stem.conv1.norm.* | res_conv1_bn_*           | (64,) (64,) (64,) (64,)                         |
| stem.conv1.weight | conv1_w                  | (64, 3, 7, 7)                                   |
[32m[11/14 00:38:40 d2.engine.train_loop]: [0mStarting training from iteration 0
[32m[11/14 00:39:45 d2.utils.events]: [0m eta: 2:40:53  iter: 19  total_loss: 3.299  loss_cls: 0.5196  loss_box_reg: 0.02739  loss_mask: 0.6726  loss_rpn_cls: 0.6624  loss_rpn_loc: 1.269  time: 3.2199  data_time: 0.0234  lr: 0.00019981  max_mem: 0M
[32m[11/14 00:40:45 d2.utils.events]: [0m eta: 2:34:43  iter: 39  total_loss: 2.408  loss_cls: 0.353  loss_box_reg: 0.0366  loss_mask: 0.5966  loss_rpn_cls: 0.6079  loss_rpn_loc: 0.8124  time: 3.0933  data_time: 0.0035  lr: 0.00039961  max_mem: 0M
[32m[11/14 00:41:46 d2.utils.events]: [0m eta: 2:34:32  iter: 59  total_loss: 2.14  loss_cls: 0.2758  loss_box_reg: 0.06761  loss_mask: 0.5832  loss_rpn_cls: 0.5732  loss_rpn_loc: 0.6399  time: 3.0810  data_time: 0.0037  lr: 0.00059941  max_mem: 0M
[32m[11/14 00:42:56 d2.utils.events]: [0m eta: 2:33:36  iter: 79  total_loss: 2.088  loss_cls: 0.2408  loss_box_reg: 0.167  loss_mask: 0.5632  loss_rpn_cls: 0.5431  loss_rpn_loc: 0.5478  time: 3.1887  data_time: 0.0040  lr: 0.00079921  max_mem: 0M
[32m[11/14 00:44:06 d2.utils.events]: [0m eta: 2:36:06  iter: 99  total_loss: 2.122  loss_cls: 0.2652  loss_box_reg: 0.3352  loss_mask: 0.54  loss_rpn_cls: 0.4601  loss_rpn_loc: 0.5138  time: 3.2561  data_time: 0.0047  lr: 0.00099901  max_mem: 0M
[32m[11/14 00:45:15 d2.utils.events]: [0m eta: 2:35:29  iter: 119  total_loss: 2.116  loss_cls: 0.2833  loss_box_reg: 0.4248  loss_mask: 0.5117  loss_rpn_cls: 0.3868  loss_rpn_loc: 0.5009  time: 3.2898  data_time: 0.0046  lr: 0.0011988  max_mem: 0M
[32m[11/14 00:46:24 d2.utils.events]: [0m eta: 2:34:45  iter: 139  total_loss: 2.029  loss_cls: 0.27  loss_box_reg: 0.4271  loss_mask: 0.4687  loss_rpn_cls: 0.3358  loss_rpn_loc: 0.4981  time: 3.3128  data_time: 0.0041  lr: 0.0013986  max_mem: 0M
[32m[11/14 00:47:39 d2.utils.events]: [0m eta: 2:35:19  iter: 159  total_loss: 2.026  loss_cls: 0.3394  loss_box_reg: 0.4839  loss_mask: 0.4366  loss_rpn_cls: 0.3428  loss_rpn_loc: 0.4938  time: 3.3649  data_time: 0.0045  lr: 0.0015984  max_mem: 0M
[32m[11/14 00:48:47 d2.utils.events]: [0m eta: 2:34:08  iter: 179  total_loss: 1.86  loss_cls: 0.2701  loss_box_reg: 0.4661  loss_mask: 0.4145  loss_rpn_cls: 0.289  loss_rpn_loc: 0.4701  time: 3.3668  data_time: 0.0037  lr: 0.0017982  max_mem: 0M
[32m[11/14 00:49:55 d2.utils.events]: [0m eta: 2:33:32  iter: 199  total_loss: 1.815  loss_cls: 0.2634  loss_box_reg: 0.4287  loss_mask: 0.3863  loss_rpn_cls: 0.2698  loss_rpn_loc: 0.4557  time: 3.3719  data_time: 0.0032  lr: 0.001998  max_mem: 0M
[32m[11/14 00:51:02 d2.utils.events]: [0m eta: 2:32:12  iter: 219  total_loss: 1.72  loss_cls: 0.242  loss_box_reg: 0.4053  loss_mask: 0.3469  loss_rpn_cls: 0.2643  loss_rpn_loc: 0.4341  time: 3.3718  data_time: 0.0033  lr: 0.0021978  max_mem: 0M
[32m[11/14 00:52:19 d2.utils.events]: [0m eta: 2:32:50  iter: 239  total_loss: 1.725  loss_cls: 0.2392  loss_box_reg: 0.4024  loss_mask: 0.3397  loss_rpn_cls: 0.2449  loss_rpn_loc: 0.4859  time: 3.4096  data_time: 0.0030  lr: 0.0023976  max_mem: 0M
[32m[11/14 00:53:29 d2.utils.events]: [0m eta: 2:32:13  iter: 259  total_loss: 1.692  loss_cls: 0.2453  loss_box_reg: 0.4473  loss_mask: 0.3233  loss_rpn_cls: 0.2331  loss_rpn_loc: 0.4519  time: 3.4158  data_time: 0.0038  lr: 0.0025974  max_mem: 0M
[32m[11/14 00:54:42 d2.utils.events]: [0m eta: 2:32:02  iter: 279  total_loss: 1.522  loss_cls: 0.1992  loss_box_reg: 0.4029  loss_mask: 0.3234  loss_rpn_cls: 0.1905  loss_rpn_loc: 0.4145  time: 3.4331  data_time: 0.0046  lr: 0.0027972  max_mem: 0M
[32m[11/14 00:55:57 d2.utils.events]: [0m eta: 2:31:56  iter: 299  total_loss: 1.673  loss_cls: 0.2366  loss_box_reg: 0.4892  loss_mask: 0.2994  loss_rpn_cls: 0.2245  loss_rpn_loc: 0.4008  time: 3.4556  data_time: 0.0055  lr: 0.002997  max_mem: 0M
[32m[11/14 00:57:11 d2.utils.events]: [0m eta: 2:31:06  iter: 319  total_loss: 1.709  loss_cls: 0.2342  loss_box_reg: 0.4658  loss_mask: 0.3201  loss_rpn_cls: 0.2235  loss_rpn_loc: 0.4063  time: 3.4691  data_time: 0.0047  lr: 0.0031968  max_mem: 0M
[32m[11/14 00:58:23 d2.utils.events]: [0m eta: 2:30:18  iter: 339  total_loss: 1.696  loss_cls: 0.2512  loss_box_reg: 0.4661  loss_mask: 0.31  loss_rpn_cls: 0.2054  loss_rpn_loc: 0.4611  time: 3.4785  data_time: 0.0042  lr: 0.0033966  max_mem: 0M
[32m[11/14 00:59:34 d2.utils.events]: [0m eta: 2:29:33  iter: 359  total_loss: 1.581  loss_cls: 0.2242  loss_box_reg: 0.4942  loss_mask: 0.2884  loss_rpn_cls: 0.1947  loss_rpn_loc: 0.3806  time: 3.4824  data_time: 0.0041  lr: 0.0035964  max_mem: 0M
[32m[11/14 01:00:45 d2.utils.events]: [0m eta: 2:28:25  iter: 379  total_loss: 1.543  loss_cls: 0.2093  loss_box_reg: 0.4049  loss_mask: 0.295  loss_rpn_cls: 0.2249  loss_rpn_loc: 0.3885  time: 3.4839  data_time: 0.0049  lr: 0.0037962  max_mem: 0M
[32m[11/14 01:01:56 d2.utils.events]: [0m eta: 2:27:32  iter: 399  total_loss: 1.515  loss_cls: 0.2063  loss_box_reg: 0.4246  loss_mask: 0.2744  loss_rpn_cls: 0.2234  loss_rpn_loc: 0.4282  time: 3.4894  data_time: 0.0038  lr: 0.003996  max_mem: 0M
[32m[11/14 01:03:09 d2.utils.events]: [0m eta: 2:27:12  iter: 419  total_loss: 1.537  loss_cls: 0.1888  loss_box_reg: 0.4327  loss_mask: 0.2663  loss_rpn_cls: 0.2287  loss_rpn_loc: 0.4275  time: 3.4952  data_time: 0.0039  lr: 0.0041958  max_mem: 0M
[32m[11/14 01:04:17 d2.utils.events]: [0m eta: 2:25:35  iter: 439  total_loss: 1.576  loss_cls: 0.2122  loss_box_reg: 0.4559  loss_mask: 0.2701  loss_rpn_cls: 0.1717  loss_rpn_loc: 0.4064  time: 3.4912  data_time: 0.0030  lr: 0.0043956  max_mem: 0M
[32m[11/14 01:05:27 d2.utils.events]: [0m eta: 2:24:55  iter: 459  total_loss: 1.458  loss_cls: 0.2153  loss_box_reg: 0.4681  loss_mask: 0.271  loss_rpn_cls: 0.1881  loss_rpn_loc: 0.3691  time: 3.4912  data_time: 0.0038  lr: 0.0045954  max_mem: 0M
[32m[11/14 01:06:36 d2.utils.events]: [0m eta: 2:23:05  iter: 479  total_loss: 1.41  loss_cls: 0.1933  loss_box_reg: 0.4316  loss_mask: 0.2586  loss_rpn_cls: 0.1621  loss_rpn_loc: 0.3775  time: 3.4897  data_time: 0.0033  lr: 0.0047952  max_mem: 0M
[32m[11/14 01:07:56 d2.utils.events]: [0m eta: 2:22:58  iter: 499  total_loss: 1.511  loss_cls: 0.1749  loss_box_reg: 0.4137  loss_mask: 0.2552  loss_rpn_cls: 0.2018  loss_rpn_loc: 0.3978  time: 3.5105  data_time: 0.0040  lr: 0.004995  max_mem: 0M
[32m[11/14 01:09:17 d2.utils.events]: [0m eta: 2:22:06  iter: 519  total_loss: 1.51  loss_cls: 0.2235  loss_box_reg: 0.453  loss_mask: 0.2581  loss_rpn_cls: 0.1837  loss_rpn_loc: 0.3937  time: 3.5310  data_time: 0.0033  lr: 0.0051948  max_mem: 0M
[32m[11/14 01:10:35 d2.utils.events]: [0m eta: 2:21:19  iter: 539  total_loss: 1.408  loss_cls: 0.219  loss_box_reg: 0.43  loss_mask: 0.25  loss_rpn_cls: 0.1416  loss_rpn_loc: 0.3722  time: 3.5448  data_time: 0.0068  lr: 0.0053946  max_mem: 0M
[32m[11/14 01:11:59 d2.utils.events]: [0m eta: 2:20:36  iter: 559  total_loss: 1.441  loss_cls: 0.2292  loss_box_reg: 0.4483  loss_mask: 0.2525  loss_rpn_cls: 0.136  loss_rpn_loc: 0.3599  time: 3.5678  data_time: 0.0054  lr: 0.0055944  max_mem: 0M
[32m[11/14 01:13:27 d2.utils.events]: [0m eta: 2:19:57  iter: 579  total_loss: 1.459  loss_cls: 0.2132  loss_box_reg: 0.4371  loss_mask: 0.2581  loss_rpn_cls: 0.183  loss_rpn_loc: 0.4093  time: 3.5965  data_time: 0.0043  lr: 0.0057942  max_mem: 0M
[32m[11/14 01:15:09 d2.utils.events]: [0m eta: 2:20:15  iter: 599  total_loss: 1.534  loss_cls: 0.2259  loss_box_reg: 0.4604  loss_mask: 0.2505  loss_rpn_cls: 0.1613  loss_rpn_loc: 0.4157  time: 3.6472  data_time: 0.0096  lr: 0.005994  max_mem: 0M
[32m[11/14 01:16:41 d2.utils.events]: [0m eta: 2:20:10  iter: 619  total_loss: 1.498  loss_cls: 0.2039  loss_box_reg: 0.4468  loss_mask: 0.2554  loss_rpn_cls: 0.1536  loss_rpn_loc: 0.3991  time: 3.6785  data_time: 0.0079  lr: 0.0061938  max_mem: 0M
[32m[11/14 01:18:19 d2.utils.events]: [0m eta: 2:19:53  iter: 639  total_loss: 1.436  loss_cls: 0.2273  loss_box_reg: 0.4307  loss_mask: 0.235  loss_rpn_cls: 0.1391  loss_rpn_loc: 0.3758  time: 3.7159  data_time: 0.0054  lr: 0.0063936  max_mem: 0M
[32m[11/14 01:19:42 d2.utils.events]: [0m eta: 2:19:05  iter: 659  total_loss: 1.49  loss_cls: 0.2199  loss_box_reg: 0.4233  loss_mask: 0.2492  loss_rpn_cls: 0.1565  loss_rpn_loc: 0.407  time: 3.7300  data_time: 0.0044  lr: 0.0065934  max_mem: 0M
[32m[11/14 01:21:09 d2.utils.events]: [0m eta: 2:18:07  iter: 679  total_loss: 1.456  loss_cls: 0.2417  loss_box_reg: 0.4396  loss_mask: 0.236  loss_rpn_cls: 0.1653  loss_rpn_loc: 0.3801  time: 3.7480  data_time: 0.0054  lr: 0.0067932  max_mem: 0M
[32m[11/14 01:22:34 d2.utils.events]: [0m eta: 2:17:35  iter: 699  total_loss: 1.433  loss_cls: 0.2029  loss_box_reg: 0.4358  loss_mask: 0.2429  loss_rpn_cls: 0.1624  loss_rpn_loc: 0.3928  time: 3.7612  data_time: 0.0051  lr: 0.006993  max_mem: 0M
[32m[11/14 01:24:00 d2.utils.events]: [0m eta: 2:17:07  iter: 719  total_loss: 1.469  loss_cls: 0.2041  loss_box_reg: 0.4347  loss_mask: 0.2372  loss_rpn_cls: 0.1714  loss_rpn_loc: 0.4186  time: 3.7768  data_time: 0.0041  lr: 0.0071928  max_mem: 0M
[32m[11/14 01:25:34 d2.utils.events]: [0m eta: 2:16:40  iter: 739  total_loss: 1.322  loss_cls: 0.1705  loss_box_reg: 0.4172  loss_mask: 0.2309  loss_rpn_cls: 0.1396  loss_rpn_loc: 0.3769  time: 3.8013  data_time: 0.0058  lr: 0.0073926  max_mem: 0M
[32m[11/14 01:26:55 d2.utils.events]: [0m eta: 2:15:38  iter: 759  total_loss: 1.289  loss_cls: 0.1732  loss_box_reg: 0.383  loss_mask: 0.2196  loss_rpn_cls: 0.1555  loss_rpn_loc: 0.362  time: 3.8079  data_time: 0.0052  lr: 0.0075924  max_mem: 0M
[32m[11/14 01:28:18 d2.utils.events]: [0m eta: 2:14:41  iter: 779  total_loss: 1.291  loss_cls: 0.1905  loss_box_reg: 0.4303  loss_mask: 0.2184  loss_rpn_cls: 0.1315  loss_rpn_loc: 0.3549  time: 3.8176  data_time: 0.0062  lr: 0.0077922  max_mem: 0M
[32m[11/14 01:29:48 d2.utils.events]: [0m eta: 2:14:04  iter: 799  total_loss: 1.376  loss_cls: 0.1858  loss_box_reg: 0.4334  loss_mask: 0.2281  loss_rpn_cls: 0.1577  loss_rpn_loc: 0.3982  time: 3.8335  data_time: 0.0063  lr: 0.007992  max_mem: 0M
[32m[11/14 01:31:05 d2.utils.events]: [0m eta: 2:13:00  iter: 819  total_loss: 1.363  loss_cls: 0.1949  loss_box_reg: 0.4268  loss_mask: 0.2227  loss_rpn_cls: 0.1528  loss_rpn_loc: 0.3868  time: 3.8347  data_time: 0.0043  lr: 0.0081918  max_mem: 0M
[32m[11/14 01:32:28 d2.utils.events]: [0m eta: 2:12:10  iter: 839  total_loss: 1.318  loss_cls: 0.1918  loss_box_reg: 0.4534  loss_mask: 0.227  loss_rpn_cls: 0.1338  loss_rpn_loc: 0.3394  time: 3.8416  data_time: 0.0068  lr: 0.0083916  max_mem: 0M
[32m[11/14 01:33:51 d2.utils.events]: [0m eta: 2:11:19  iter: 859  total_loss: 1.351  loss_cls: 0.1891  loss_box_reg: 0.4223  loss_mask: 0.2126  loss_rpn_cls: 0.1243  loss_rpn_loc: 0.3518  time: 3.8488  data_time: 0.0064  lr: 0.0085914  max_mem: 0M
[32m[11/14 01:35:34 d2.utils.events]: [0m eta: 2:10:22  iter: 879  total_loss: 1.375  loss_cls: 0.1962  loss_box_reg: 0.4361  loss_mask: 0.219  loss_rpn_cls: 0.1459  loss_rpn_loc: 0.3533  time: 3.8783  data_time: 0.0085  lr: 0.0087912  max_mem: 0M
[32m[11/14 01:37:15 d2.utils.events]: [0m eta: 2:10:14  iter: 899  total_loss: 1.334  loss_cls: 0.1739  loss_box_reg: 0.4279  loss_mask: 0.2231  loss_rpn_cls: 0.1595  loss_rpn_loc: 0.36  time: 3.9050  data_time: 0.0122  lr: 0.008991  max_mem: 0M
[32m[11/14 01:39:05 d2.utils.events]: [0m eta: 2:09:38  iter: 919  total_loss: 1.288  loss_cls: 0.1548  loss_box_reg: 0.3835  loss_mask: 0.2123  loss_rpn_cls: 0.1463  loss_rpn_loc: 0.3611  time: 3.9394  data_time: 0.0060  lr: 0.0091908  max_mem: 0M
[32m[11/14 01:40:51 d2.utils.events]: [0m eta: 2:09:13  iter: 939  total_loss: 1.349  loss_cls: 0.2124  loss_box_reg: 0.4485  loss_mask: 0.2155  loss_rpn_cls: 0.1163  loss_rpn_loc: 0.3484  time: 3.9683  data_time: 0.0088  lr: 0.0093906  max_mem: 0M
[32m[11/14 01:42:26 d2.utils.events]: [0m eta: 2:09:24  iter: 959  total_loss: 1.301  loss_cls: 0.2134  loss_box_reg: 0.409  loss_mask: 0.2221  loss_rpn_cls: 0.1073  loss_rpn_loc: 0.3566  time: 3.9844  data_time: 0.0048  lr: 0.0095904  max_mem: 0M
[32m[11/14 01:43:54 d2.utils.events]: [0m eta: 2:08:18  iter: 979  total_loss: 1.411  loss_cls: 0.1787  loss_box_reg: 0.393  loss_mask: 0.2423  loss_rpn_cls: 0.123  loss_rpn_loc: 0.432  time: 3.9932  data_time: 0.0049  lr: 0.0097902  max_mem: 0M
[32m[11/14 01:45:45 d2.utils.events]: [0m eta: 2:07:52  iter: 999  total_loss: 1.35  loss_cls: 0.1701  loss_box_reg: 0.3922  loss_mask: 0.2241  loss_rpn_cls: 0.1467  loss_rpn_loc: 0.4123  time: 4.0243  data_time: 0.0081  lr: 0.00999  max_mem: 0M
[32m[11/14 01:47:23 d2.utils.events]: [0m eta: 2:08:14  iter: 1019  total_loss: 1.343  loss_cls: 0.2016  loss_box_reg: 0.4031  loss_mask: 0.2121  loss_rpn_cls: 0.1327  loss_rpn_loc: 0.3648  time: 4.0413  data_time: 0.0039  lr: 0.01  max_mem: 0M
[32m[11/14 01:49:19 d2.utils.events]: [0m eta: 2:08:37  iter: 1039  total_loss: 1.312  loss_cls: 0.1815  loss_box_reg: 0.4231  loss_mask: 0.2121  loss_rpn_cls: 0.1337  loss_rpn_loc: 0.3659  time: 4.0755  data_time: 0.0082  lr: 0.01  max_mem: 0M
[32m[11/14 01:51:13 d2.utils.events]: [0m eta: 2:08:20  iter: 1059  total_loss: 1.253  loss_cls: 0.1649  loss_box_reg: 0.4072  loss_mask: 0.2084  loss_rpn_cls: 0.1293  loss_rpn_loc: 0.3428  time: 4.1057  data_time: 0.0082  lr: 0.01  max_mem: 0M
[32m[11/14 01:52:54 d2.utils.events]: [0m eta: 2:07:40  iter: 1079  total_loss: 1.193  loss_cls: 0.1603  loss_box_reg: 0.3709  loss_mask: 0.1944  loss_rpn_cls: 0.1126  loss_rpn_loc: 0.3402  time: 4.1233  data_time: 0.0082  lr: 0.01  max_mem: 0M
[32m[11/14 01:54:53 d2.utils.events]: [0m eta: 2:07:19  iter: 1099  total_loss: 1.205  loss_cls: 0.1542  loss_box_reg: 0.3962  loss_mask: 0.2061  loss_rpn_cls: 0.1001  loss_rpn_loc: 0.3241  time: 4.1568  data_time: 0.0053  lr: 0.01  max_mem: 0M
[32m[11/14 01:56:55 d2.utils.events]: [0m eta: 2:06:38  iter: 1119  total_loss: 1.26  loss_cls: 0.1922  loss_box_reg: 0.4113  loss_mask: 0.2194  loss_rpn_cls: 0.1304  loss_rpn_loc: 0.3384  time: 4.1917  data_time: 0.0083  lr: 0.01  max_mem: 0M
[32m[11/14 01:58:34 d2.utils.events]: [0m eta: 2:05:52  iter: 1139  total_loss: 1.257  loss_cls: 0.1841  loss_box_reg: 0.4068  loss_mask: 0.2124  loss_rpn_cls: 0.1083  loss_rpn_loc: 0.343  time: 4.2048  data_time: 0.0060  lr: 0.01  max_mem: 0M
[32m[11/14 02:00:29 d2.utils.events]: [0m eta: 2:05:17  iter: 1159  total_loss: 1.27  loss_cls: 0.1713  loss_box_reg: 0.3895  loss_mask: 0.2215  loss_rpn_cls: 0.1012  loss_rpn_loc: 0.3474  time: 4.2310  data_time: 0.0097  lr: 0.01  max_mem: 0M
[32m[11/14 02:02:13 d2.utils.events]: [0m eta: 2:05:28  iter: 1179  total_loss: 1.211  loss_cls: 0.1597  loss_box_reg: 0.3882  loss_mask: 0.1956  loss_rpn_cls: 0.1133  loss_rpn_loc: 0.3502  time: 4.2480  data_time: 0.0055  lr: 0.01  max_mem: 0M
[32m[11/14 02:04:03 d2.utils.events]: [0m eta: 2:05:59  iter: 1199  total_loss: 1.18  loss_cls: 0.1532  loss_box_reg: 0.3596  loss_mask: 0.1874  loss_rpn_cls: 0.1296  loss_rpn_loc: 0.3784  time: 4.2687  data_time: 0.0134  lr: 0.01  max_mem: 0M
[32m[11/14 02:05:54 d2.utils.events]: [0m eta: 2:05:59  iter: 1219  total_loss: 1.189  loss_cls: 0.1679  loss_box_reg: 0.3785  loss_mask: 0.1972  loss_rpn_cls: 0.0865  loss_rpn_loc: 0.3414  time: 4.2892  data_time: 0.0042  lr: 0.01  max_mem: 0M
[32m[11/14 02:07:45 d2.utils.events]: [0m eta: 2:05:23  iter: 1239  total_loss: 1.223  loss_cls: 0.1674  loss_box_reg: 0.4115  loss_mask: 0.1989  loss_rpn_cls: 0.1096  loss_rpn_loc: 0.3536  time: 4.3098  data_time: 0.0043  lr: 0.01  max_mem: 0M
[32m[11/14 02:09:41 d2.utils.events]: [0m eta: 2:05:23  iter: 1259  total_loss: 1.196  loss_cls: 0.1624  loss_box_reg: 0.3775  loss_mask: 0.2031  loss_rpn_cls: 0.1052  loss_rpn_loc: 0.3333  time: 4.3333  data_time: 0.0070  lr: 0.01  max_mem: 0M
[32m[11/14 02:11:43 d2.utils.events]: [0m eta: 2:05:07  iter: 1279  total_loss: 1.246  loss_cls: 0.17  loss_box_reg: 0.3728  loss_mask: 0.197  loss_rpn_cls: 0.1316  loss_rpn_loc: 0.3637  time: 4.3613  data_time: 0.0062  lr: 0.01  max_mem: 0M
[32m[11/14 02:13:32 d2.utils.events]: [0m eta: 2:05:20  iter: 1299  total_loss: 1.178  loss_cls: 0.1841  loss_box_reg: 0.3789  loss_mask: 0.1924  loss_rpn_cls: 0.126  loss_rpn_loc: 0.342  time: 4.3780  data_time: 0.0066  lr: 0.01  max_mem: 0M
[32m[11/14 02:15:39 d2.utils.events]: [0m eta: 2:05:49  iter: 1319  total_loss: 1.21  loss_cls: 0.1753  loss_box_reg: 0.3916  loss_mask: 0.1993  loss_rpn_cls: 0.1049  loss_rpn_loc: 0.3454  time: 4.4081  data_time: 0.0070  lr: 0.01  max_mem: 0M
[32m[11/14 02:17:22 d2.utils.events]: [0m eta: 2:06:31  iter: 1339  total_loss: 1.176  loss_cls: 0.1666  loss_box_reg: 0.3884  loss_mask: 0.1948  loss_rpn_cls: 0.1138  loss_rpn_loc: 0.3291  time: 4.4186  data_time: 0.0047  lr: 0.01  max_mem: 0M
[32m[11/14 02:19:06 d2.utils.events]: [0m eta: 2:06:52  iter: 1359  total_loss: 1.147  loss_cls: 0.1636  loss_box_reg: 0.3674  loss_mask: 0.1774  loss_rpn_cls: 0.1277  loss_rpn_loc: 0.2929  time: 4.4304  data_time: 0.0118  lr: 0.01  max_mem: 0M
[32m[11/14 02:20:54 d2.utils.events]: [0m eta: 2:07:08  iter: 1379  total_loss: 1.202  loss_cls: 0.1702  loss_box_reg: 0.3864  loss_mask: 0.1898  loss_rpn_cls: 0.1205  loss_rpn_loc: 0.314  time: 4.4447  data_time: 0.0048  lr: 0.01  max_mem: 0M
[32m[11/14 02:22:32 d2.utils.events]: [0m eta: 2:06:38  iter: 1399  total_loss: 1.129  loss_cls: 0.1661  loss_box_reg: 0.3672  loss_mask: 0.1927  loss_rpn_cls: 0.09735  loss_rpn_loc: 0.3207  time: 4.4509  data_time: 0.0062  lr: 0.01  max_mem: 0M
[32m[11/14 02:24:29 d2.utils.events]: [0m eta: 2:06:25  iter: 1419  total_loss: 1.204  loss_cls: 0.1691  loss_box_reg: 0.3542  loss_mask: 0.187  loss_rpn_cls: 0.1085  loss_rpn_loc: 0.3325  time: 4.4706  data_time: 0.0068  lr: 0.01  max_mem: 0M
[32m[11/14 02:26:16 d2.utils.events]: [0m eta: 2:05:49  iter: 1439  total_loss: 1.146  loss_cls: 0.1563  loss_box_reg: 0.3679  loss_mask: 0.1884  loss_rpn_cls: 0.1293  loss_rpn_loc: 0.2904  time: 4.4827  data_time: 0.0060  lr: 0.01  max_mem: 0M
[32m[11/14 02:27:47 d2.utils.events]: [0m eta: 2:04:55  iter: 1459  total_loss: 1.147  loss_cls: 0.1658  loss_box_reg: 0.3815  loss_mask: 0.1946  loss_rpn_cls: 0.1156  loss_rpn_loc: 0.2911  time: 4.4834  data_time: 0.0083  lr: 0.01  max_mem: 0M
[32m[11/14 02:29:38 d2.utils.events]: [0m eta: 2:04:12  iter: 1479  total_loss: 1.194  loss_cls: 0.1729  loss_box_reg: 0.3931  loss_mask: 0.193  loss_rpn_cls: 0.119  loss_rpn_loc: 0.3142  time: 4.4979  data_time: 0.0080  lr: 0.01  max_mem: 0M
[32m[11/14 02:31:27 d2.utils.events]: [0m eta: 2:03:53  iter: 1499  total_loss: 1.117  loss_cls: 0.1618  loss_box_reg: 0.392  loss_mask: 0.1863  loss_rpn_cls: 0.1043  loss_rpn_loc: 0.2916  time: 4.5107  data_time: 0.0057  lr: 0.01  max_mem: 0M
[32m[11/14 02:32:59 d2.utils.events]: [0m eta: 2:02:40  iter: 1519  total_loss: 1.105  loss_cls: 0.1429  loss_box_reg: 0.3718  loss_mask: 0.1849  loss_rpn_cls: 0.1225  loss_rpn_loc: 0.2864  time: 4.5117  data_time: 0.0057  lr: 0.01  max_mem: 0M
[32m[11/14 02:34:43 d2.utils.events]: [0m eta: 2:01:55  iter: 1539  total_loss: 1.117  loss_cls: 0.1507  loss_box_reg: 0.3637  loss_mask: 0.1789  loss_rpn_cls: 0.09451  loss_rpn_loc: 0.2964  time: 4.5211  data_time: 0.0132  lr: 0.01  max_mem: 0M
[32m[11/14 02:36:26 d2.utils.events]: [0m eta: 2:00:34  iter: 1559  total_loss: 1.091  loss_cls: 0.156  loss_box_reg: 0.3693  loss_mask: 0.1873  loss_rpn_cls: 0.09656  loss_rpn_loc: 0.2824  time: 4.5286  data_time: 0.0086  lr: 0.01  max_mem: 0M
[32m[11/14 02:37:52 d2.utils.events]: [0m eta: 1:58:55  iter: 1579  total_loss: 1.055  loss_cls: 0.1468  loss_box_reg: 0.3745  loss_mask: 0.1892  loss_rpn_cls: 0.08295  loss_rpn_loc: 0.2822  time: 4.5259  data_time: 0.0026  lr: 0.01  max_mem: 0M
[32m[11/14 02:39:36 d2.utils.events]: [0m eta: 1:57:10  iter: 1599  total_loss: 1.252  loss_cls: 0.1484  loss_box_reg: 0.3478  loss_mask: 0.1845  loss_rpn_cls: 0.224  loss_rpn_loc: 0.3209  time: 4.5347  data_time: 0.0079  lr: 0.01  max_mem: 0M
[32m[11/14 02:41:23 d2.utils.events]: [0m eta: 1:55:47  iter: 1619  total_loss: 1.105  loss_cls: 0.1374  loss_box_reg: 0.3409  loss_mask: 0.1765  loss_rpn_cls: 0.1108  loss_rpn_loc: 0.318  time: 4.5444  data_time: 0.0082  lr: 0.01  max_mem: 0M
[32m[11/14 02:43:08 d2.utils.events]: [0m eta: 1:54:19  iter: 1639  total_loss: 1.076  loss_cls: 0.1365  loss_box_reg: 0.3358  loss_mask: 0.1781  loss_rpn_cls: 0.08864  loss_rpn_loc: 0.3192  time: 4.5528  data_time: 0.0070  lr: 0.01  max_mem: 0M
[32m[11/14 02:45:01 d2.utils.events]: [0m eta: 1:53:12  iter: 1659  total_loss: 1.085  loss_cls: 0.1649  loss_box_reg: 0.353  loss_mask: 0.1832  loss_rpn_cls: 0.09546  loss_rpn_loc: 0.2807  time: 4.5663  data_time: 0.0110  lr: 0.01  max_mem: 0M
[32m[11/14 02:46:46 d2.utils.events]: [0m eta: 1:51:48  iter: 1679  total_loss: 1.115  loss_cls: 0.1658  loss_box_reg: 0.362  loss_mask: 0.1805  loss_rpn_cls: 0.1034  loss_rpn_loc: 0.283  time: 4.5744  data_time: 0.0132  lr: 0.01  max_mem: 0M
[32m[11/14 02:48:05 d2.utils.events]: [0m eta: 1:50:00  iter: 1699  total_loss: 1.143  loss_cls: 0.1711  loss_box_reg: 0.3566  loss_mask: 0.1823  loss_rpn_cls: 0.102  loss_rpn_loc: 0.3159  time: 4.5668  data_time: 0.0039  lr: 0.01  max_mem: 0M
[32m[11/14 02:49:51 d2.utils.events]: [0m eta: 1:48:58  iter: 1719  total_loss: 1.166  loss_cls: 0.1572  loss_box_reg: 0.3421  loss_mask: 0.1798  loss_rpn_cls: 0.09428  loss_rpn_loc: 0.3469  time: 4.5756  data_time: 0.0103  lr: 0.01  max_mem: 0M
[32m[11/14 02:51:42 d2.utils.events]: [0m eta: 1:47:47  iter: 1739  total_loss: 1.056  loss_cls: 0.1552  loss_box_reg: 0.334  loss_mask: 0.1651  loss_rpn_cls: 0.1013  loss_rpn_loc: 0.3067  time: 4.5864  data_time: 0.0085  lr: 0.01  max_mem: 0M
[32m[11/14 02:53:25 d2.utils.events]: [0m eta: 1:46:52  iter: 1759  total_loss: 1.039  loss_cls: 0.1564  loss_box_reg: 0.3679  loss_mask: 0.1746  loss_rpn_cls: 0.09568  loss_rpn_loc: 0.2686  time: 4.5931  data_time: 0.0094  lr: 0.01  max_mem: 0M
[32m[11/14 02:55:12 d2.utils.events]: [0m eta: 1:45:54  iter: 1779  total_loss: 1.028  loss_cls: 0.1438  loss_box_reg: 0.3487  loss_mask: 0.1641  loss_rpn_cls: 0.08032  loss_rpn_loc: 0.2856  time: 4.6017  data_time: 0.0059  lr: 0.01  max_mem: 0M
[32m[11/14 02:56:55 d2.utils.events]: [0m eta: 1:44:54  iter: 1799  total_loss: 1.055  loss_cls: 0.1536  loss_box_reg: 0.3402  loss_mask: 0.1687  loss_rpn_cls: 0.07519  loss_rpn_loc: 0.3032  time: 4.6075  data_time: 0.0082  lr: 0.01  max_mem: 0M
[32m[11/14 02:58:23 d2.utils.events]: [0m eta: 1:43:21  iter: 1819  total_loss: 1.05  loss_cls: 0.1518  loss_box_reg: 0.358  loss_mask: 0.1829  loss_rpn_cls: 0.08314  loss_rpn_loc: 0.2743  time: 4.6055  data_time: 0.0035  lr: 0.01  max_mem: 0M
[32m[11/14 03:00:11 d2.utils.events]: [0m eta: 1:41:49  iter: 1839  total_loss: 1.065  loss_cls: 0.1642  loss_box_reg: 0.354  loss_mask: 0.1706  loss_rpn_cls: 0.08341  loss_rpn_loc: 0.2947  time: 4.6138  data_time: 0.0099  lr: 0.01  max_mem: 0M
[32m[11/14 03:01:53 d2.utils.events]: [0m eta: 1:40:29  iter: 1859  total_loss: 0.9846  loss_cls: 0.1402  loss_box_reg: 0.3183  loss_mask: 0.1651  loss_rpn_cls: 0.07635  loss_rpn_loc: 0.2906  time: 4.6191  data_time: 0.0077  lr: 0.01  max_mem: 0M
[32m[11/14 03:03:31 d2.utils.events]: [0m eta: 1:38:39  iter: 1879  total_loss: 1.007  loss_cls: 0.1371  loss_box_reg: 0.3232  loss_mask: 0.1693  loss_rpn_cls: 0.08483  loss_rpn_loc: 0.2719  time: 4.6219  data_time: 0.0069  lr: 0.01  max_mem: 0M
[32m[11/14 03:05:28 d2.utils.events]: [0m eta: 1:37:06  iter: 1899  total_loss: 0.993  loss_cls: 0.1268  loss_box_reg: 0.3259  loss_mask: 0.1586  loss_rpn_cls: 0.1038  loss_rpn_loc: 0.2652  time: 4.6348  data_time: 0.0064  lr: 0.01  max_mem: 0M
[32m[11/14 03:07:08 d2.utils.events]: [0m eta: 1:35:10  iter: 1919  total_loss: 0.9749  loss_cls: 0.1334  loss_box_reg: 0.3247  loss_mask: 0.1642  loss_rpn_cls: 0.07814  loss_rpn_loc: 0.2766  time: 4.6389  data_time: 0.0078  lr: 0.01  max_mem: 0M
[32m[11/14 03:08:56 d2.utils.events]: [0m eta: 1:33:30  iter: 1939  total_loss: 0.9364  loss_cls: 0.1464  loss_box_reg: 0.3118  loss_mask: 0.1606  loss_rpn_cls: 0.08661  loss_rpn_loc: 0.2529  time: 4.6468  data_time: 0.0099  lr: 0.01  max_mem: 0M
[32m[11/14 03:10:49 d2.utils.events]: [0m eta: 1:31:54  iter: 1959  total_loss: 0.9182  loss_cls: 0.1268  loss_box_reg: 0.3214  loss_mask: 0.1548  loss_rpn_cls: 0.07353  loss_rpn_loc: 0.2613  time: 4.6568  data_time: 0.0061  lr: 0.01  max_mem: 0M
[32m[11/14 03:12:24 d2.utils.events]: [0m eta: 1:30:12  iter: 1979  total_loss: 1.048  loss_cls: 0.1497  loss_box_reg: 0.3233  loss_mask: 0.165  loss_rpn_cls: 0.06564  loss_rpn_loc: 0.2754  time: 4.6577  data_time: 0.0086  lr: 0.01  max_mem: 0M
[32m[11/14 03:14:11 d2.utils.events]: [0m eta: 1:28:20  iter: 1999  total_loss: 1.035  loss_cls: 0.1494  loss_box_reg: 0.3416  loss_mask: 0.1633  loss_rpn_cls: 0.107  loss_rpn_loc: 0.2706  time: 4.6645  data_time: 0.0078  lr: 0.01  max_mem: 0M
[32m[11/14 03:15:55 d2.utils.events]: [0m eta: 1:26:41  iter: 2019  total_loss: 1.068  loss_cls: 0.1438  loss_box_reg: 0.3473  loss_mask: 0.1764  loss_rpn_cls: 0.08277  loss_rpn_loc: 0.2871  time: 4.6698  data_time: 0.0041  lr: 0.01  max_mem: 0M
[32m[11/14 03:17:31 d2.utils.events]: [0m eta: 1:24:46  iter: 2039  total_loss: 1.109  loss_cls: 0.1553  loss_box_reg: 0.3459  loss_mask: 0.1685  loss_rpn_cls: 0.1022  loss_rpn_loc: 0.2757  time: 4.6711  data_time: 0.0052  lr: 0.01  max_mem: 0M
[32m[11/14 03:19:08 d2.utils.events]: [0m eta: 1:22:47  iter: 2059  total_loss: 0.9545  loss_cls: 0.1274  loss_box_reg: 0.3232  loss_mask: 0.1646  loss_rpn_cls: 0.07546  loss_rpn_loc: 0.2714  time: 4.6728  data_time: 0.0089  lr: 0.01  max_mem: 0M
[32m[11/14 03:21:00 d2.utils.events]: [0m eta: 1:21:10  iter: 2079  total_loss: 0.9635  loss_cls: 0.1344  loss_box_reg: 0.2996  loss_mask: 0.1533  loss_rpn_cls: 0.08085  loss_rpn_loc: 0.2817  time: 4.6815  data_time: 0.0104  lr: 0.01  max_mem: 0M
[32m[11/14 03:22:29 d2.utils.events]: [0m eta: 1:18:57  iter: 2099  total_loss: 0.9603  loss_cls: 0.1469  loss_box_reg: 0.3224  loss_mask: 0.1558  loss_rpn_cls: 0.06789  loss_rpn_loc: 0.2726  time: 4.6794  data_time: 0.0102  lr: 0.01  max_mem: 0M
[32m[11/14 03:24:07 d2.utils.events]: [0m eta: 1:16:26  iter: 2119  total_loss: 0.9453  loss_cls: 0.1344  loss_box_reg: 0.3186  loss_mask: 0.1597  loss_rpn_cls: 0.07472  loss_rpn_loc: 0.2696  time: 4.6814  data_time: 0.0082  lr: 0.01  max_mem: 0M
[32m[11/14 03:25:58 d2.utils.events]: [0m eta: 1:14:58  iter: 2139  total_loss: 0.9228  loss_cls: 0.136  loss_box_reg: 0.3224  loss_mask: 0.1622  loss_rpn_cls: 0.0568  loss_rpn_loc: 0.2384  time: 4.6895  data_time: 0.0075  lr: 0.01  max_mem: 0M
[32m[11/14 03:27:36 d2.utils.events]: [0m eta: 1:12:56  iter: 2159  total_loss: 0.9523  loss_cls: 0.1264  loss_box_reg: 0.3303  loss_mask: 0.1644  loss_rpn_cls: 0.06324  loss_rpn_loc: 0.2489  time: 4.6917  data_time: 0.0062  lr: 0.01  max_mem: 0M
[32m[11/14 03:29:19 d2.utils.events]: [0m eta: 1:11:06  iter: 2179  total_loss: 0.8748  loss_cls: 0.1324  loss_box_reg: 0.3003  loss_mask: 0.1524  loss_rpn_cls: 0.05769  loss_rpn_loc: 0.2347  time: 4.6958  data_time: 0.0066  lr: 0.01  max_mem: 0M
[32m[11/14 03:31:00 d2.utils.events]: [0m eta: 1:09:02  iter: 2199  total_loss: 0.9856  loss_cls: 0.1298  loss_box_reg: 0.3237  loss_mask: 0.1626  loss_rpn_cls: 0.08464  loss_rpn_loc: 0.2852  time: 4.6988  data_time: 0.0091  lr: 0.01  max_mem: 0M
[32m[11/14 03:32:43 d2.utils.events]: [0m eta: 1:07:09  iter: 2219  total_loss: 0.9171  loss_cls: 0.123  loss_box_reg: 0.3088  loss_mask: 0.1548  loss_rpn_cls: 0.07523  loss_rpn_loc: 0.254  time: 4.7031  data_time: 0.0072  lr: 0.01  max_mem: 0M
[32m[11/14 03:34:20 d2.utils.events]: [0m eta: 1:05:09  iter: 2239  total_loss: 0.9644  loss_cls: 0.121  loss_box_reg: 0.3048  loss_mask: 0.1602  loss_rpn_cls: 0.06726  loss_rpn_loc: 0.2736  time: 4.7045  data_time: 0.0108  lr: 0.01  max_mem: 0M
[32m[11/14 03:36:01 d2.utils.events]: [0m eta: 1:03:10  iter: 2259  total_loss: 0.886  loss_cls: 0.1066  loss_box_reg: 0.2824  loss_mask: 0.1498  loss_rpn_cls: 0.08085  loss_rpn_loc: 0.2573  time: 4.7075  data_time: 0.0105  lr: 0.01  max_mem: 0M
[32m[11/14 03:37:33 d2.utils.events]: [0m eta: 1:00:50  iter: 2279  total_loss: 0.9907  loss_cls: 0.1247  loss_box_reg: 0.3383  loss_mask: 0.1569  loss_rpn_cls: 0.07925  loss_rpn_loc: 0.2783  time: 4.7064  data_time: 0.0059  lr: 0.01  max_mem: 0M
[32m[11/14 03:39:10 d2.utils.events]: [0m eta: 0:58:58  iter: 2299  total_loss: 0.9486  loss_cls: 0.1453  loss_box_reg: 0.3248  loss_mask: 0.1592  loss_rpn_cls: 0.06606  loss_rpn_loc: 0.2607  time: 4.7074  data_time: 0.0033  lr: 0.01  max_mem: 0M
[32m[11/14 03:40:51 d2.utils.events]: [0m eta: 0:57:03  iter: 2319  total_loss: 0.95  loss_cls: 0.1265  loss_box_reg: 0.305  loss_mask: 0.1532  loss_rpn_cls: 0.09592  loss_rpn_loc: 0.2489  time: 4.7106  data_time: 0.0072  lr: 0.01  max_mem: 0M
[32m[11/14 03:42:38 d2.utils.events]: [0m eta: 0:55:26  iter: 2339  total_loss: 0.9966  loss_cls: 0.1284  loss_box_reg: 0.3109  loss_mask: 0.1586  loss_rpn_cls: 0.08961  loss_rpn_loc: 0.2666  time: 4.7159  data_time: 0.0071  lr: 0.01  max_mem: 0M
[32m[11/14 03:44:29 d2.utils.events]: [0m eta: 0:53:47  iter: 2359  total_loss: 0.9799  loss_cls: 0.1198  loss_box_reg: 0.325  loss_mask: 0.1619  loss_rpn_cls: 0.0821  loss_rpn_loc: 0.277  time: 4.7229  data_time: 0.0049  lr: 0.01  max_mem: 0M
[32m[11/14 03:46:21 d2.utils.events]: [0m eta: 0:52:09  iter: 2379  total_loss: 0.9466  loss_cls: 0.1236  loss_box_reg: 0.2919  loss_mask: 0.1551  loss_rpn_cls: 0.09102  loss_rpn_loc: 0.2815  time: 4.7304  data_time: 0.0087  lr: 0.01  max_mem: 0M
[32m[11/14 03:47:48 d2.utils.events]: [0m eta: 0:50:24  iter: 2399  total_loss: 0.9472  loss_cls: 0.1163  loss_box_reg: 0.3206  loss_mask: 0.1604  loss_rpn_cls: 0.09  loss_rpn_loc: 0.2768  time: 4.7273  data_time: 0.0047  lr: 0.01  max_mem: 0M
[32m[11/14 03:49:30 d2.utils.events]: [0m eta: 0:48:33  iter: 2419  total_loss: 0.893  loss_cls: 0.1211  loss_box_reg: 0.2884  loss_mask: 0.1578  loss_rpn_cls: 0.0871  loss_rpn_loc: 0.2487  time: 4.7303  data_time: 0.0109  lr: 0.01  max_mem: 0M
[32m[11/14 03:51:26 d2.utils.events]: [0m eta: 0:47:02  iter: 2439  total_loss: 0.924  loss_cls: 0.1152  loss_box_reg: 0.2942  loss_mask: 0.1507  loss_rpn_cls: 0.07333  loss_rpn_loc: 0.2484  time: 4.7391  data_time: 0.0051  lr: 0.01  max_mem: 0M
[32m[11/14 03:52:59 d2.utils.events]: [0m eta: 0:45:20  iter: 2459  total_loss: 0.8866  loss_cls: 0.1095  loss_box_reg: 0.2899  loss_mask: 0.1546  loss_rpn_cls: 0.08192  loss_rpn_loc: 0.2591  time: 4.7383  data_time: 0.0073  lr: 0.01  max_mem: 0M
[32m[11/14 03:54:48 d2.utils.events]: [0m eta: 0:43:39  iter: 2479  total_loss: 0.9261  loss_cls: 0.1217  loss_box_reg: 0.3002  loss_mask: 0.1555  loss_rpn_cls: 0.07819  loss_rpn_loc: 0.232  time: 4.7440  data_time: 0.0120  lr: 0.01  max_mem: 0M
[32m[11/14 03:56:34 d2.utils.events]: [0m eta: 0:41:57  iter: 2499  total_loss: 0.8787  loss_cls: 0.1104  loss_box_reg: 0.2885  loss_mask: 0.1473  loss_rpn_cls: 0.06319  loss_rpn_loc: 0.2535  time: 4.7483  data_time: 0.0118  lr: 0.01  max_mem: 0M
[32m[11/14 03:57:55 d2.utils.events]: [0m eta: 0:40:10  iter: 2519  total_loss: 0.9071  loss_cls: 0.1054  loss_box_reg: 0.295  loss_mask: 0.1565  loss_rpn_cls: 0.05605  loss_rpn_loc: 0.2585  time: 4.7427  data_time: 0.0036  lr: 0.01  max_mem: 0M
[32m[11/14 03:59:35 d2.utils.events]: [0m eta: 0:38:25  iter: 2539  total_loss: 0.9079  loss_cls: 0.119  loss_box_reg: 0.3098  loss_mask: 0.1528  loss_rpn_cls: 0.07004  loss_rpn_loc: 0.2654  time: 4.7449  data_time: 0.0106  lr: 0.01  max_mem: 0M
[32m[11/14 04:01:20 d2.utils.events]: [0m eta: 0:36:48  iter: 2559  total_loss: 0.9216  loss_cls: 0.1226  loss_box_reg: 0.3007  loss_mask: 0.1616  loss_rpn_cls: 0.07681  loss_rpn_loc: 0.2428  time: 4.7487  data_time: 0.0115  lr: 0.01  max_mem: 0M
[32m[11/14 04:03:09 d2.utils.events]: [0m eta: 0:35:17  iter: 2579  total_loss: 0.9015  loss_cls: 0.1057  loss_box_reg: 0.2787  loss_mask: 0.1503  loss_rpn_cls: 0.06936  loss_rpn_loc: 0.2618  time: 4.7542  data_time: 0.0076  lr: 0.01  max_mem: 0M
[32m[11/14 04:04:53 d2.utils.events]: [0m eta: 0:33:36  iter: 2599  total_loss: 0.8414  loss_cls: 0.1156  loss_box_reg: 0.2914  loss_mask: 0.1473  loss_rpn_cls: 0.06116  loss_rpn_loc: 0.2389  time: 4.7574  data_time: 0.0120  lr: 0.01  max_mem: 0M
[32m[11/14 04:06:44 d2.utils.events]: [0m eta: 0:31:56  iter: 2619  total_loss: 0.8607  loss_cls: 0.126  loss_box_reg: 0.2885  loss_mask: 0.1424  loss_rpn_cls: 0.06164  loss_rpn_loc: 0.2443  time: 4.7637  data_time: 0.0070  lr: 0.01  max_mem: 0M
[32m[11/14 04:08:26 d2.utils.events]: [0m eta: 0:30:12  iter: 2639  total_loss: 0.8926  loss_cls: 0.112  loss_box_reg: 0.2814  loss_mask: 0.1447  loss_rpn_cls: 0.07488  loss_rpn_loc: 0.2597  time: 4.7662  data_time: 0.0049  lr: 0.01  max_mem: 0M
[32m[11/14 04:10:16 d2.utils.events]: [0m eta: 0:28:31  iter: 2659  total_loss: 0.8763  loss_cls: 0.1295  loss_box_reg: 0.2973  loss_mask: 0.1541  loss_rpn_cls: 0.06455  loss_rpn_loc: 0.2352  time: 4.7718  data_time: 0.0094  lr: 0.01  max_mem: 0M
[32m[11/14 04:12:01 d2.utils.events]: [0m eta: 0:26:49  iter: 2679  total_loss: 0.8617  loss_cls: 0.1228  loss_box_reg: 0.2697  loss_mask: 0.1519  loss_rpn_cls: 0.0557  loss_rpn_loc: 0.2405  time: 4.7753  data_time: 0.0094  lr: 0.01  max_mem: 0M
[32m[11/14 04:13:21 d2.utils.events]: [0m eta: 0:25:08  iter: 2699  total_loss: 0.8891  loss_cls: 0.1168  loss_box_reg: 0.2785  loss_mask: 0.1429  loss_rpn_cls: 0.06215  loss_rpn_loc: 0.2294  time: 4.7693  data_time: 0.0045  lr: 0.01  max_mem: 0M
[32m[11/14 04:14:58 d2.utils.events]: [0m eta: 0:23:21  iter: 2719  total_loss: 0.813  loss_cls: 0.1079  loss_box_reg: 0.277  loss_mask: 0.1468  loss_rpn_cls: 0.05664  loss_rpn_loc: 0.2326  time: 4.7702  data_time: 0.0120  lr: 0.01  max_mem: 0M
[32m[11/14 04:16:42 d2.utils.events]: [0m eta: 0:21:41  iter: 2739  total_loss: 0.8649  loss_cls: 0.09289  loss_box_reg: 0.2778  loss_mask: 0.1443  loss_rpn_cls: 0.05652  loss_rpn_loc: 0.2398  time: 4.7733  data_time: 0.0112  lr: 0.01  max_mem: 0M
[32m[11/14 04:18:20 d2.utils.events]: [0m eta: 0:19:59  iter: 2759  total_loss: 0.8266  loss_cls: 0.1127  loss_box_reg: 0.2874  loss_mask: 0.1437  loss_rpn_cls: 0.0516  loss_rpn_loc: 0.2382  time: 4.7740  data_time: 0.0049  lr: 0.01  max_mem: 0M
[32m[11/14 04:20:12 d2.utils.events]: [0m eta: 0:18:21  iter: 2779  total_loss: 0.8597  loss_cls: 0.1221  loss_box_reg: 0.2913  loss_mask: 0.1456  loss_rpn_cls: 0.0638  loss_rpn_loc: 0.2532  time: 4.7801  data_time: 0.0044  lr: 0.01  max_mem: 0M
[32m[11/14 04:22:08 d2.utils.events]: [0m eta: 0:16:43  iter: 2799  total_loss: 0.8753  loss_cls: 0.1087  loss_box_reg: 0.292  loss_mask: 0.1565  loss_rpn_cls: 0.05588  loss_rpn_loc: 0.257  time: 4.7873  data_time: 0.0037  lr: 0.01  max_mem: 0M
[32m[11/14 04:23:45 d2.utils.events]: [0m eta: 0:15:06  iter: 2819  total_loss: 0.8627  loss_cls: 0.1186  loss_box_reg: 0.2856  loss_mask: 0.1508  loss_rpn_cls: 0.05144  loss_rpn_loc: 0.2251  time: 4.7877  data_time: 0.0100  lr: 0.01  max_mem: 0M
[32m[11/14 04:25:44 d2.utils.events]: [0m eta: 0:13:26  iter: 2839  total_loss: 0.8606  loss_cls: 0.1147  loss_box_reg: 0.2751  loss_mask: 0.1411  loss_rpn_cls: 0.08199  loss_rpn_loc: 0.2268  time: 4.7959  data_time: 0.0075  lr: 0.01  max_mem: 0M
[32m[11/14 04:27:28 d2.utils.events]: [0m eta: 0:11:45  iter: 2859  total_loss: 0.8268  loss_cls: 0.1167  loss_box_reg: 0.2754  loss_mask: 0.1395  loss_rpn_cls: 0.06654  loss_rpn_loc: 0.2296  time: 4.7988  data_time: 0.0105  lr: 0.01  max_mem: 0M
[32m[11/14 04:29:22 d2.utils.events]: [0m eta: 0:10:09  iter: 2879  total_loss: 0.8601  loss_cls: 0.1088  loss_box_reg: 0.2926  loss_mask: 0.1444  loss_rpn_cls: 0.05934  loss_rpn_loc: 0.262  time: 4.8050  data_time: 0.0066  lr: 0.01  max_mem: 0M
[32m[11/14 04:31:22 d2.utils.events]: [0m eta: 0:08:26  iter: 2899  total_loss: 0.8811  loss_cls: 0.1063  loss_box_reg: 0.2727  loss_mask: 0.1473  loss_rpn_cls: 0.05303  loss_rpn_loc: 0.2623  time: 4.8131  data_time: 0.0034  lr: 0.01  max_mem: 0M
[32m[11/14 04:33:00 d2.utils.events]: [0m eta: 0:06:44  iter: 2919  total_loss: 0.8061  loss_cls: 0.1086  loss_box_reg: 0.2813  loss_mask: 0.1402  loss_rpn_cls: 0.06458  loss_rpn_loc: 0.2152  time: 4.8136  data_time: 0.0076  lr: 0.01  max_mem: 0M
[32m[11/14 04:34:45 d2.utils.events]: [0m eta: 0:05:03  iter: 2939  total_loss: 0.8159  loss_cls: 0.1075  loss_box_reg: 0.2808  loss_mask: 0.1361  loss_rpn_cls: 0.04873  loss_rpn_loc: 0.2346  time: 4.8167  data_time: 0.0064  lr: 0.01  max_mem: 0M
[32m[11/14 04:36:28 d2.utils.events]: [0m eta: 0:03:21  iter: 2959  total_loss: 0.8462  loss_cls: 0.1102  loss_box_reg: 0.2851  loss_mask: 0.1386  loss_rpn_cls: 0.05237  loss_rpn_loc: 0.2407  time: 4.8187  data_time: 0.0071  lr: 0.01  max_mem: 0M
[32m[11/14 04:37:52 d2.utils.events]: [0m eta: 0:01:40  iter: 2979  total_loss: 0.8508  loss_cls: 0.1201  loss_box_reg: 0.2771  loss_mask: 0.1482  loss_rpn_cls: 0.06794  loss_rpn_loc: 0.2092  time: 4.8146  data_time: 0.0072  lr: 0.01  max_mem: 0M
[32m[11/14 04:39:29 d2.utils.events]: [0m eta: 0:00:00  iter: 2999  total_loss: 0.8352  loss_cls: 0.1006  loss_box_reg: 0.2878  loss_mask: 0.1443  loss_rpn_cls: 0.07418  loss_rpn_loc: 0.2215  time: 4.8145  data_time: 0.0111  lr: 0.01  max_mem: 0M
[32m[11/14 04:39:29 d2.engine.hooks]: [0mOverall training speed: 2998 iterations in 4:00:33 (4.8145 s / it)
[32m[11/14 04:39:29 d2.engine.hooks]: [0mTotal training time: 4:00:41 (0:00:08 on hooks)
[32m[11/14 04:39:29 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[32m[11/14 04:39:29 d2.data.common]: [0mSerializing 20 elements to byte tensors and concatenating them all ...
[32m[11/14 04:39:29 d2.data.common]: [0mSerialized dataset takes 0.46 MiB
[5m[31mWARNING[0m [32m[11/14 04:39:29 d2.engine.defaults]: [0mNo evaluator found. Use `DefaultTrainer.test(evaluators=)`, or implement its `build_evaluator` method.
[32m[11/14 04:39:29 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[32m[11/14 04:39:29 d2.data.common]: [0mSerializing 6 elements to byte tensors and concatenating them all ...
[32m[11/14 04:39:29 d2.data.common]: [0mSerialized dataset takes 0.11 MiB
[5m[31mWARNING[0m [32m[11/14 04:39:29 d2.engine.defaults]: [0mNo evaluator found. Use `DefaultTrainer.test(evaluators=)`, or implement its `build_evaluator` method.
USING MODEL WEIGHT: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp2/model_0002999.pth
Dataset: satellite_Val
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S08_03_SE1_1000X03.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S08_03_SE1_1000X03.png
	num_instances: 96
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S06_01_SE1_500X67.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S06_01_SE1_500X67.png
	num_instances: 68
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S04_02_SE1_1000X50.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S04_02_SE1_1000X50.png
	num_instances: 48
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S03_03_SE1_1250X41.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S03_03_SE1_1250X41.png
	num_instances: 123
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S02_01_SE1_300X14.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S02_01_SE1_300X14.png
	num_instances: 89
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/HP743_2S_250x.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/HP743_2S_250x.png
	num_instances: 65
gt filename: S08_03_SE1_1000X03.png	 pred filename: S08_03_SE1_1000X03.png
gt filename: S06_01_SE1_500X67.png	 pred filename: S06_01_SE1_500X67.png
gt filename: S04_02_SE1_1000X50.png	 pred filename: S04_02_SE1_1000X50.png
gt filename: S03_03_SE1_1250X41.png	 pred filename: S03_03_SE1_1250X41.png
gt filename: S02_01_SE1_300X14.png	 pred filename: S02_01_SE1_300X14.png
gt filename: HP743_2S_250x.png	 pred filename: HP743_2S_250x.png
x:  [1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2]
y:  [0.53, 0.37, 0.58, 0.49, 0.54, 0.54, 0.58, 0.46, 0.62, 0.54, 0.49, 0.71]
Average Precision Score:  0.5079704418939684
Average Recall Score:     0.568225468820707
Precision: 0.5855479687576755
Recall: 0.6164985777088182
---
Precision: 0.4466003848620911
Recall: 0.4743251298646002
---
Precision: 0.7314766158696795
Recall: 0.6816846229187071
---
Precision: 0.5043609527004361
Recall: 0.518180251594003
---
Precision: 0.7892179334372421
Recall: 0.5905598243688255
---
Precision: 0.33095768374164813
Recall: 0.7393034825870647
---
USING MODEL WEIGHT: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp2/model_final.pth
Dataset: satellite_Val
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S08_03_SE1_1000X03.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S08_03_SE1_1000X03.png
	num_instances: 96
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S06_01_SE1_500X67.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S06_01_SE1_500X67.png
	num_instances: 68
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S04_02_SE1_1000X50.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S04_02_SE1_1000X50.png
	num_instances: 48
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S03_03_SE1_1250X41.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S03_03_SE1_1250X41.png
	num_instances: 123
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S02_01_SE1_300X14.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S02_01_SE1_300X14.png
	num_instances: 89
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/HP743_2S_250x.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/HP743_2S_250x.png
	num_instances: 65
gt filename: S08_03_SE1_1000X03.png	 pred filename: S08_03_SE1_1000X03.png
gt filename: S06_01_SE1_500X67.png	 pred filename: S06_01_SE1_500X67.png
gt filename: S04_02_SE1_1000X50.png	 pred filename: S04_02_SE1_1000X50.png
gt filename: S03_03_SE1_1250X41.png	 pred filename: S03_03_SE1_1250X41.png
gt filename: S02_01_SE1_300X14.png	 pred filename: S02_01_SE1_300X14.png
gt filename: HP743_2S_250x.png	 pred filename: HP743_2S_250x.png
x:  [1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2]
y:  [0.53, 0.37, 0.58, 0.49, 0.54, 0.54, 0.58, 0.46, 0.62, 0.54, 0.49, 0.71]
Average Precision Score:  0.5079704418939684
Average Recall Score:     0.568225468820707
Precision: 0.5855479687576755
Recall: 0.6164985777088182
---
Precision: 0.4466003848620911
Recall: 0.4743251298646002
---
Precision: 0.7314766158696795
Recall: 0.6816846229187071
---
Precision: 0.5043609527004361
Recall: 0.518180251594003
---
Precision: 0.7892179334372421
Recall: 0.5905598243688255
---
Precision: 0.33095768374164813
Recall: 0.7393034825870647
---
Ignoring Final Model
Deleting: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp2/model_0002999.pth
Current File Path
../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp2/model_0002999.pth
New File Path
../../../../../../../ocean/projects/dmr200021p/sprice/variance/CPU_FULL_CONFIG/trial1/model11.pth
Deleting: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp2/model_final.pth
Current File Path
../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp2/model_final.pth
New File Path
../../../../../../../ocean/projects/dmr200021p/sprice/variance/CPU_FULL_CONFIG/trial1/model11.pth
Deleting: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp2/results_checkpoint_0002999.pickle
../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp2/results_checkpoint_0002999.pickle
Deleting: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp2/results_checkpoint_final.pickle
../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp2/results_checkpoint_final.pickle
Removing: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp2/metrics.json
Removing: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp2/last_checkpoint
Registered Datasets: ['satellite_Train', 'satellite_Val']
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/HP743_4S_500x.png
	num_instances: 103
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S08_01_SE1_1000X94.png
	num_instances: 68
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/HP743_6S_250x.png
	num_instances: 102
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S08_03_SE1_1000X03.png
	num_instances: 88
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S06_01_SE1_500X67.png
	num_instances: 54
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S04_02_SE1_1000X50.png
	num_instances: 45
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S03_03_SE1_1250X41.png
	num_instances: 111
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S02_01_SE1_300X14.png
	num_instances: 98
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/HP743_2S_250x.png
	num_instances: 49
Weights not found, weights will be downloaded from source: https://dl.fbaipublicfiles.com/detectron2/COCO-InstanceSegmentation/mask_rcnn_R_50_FPN_3x/137849600/model_final_f10217.pkl
[32m[11/14 04:40:19 d2.engine.defaults]: [0mModel:
GeneralizedRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): StandardROIHeads(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): FastRCNNConvFCHead(
      (flatten): Flatten(start_dim=1, end_dim=-1)
      (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      (fc_relu1): ReLU()
      (fc2): Linear(in_features=1024, out_features=1024, bias=True)
      (fc_relu2): ReLU()
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=1024, out_features=2, bias=True)
      (bbox_pred): Linear(in_features=1024, out_features=4, bias=True)
    )
    (mask_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(14, 14), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(14, 14), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (mask_head): MaskRCNNConvUpsampleHead(
      (mask_fcn1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn2): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn3): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn4): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
      (deconv_relu): ReLU()
      (predictor): Conv2d(256, 1, kernel_size=(1, 1), stride=(1, 1))
    )
  )
)
[32m[11/14 04:40:19 d2.data.build]: [0mRemoved 0 images with no usable annotations. 20 images left.
[32m[11/14 04:40:19 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice')]
[32m[11/14 04:40:19 d2.data.build]: [0mUsing training sampler TrainingSampler
[32m[11/14 04:40:19 d2.data.common]: [0mSerializing 20 elements to byte tensors and concatenating them all ...
[32m[11/14 04:40:19 d2.data.common]: [0mSerialized dataset takes 0.46 MiB
[5m[31mWARNING[0m [32m[11/14 04:40:19 d2.solver.build]: [0mSOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[32m[11/14 04:40:19 d2.checkpoint.c2_model_loading]: [0mRenaming Caffe2 weights ......
[32m[11/14 04:40:19 d2.checkpoint.c2_model_loading]: [0mFollowing weights matched with submodule backbone.bottom_up:
| Names in Model    | Names in Checkpoint      | Shapes                                          |
|:------------------|:-------------------------|:------------------------------------------------|
| res2.0.conv1.*    | res2_0_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,1,1)             |
| res2.0.conv2.*    | res2_0_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.0.conv3.*    | res2_0_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.0.shortcut.* | res2_0_branch1_{bn_*,w}  | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.1.conv1.*    | res2_1_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,256,1,1)            |
| res2.1.conv2.*    | res2_1_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.1.conv3.*    | res2_1_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.2.conv1.*    | res2_2_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,256,1,1)            |
| res2.2.conv2.*    | res2_2_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.2.conv3.*    | res2_2_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res3.0.conv1.*    | res3_0_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,256,1,1)       |
| res3.0.conv2.*    | res3_0_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.0.conv3.*    | res3_0_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.0.shortcut.* | res3_0_branch1_{bn_*,w}  | (512,) (512,) (512,) (512,) (512,256,1,1)       |
| res3.1.conv1.*    | res3_1_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.1.conv2.*    | res3_1_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.1.conv3.*    | res3_1_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.2.conv1.*    | res3_2_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.2.conv2.*    | res3_2_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.2.conv3.*    | res3_2_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.3.conv1.*    | res3_3_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.3.conv2.*    | res3_3_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.3.conv3.*    | res3_3_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res4.0.conv1.*    | res4_0_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,512,1,1)       |
| res4.0.conv2.*    | res4_0_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.0.conv3.*    | res4_0_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.0.shortcut.* | res4_0_branch1_{bn_*,w}  | (1024,) (1024,) (1024,) (1024,) (1024,512,1,1)  |
| res4.1.conv1.*    | res4_1_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.1.conv2.*    | res4_1_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.1.conv3.*    | res4_1_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.2.conv1.*    | res4_2_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.2.conv2.*    | res4_2_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.2.conv3.*    | res4_2_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.3.conv1.*    | res4_3_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.3.conv2.*    | res4_3_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.3.conv3.*    | res4_3_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.4.conv1.*    | res4_4_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.4.conv2.*    | res4_4_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.4.conv3.*    | res4_4_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.5.conv1.*    | res4_5_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.5.conv2.*    | res4_5_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.5.conv3.*    | res4_5_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res5.0.conv1.*    | res5_0_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,1024,1,1)      |
| res5.0.conv2.*    | res5_0_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.0.conv3.*    | res5_0_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| res5.0.shortcut.* | res5_0_branch1_{bn_*,w}  | (2048,) (2048,) (2048,) (2048,) (2048,1024,1,1) |
| res5.1.conv1.*    | res5_1_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,2048,1,1)      |
| res5.1.conv2.*    | res5_1_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.1.conv3.*    | res5_1_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| res5.2.conv1.*    | res5_2_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,2048,1,1)      |
| res5.2.conv2.*    | res5_2_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.2.conv3.*    | res5_2_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| stem.conv1.norm.* | res_conv1_bn_*           | (64,) (64,) (64,) (64,)                         |
| stem.conv1.weight | conv1_w                  | (64, 3, 7, 7)                                   |
[32m[11/14 04:40:19 d2.engine.train_loop]: [0mStarting training from iteration 0
[32m[11/14 04:41:58 d2.utils.events]: [0m eta: 3:48:16  iter: 19  total_loss: 3.299  loss_cls: 0.5196  loss_box_reg: 0.02739  loss_mask: 0.6726  loss_rpn_cls: 0.6624  loss_rpn_loc: 1.269  time: 4.7145  data_time: 0.0319  lr: 0.00019981  max_mem: 0M
[32m[11/14 04:43:25 d2.utils.events]: [0m eta: 3:41:17  iter: 39  total_loss: 2.408  loss_cls: 0.353  loss_box_reg: 0.0366  loss_mask: 0.5966  loss_rpn_cls: 0.6079  loss_rpn_loc: 0.8124  time: 4.5307  data_time: 0.0109  lr: 0.00039961  max_mem: 0M
[32m[11/14 04:45:04 d2.utils.events]: [0m eta: 3:44:39  iter: 59  total_loss: 2.14  loss_cls: 0.2758  loss_box_reg: 0.06761  loss_mask: 0.5832  loss_rpn_cls: 0.5732  loss_rpn_loc: 0.6399  time: 4.6710  data_time: 0.0079  lr: 0.00059941  max_mem: 0M
[32m[11/14 04:46:46 d2.utils.events]: [0m eta: 3:44:47  iter: 79  total_loss: 2.088  loss_cls: 0.2408  loss_box_reg: 0.167  loss_mask: 0.5632  loss_rpn_cls: 0.5431  loss_rpn_loc: 0.5478  time: 4.7816  data_time: 0.0042  lr: 0.00079921  max_mem: 0M
[32m[11/14 04:48:11 d2.utils.events]: [0m eta: 3:39:19  iter: 99  total_loss: 2.122  loss_cls: 0.2652  loss_box_reg: 0.3352  loss_mask: 0.54  loss_rpn_cls: 0.4601  loss_rpn_loc: 0.5138  time: 4.6727  data_time: 0.0078  lr: 0.00099901  max_mem: 0M
[32m[11/14 04:49:53 d2.utils.events]: [0m eta: 3:40:04  iter: 119  total_loss: 2.116  loss_cls: 0.2833  loss_box_reg: 0.4248  loss_mask: 0.5117  loss_rpn_cls: 0.3868  loss_rpn_loc: 0.5009  time: 4.7469  data_time: 0.0156  lr: 0.0011988  max_mem: 0M
[32m[11/14 04:51:39 d2.utils.events]: [0m eta: 3:42:49  iter: 139  total_loss: 2.029  loss_cls: 0.27  loss_box_reg: 0.4271  loss_mask: 0.4687  loss_rpn_cls: 0.3358  loss_rpn_loc: 0.4981  time: 4.8218  data_time: 0.0088  lr: 0.0013986  max_mem: 0M
[32m[11/14 04:53:18 d2.utils.events]: [0m eta: 3:41:16  iter: 159  total_loss: 2.026  loss_cls: 0.3394  loss_box_reg: 0.4839  loss_mask: 0.4366  loss_rpn_cls: 0.3428  loss_rpn_loc: 0.4938  time: 4.8415  data_time: 0.0101  lr: 0.0015984  max_mem: 0M
[32m[11/14 04:55:01 d2.utils.events]: [0m eta: 3:42:59  iter: 179  total_loss: 1.86  loss_cls: 0.2701  loss_box_reg: 0.4661  loss_mask: 0.4145  loss_rpn_cls: 0.289  loss_rpn_loc: 0.4701  time: 4.8732  data_time: 0.0042  lr: 0.0017982  max_mem: 0M
[32m[11/14 04:56:47 d2.utils.events]: [0m eta: 3:43:16  iter: 199  total_loss: 1.815  loss_cls: 0.2634  loss_box_reg: 0.4287  loss_mask: 0.3863  loss_rpn_cls: 0.2698  loss_rpn_loc: 0.4557  time: 4.9174  data_time: 0.0094  lr: 0.001998  max_mem: 0M
[32m[11/14 04:58:09 d2.utils.events]: [0m eta: 3:38:57  iter: 219  total_loss: 1.72  loss_cls: 0.242  loss_box_reg: 0.4053  loss_mask: 0.3469  loss_rpn_cls: 0.2643  loss_rpn_loc: 0.4341  time: 4.8431  data_time: 0.0030  lr: 0.0021978  max_mem: 0M
[32m[11/14 04:59:54 d2.utils.events]: [0m eta: 3:37:26  iter: 239  total_loss: 1.725  loss_cls: 0.2392  loss_box_reg: 0.4024  loss_mask: 0.3397  loss_rpn_cls: 0.2449  loss_rpn_loc: 0.4859  time: 4.8778  data_time: 0.0086  lr: 0.0023976  max_mem: 0M
[32m[11/14 05:01:49 d2.utils.events]: [0m eta: 3:37:50  iter: 259  total_loss: 1.692  loss_cls: 0.2453  loss_box_reg: 0.4473  loss_mask: 0.3233  loss_rpn_cls: 0.2331  loss_rpn_loc: 0.4519  time: 4.9419  data_time: 0.0098  lr: 0.0025974  max_mem: 0M
[32m[11/14 05:03:26 d2.utils.events]: [0m eta: 3:37:39  iter: 279  total_loss: 1.522  loss_cls: 0.1992  loss_box_reg: 0.4029  loss_mask: 0.3234  loss_rpn_cls: 0.1905  loss_rpn_loc: 0.4145  time: 4.9385  data_time: 0.0038  lr: 0.0027972  max_mem: 0M
[32m[11/14 05:05:13 d2.utils.events]: [0m eta: 3:37:10  iter: 299  total_loss: 1.673  loss_cls: 0.2366  loss_box_reg: 0.4892  loss_mask: 0.2994  loss_rpn_cls: 0.2245  loss_rpn_loc: 0.4008  time: 4.9655  data_time: 0.0041  lr: 0.002997  max_mem: 0M
[32m[11/14 05:07:02 d2.utils.events]: [0m eta: 3:36:23  iter: 319  total_loss: 1.709  loss_cls: 0.2342  loss_box_reg: 0.4658  loss_mask: 0.3201  loss_rpn_cls: 0.2235  loss_rpn_loc: 0.4063  time: 4.9931  data_time: 0.0069  lr: 0.0031968  max_mem: 0M
[32m[11/14 05:08:39 d2.utils.events]: [0m eta: 3:34:26  iter: 339  total_loss: 1.696  loss_cls: 0.2512  loss_box_reg: 0.4661  loss_mask: 0.31  loss_rpn_cls: 0.2054  loss_rpn_loc: 0.4611  time: 4.9855  data_time: 0.0047  lr: 0.0033966  max_mem: 0M
[32m[11/14 05:10:22 d2.utils.events]: [0m eta: 3:33:09  iter: 359  total_loss: 1.581  loss_cls: 0.2242  loss_box_reg: 0.4942  loss_mask: 0.2884  loss_rpn_cls: 0.1947  loss_rpn_loc: 0.3806  time: 4.9937  data_time: 0.0082  lr: 0.0035964  max_mem: 0M
[32m[11/14 05:11:34 d2.utils.events]: [0m eta: 3:28:18  iter: 379  total_loss: 1.543  loss_cls: 0.2093  loss_box_reg: 0.4049  loss_mask: 0.295  loss_rpn_cls: 0.2249  loss_rpn_loc: 0.3885  time: 4.9206  data_time: 0.0064  lr: 0.0037962  max_mem: 0M
[32m[11/14 05:12:53 d2.utils.events]: [0m eta: 3:25:22  iter: 399  total_loss: 1.515  loss_cls: 0.2063  loss_box_reg: 0.4246  loss_mask: 0.2744  loss_rpn_cls: 0.2234  loss_rpn_loc: 0.4282  time: 4.8702  data_time: 0.0064  lr: 0.003996  max_mem: 0M
[32m[11/14 05:14:24 d2.utils.events]: [0m eta: 3:23:47  iter: 419  total_loss: 1.537  loss_cls: 0.1888  loss_box_reg: 0.4327  loss_mask: 0.2663  loss_rpn_cls: 0.2287  loss_rpn_loc: 0.4275  time: 4.8564  data_time: 0.0085  lr: 0.0041958  max_mem: 0M
[32m[11/14 05:16:19 d2.utils.events]: [0m eta: 3:22:59  iter: 439  total_loss: 1.576  loss_cls: 0.2122  loss_box_reg: 0.4559  loss_mask: 0.2701  loss_rpn_cls: 0.1717  loss_rpn_loc: 0.4064  time: 4.8974  data_time: 0.0062  lr: 0.0043956  max_mem: 0M
[32m[11/14 05:17:40 d2.utils.events]: [0m eta: 3:20:38  iter: 459  total_loss: 1.458  loss_cls: 0.2153  loss_box_reg: 0.4681  loss_mask: 0.271  loss_rpn_cls: 0.1881  loss_rpn_loc: 0.3691  time: 4.8595  data_time: 0.0051  lr: 0.0045954  max_mem: 0M
[32m[11/14 05:19:17 d2.utils.events]: [0m eta: 3:19:14  iter: 479  total_loss: 1.41  loss_cls: 0.1933  loss_box_reg: 0.4316  loss_mask: 0.2586  loss_rpn_cls: 0.1621  loss_rpn_loc: 0.3775  time: 4.8585  data_time: 0.0046  lr: 0.0047952  max_mem: 0M
[32m[11/14 05:21:09 d2.utils.events]: [0m eta: 3:18:20  iter: 499  total_loss: 1.511  loss_cls: 0.1749  loss_box_reg: 0.4137  loss_mask: 0.2552  loss_rpn_cls: 0.2018  loss_rpn_loc: 0.3978  time: 4.8880  data_time: 0.0108  lr: 0.004995  max_mem: 0M
[32m[11/14 05:22:39 d2.utils.events]: [0m eta: 3:16:20  iter: 519  total_loss: 1.51  loss_cls: 0.2235  loss_box_reg: 0.453  loss_mask: 0.2581  loss_rpn_cls: 0.1837  loss_rpn_loc: 0.3937  time: 4.8738  data_time: 0.0069  lr: 0.0051948  max_mem: 0M
[32m[11/14 05:24:29 d2.utils.events]: [0m eta: 3:15:35  iter: 539  total_loss: 1.408  loss_cls: 0.219  loss_box_reg: 0.43  loss_mask: 0.25  loss_rpn_cls: 0.1416  loss_rpn_loc: 0.3722  time: 4.8967  data_time: 0.0145  lr: 0.0053946  max_mem: 0M
[32m[11/14 05:26:20 d2.utils.events]: [0m eta: 3:16:19  iter: 559  total_loss: 1.441  loss_cls: 0.2292  loss_box_reg: 0.4483  loss_mask: 0.2525  loss_rpn_cls: 0.136  loss_rpn_loc: 0.3599  time: 4.9204  data_time: 0.0091  lr: 0.0055944  max_mem: 0M
[32m[11/14 05:27:51 d2.utils.events]: [0m eta: 3:14:28  iter: 579  total_loss: 1.459  loss_cls: 0.2132  loss_box_reg: 0.4371  loss_mask: 0.2581  loss_rpn_cls: 0.183  loss_rpn_loc: 0.4093  time: 4.9071  data_time: 0.0083  lr: 0.0057942  max_mem: 0M
[32m[11/14 05:29:39 d2.utils.events]: [0m eta: 3:13:29  iter: 599  total_loss: 1.534  loss_cls: 0.2259  loss_box_reg: 0.4604  loss_mask: 0.2505  loss_rpn_cls: 0.1613  loss_rpn_loc: 0.4157  time: 4.9233  data_time: 0.0065  lr: 0.005994  max_mem: 0M
[32m[11/14 05:31:25 d2.utils.events]: [0m eta: 3:12:06  iter: 619  total_loss: 1.498  loss_cls: 0.2039  loss_box_reg: 0.4468  loss_mask: 0.2554  loss_rpn_cls: 0.1536  loss_rpn_loc: 0.3991  time: 4.9364  data_time: 0.0109  lr: 0.0061938  max_mem: 0M
[32m[11/14 05:33:08 d2.utils.events]: [0m eta: 3:11:42  iter: 639  total_loss: 1.436  loss_cls: 0.2273  loss_box_reg: 0.4307  loss_mask: 0.235  loss_rpn_cls: 0.1391  loss_rpn_loc: 0.3758  time: 4.9422  data_time: 0.0040  lr: 0.0063936  max_mem: 0M
[32m[11/14 05:34:53 d2.utils.events]: [0m eta: 3:10:09  iter: 659  total_loss: 1.49  loss_cls: 0.2199  loss_box_reg: 0.4233  loss_mask: 0.2492  loss_rpn_cls: 0.1565  loss_rpn_loc: 0.407  time: 4.9509  data_time: 0.0082  lr: 0.0065934  max_mem: 0M
[32m[11/14 05:36:36 d2.utils.events]: [0m eta: 3:08:34  iter: 679  total_loss: 1.456  loss_cls: 0.2417  loss_box_reg: 0.4396  loss_mask: 0.236  loss_rpn_cls: 0.1653  loss_rpn_loc: 0.3801  time: 4.9580  data_time: 0.0069  lr: 0.0067932  max_mem: 0M
[32m[11/14 05:38:18 d2.utils.events]: [0m eta: 3:07:08  iter: 699  total_loss: 1.433  loss_cls: 0.2029  loss_box_reg: 0.4358  loss_mask: 0.2429  loss_rpn_cls: 0.1624  loss_rpn_loc: 0.3928  time: 4.9613  data_time: 0.0050  lr: 0.006993  max_mem: 0M
[32m[11/14 05:39:56 d2.utils.events]: [0m eta: 3:05:19  iter: 719  total_loss: 1.469  loss_cls: 0.2041  loss_box_reg: 0.4347  loss_mask: 0.2372  loss_rpn_cls: 0.1714  loss_rpn_loc: 0.4186  time: 4.9593  data_time: 0.0069  lr: 0.0071928  max_mem: 0M
[32m[11/14 05:41:35 d2.utils.events]: [0m eta: 3:03:39  iter: 739  total_loss: 1.322  loss_cls: 0.1705  loss_box_reg: 0.4172  loss_mask: 0.2309  loss_rpn_cls: 0.1396  loss_rpn_loc: 0.3769  time: 4.9587  data_time: 0.0081  lr: 0.0073926  max_mem: 0M
[32m[11/14 05:42:58 d2.utils.events]: [0m eta: 3:00:56  iter: 759  total_loss: 1.289  loss_cls: 0.1732  loss_box_reg: 0.383  loss_mask: 0.2196  loss_rpn_cls: 0.1555  loss_rpn_loc: 0.362  time: 4.9376  data_time: 0.0057  lr: 0.0075924  max_mem: 0M
[32m[11/14 05:44:37 d2.utils.events]: [0m eta: 2:59:16  iter: 779  total_loss: 1.291  loss_cls: 0.1905  loss_box_reg: 0.4303  loss_mask: 0.2184  loss_rpn_cls: 0.1315  loss_rpn_loc: 0.3549  time: 4.9385  data_time: 0.0076  lr: 0.0077922  max_mem: 0M
[32m[11/14 05:46:12 d2.utils.events]: [0m eta: 2:57:34  iter: 799  total_loss: 1.376  loss_cls: 0.1858  loss_box_reg: 0.4334  loss_mask: 0.2281  loss_rpn_cls: 0.1577  loss_rpn_loc: 0.3982  time: 4.9334  data_time: 0.0128  lr: 0.007992  max_mem: 0M
[32m[11/14 05:47:50 d2.utils.events]: [0m eta: 2:56:07  iter: 819  total_loss: 1.363  loss_cls: 0.1949  loss_box_reg: 0.4268  loss_mask: 0.2227  loss_rpn_cls: 0.1528  loss_rpn_loc: 0.3868  time: 4.9331  data_time: 0.0062  lr: 0.0081918  max_mem: 0M
[32m[11/14 05:49:32 d2.utils.events]: [0m eta: 2:54:34  iter: 839  total_loss: 1.318  loss_cls: 0.1918  loss_box_reg: 0.4534  loss_mask: 0.227  loss_rpn_cls: 0.1338  loss_rpn_loc: 0.3394  time: 4.9365  data_time: 0.0080  lr: 0.0083916  max_mem: 0M
[32m[11/14 05:51:15 d2.utils.events]: [0m eta: 2:53:34  iter: 859  total_loss: 1.351  loss_cls: 0.1891  loss_box_reg: 0.4223  loss_mask: 0.2126  loss_rpn_cls: 0.1243  loss_rpn_loc: 0.3518  time: 4.9419  data_time: 0.0055  lr: 0.0085914  max_mem: 0M
[32m[11/14 05:52:36 d2.utils.events]: [0m eta: 2:51:12  iter: 879  total_loss: 1.375  loss_cls: 0.1962  loss_box_reg: 0.4361  loss_mask: 0.219  loss_rpn_cls: 0.1459  loss_rpn_loc: 0.3533  time: 4.9213  data_time: 0.0045  lr: 0.0087912  max_mem: 0M
[32m[11/14 05:54:23 d2.utils.events]: [0m eta: 2:49:43  iter: 899  total_loss: 1.334  loss_cls: 0.1739  loss_box_reg: 0.4279  loss_mask: 0.2231  loss_rpn_cls: 0.1595  loss_rpn_loc: 0.36  time: 4.9303  data_time: 0.0121  lr: 0.008991  max_mem: 0M
[32m[11/14 05:56:00 d2.utils.events]: [0m eta: 2:48:14  iter: 919  total_loss: 1.288  loss_cls: 0.1548  loss_box_reg: 0.3835  loss_mask: 0.2123  loss_rpn_cls: 0.1463  loss_rpn_loc: 0.3611  time: 4.9286  data_time: 0.0072  lr: 0.0091908  max_mem: 0M
[32m[11/14 05:57:37 d2.utils.events]: [0m eta: 2:46:29  iter: 939  total_loss: 1.349  loss_cls: 0.2124  loss_box_reg: 0.4485  loss_mask: 0.2155  loss_rpn_cls: 0.1163  loss_rpn_loc: 0.3484  time: 4.9274  data_time: 0.0072  lr: 0.0093906  max_mem: 0M
[32m[11/14 05:59:29 d2.utils.events]: [0m eta: 2:45:46  iter: 959  total_loss: 1.301  loss_cls: 0.2134  loss_box_reg: 0.409  loss_mask: 0.2221  loss_rpn_cls: 0.1073  loss_rpn_loc: 0.3566  time: 4.9404  data_time: 0.0054  lr: 0.0095904  max_mem: 0M
[32m[11/14 06:00:57 d2.utils.events]: [0m eta: 2:43:32  iter: 979  total_loss: 1.411  loss_cls: 0.1787  loss_box_reg: 0.393  loss_mask: 0.2423  loss_rpn_cls: 0.123  loss_rpn_loc: 0.432  time: 4.9294  data_time: 0.0130  lr: 0.0097902  max_mem: 0M
[32m[11/14 06:02:31 d2.utils.events]: [0m eta: 2:41:55  iter: 999  total_loss: 1.35  loss_cls: 0.1701  loss_box_reg: 0.3922  loss_mask: 0.2241  loss_rpn_cls: 0.1467  loss_rpn_loc: 0.4123  time: 4.9251  data_time: 0.0067  lr: 0.00999  max_mem: 0M
[32m[11/14 06:04:15 d2.utils.events]: [0m eta: 2:40:57  iter: 1019  total_loss: 1.343  loss_cls: 0.2016  loss_box_reg: 0.4031  loss_mask: 0.2121  loss_rpn_cls: 0.1327  loss_rpn_loc: 0.3648  time: 4.9301  data_time: 0.0123  lr: 0.01  max_mem: 0M
[32m[11/14 06:05:56 d2.utils.events]: [0m eta: 2:39:37  iter: 1039  total_loss: 1.312  loss_cls: 0.1815  loss_box_reg: 0.4231  loss_mask: 0.2121  loss_rpn_cls: 0.1337  loss_rpn_loc: 0.3659  time: 4.9327  data_time: 0.0076  lr: 0.01  max_mem: 0M
[32m[11/14 06:07:25 d2.utils.events]: [0m eta: 2:37:45  iter: 1059  total_loss: 1.253  loss_cls: 0.1649  loss_box_reg: 0.4072  loss_mask: 0.2084  loss_rpn_cls: 0.1293  loss_rpn_loc: 0.3428  time: 4.9237  data_time: 0.0062  lr: 0.01  max_mem: 0M
[32m[11/14 06:09:08 d2.utils.events]: [0m eta: 2:36:22  iter: 1079  total_loss: 1.193  loss_cls: 0.1603  loss_box_reg: 0.3709  loss_mask: 0.1944  loss_rpn_cls: 0.1126  loss_rpn_loc: 0.3402  time: 4.9281  data_time: 0.0053  lr: 0.01  max_mem: 0M
[32m[11/14 06:11:01 d2.utils.events]: [0m eta: 2:35:41  iter: 1099  total_loss: 1.205  loss_cls: 0.1542  loss_box_reg: 0.3962  loss_mask: 0.2061  loss_rpn_cls: 0.1001  loss_rpn_loc: 0.3241  time: 4.9405  data_time: 0.0058  lr: 0.01  max_mem: 0M
[32m[11/14 06:12:28 d2.utils.events]: [0m eta: 2:33:56  iter: 1119  total_loss: 1.26  loss_cls: 0.1922  loss_box_reg: 0.4113  loss_mask: 0.2194  loss_rpn_cls: 0.1304  loss_rpn_loc: 0.3384  time: 4.9303  data_time: 0.0037  lr: 0.01  max_mem: 0M
[32m[11/14 06:13:57 d2.utils.events]: [0m eta: 2:31:39  iter: 1139  total_loss: 1.257  loss_cls: 0.1841  loss_box_reg: 0.4068  loss_mask: 0.2124  loss_rpn_cls: 0.1083  loss_rpn_loc: 0.343  time: 4.9216  data_time: 0.0049  lr: 0.01  max_mem: 0M
[32m[11/14 06:15:32 d2.utils.events]: [0m eta: 2:29:49  iter: 1159  total_loss: 1.27  loss_cls: 0.1713  loss_box_reg: 0.3895  loss_mask: 0.2215  loss_rpn_cls: 0.1012  loss_rpn_loc: 0.3474  time: 4.9187  data_time: 0.0056  lr: 0.01  max_mem: 0M
[32m[11/14 06:17:14 d2.utils.events]: [0m eta: 2:27:57  iter: 1179  total_loss: 1.211  loss_cls: 0.1597  loss_box_reg: 0.3882  loss_mask: 0.1956  loss_rpn_cls: 0.1133  loss_rpn_loc: 0.3502  time: 4.9222  data_time: 0.0051  lr: 0.01  max_mem: 0M
[32m[11/14 06:18:55 d2.utils.events]: [0m eta: 2:26:22  iter: 1199  total_loss: 1.18  loss_cls: 0.1532  loss_box_reg: 0.3596  loss_mask: 0.1874  loss_rpn_cls: 0.1296  loss_rpn_loc: 0.3784  time: 4.9240  data_time: 0.0103  lr: 0.01  max_mem: 0M
[32m[11/14 06:20:39 d2.utils.events]: [0m eta: 2:25:35  iter: 1219  total_loss: 1.189  loss_cls: 0.1679  loss_box_reg: 0.3785  loss_mask: 0.1972  loss_rpn_cls: 0.0865  loss_rpn_loc: 0.3414  time: 4.9285  data_time: 0.0072  lr: 0.01  max_mem: 0M
[32m[11/14 06:22:17 d2.utils.events]: [0m eta: 2:23:46  iter: 1239  total_loss: 1.223  loss_cls: 0.1674  loss_box_reg: 0.4115  loss_mask: 0.1989  loss_rpn_cls: 0.1096  loss_rpn_loc: 0.3536  time: 4.9280  data_time: 0.0105  lr: 0.01  max_mem: 0M
[32m[11/14 06:23:48 d2.utils.events]: [0m eta: 2:21:29  iter: 1259  total_loss: 1.196  loss_cls: 0.1624  loss_box_reg: 0.3775  loss_mask: 0.2031  loss_rpn_cls: 0.1052  loss_rpn_loc: 0.3333  time: 4.9220  data_time: 0.0063  lr: 0.01  max_mem: 0M
[32m[11/14 06:25:32 d2.utils.events]: [0m eta: 2:19:51  iter: 1279  total_loss: 1.246  loss_cls: 0.17  loss_box_reg: 0.3728  loss_mask: 0.197  loss_rpn_cls: 0.1316  loss_rpn_loc: 0.3637  time: 4.9262  data_time: 0.0089  lr: 0.01  max_mem: 0M
[32m[11/14 06:27:12 d2.utils.events]: [0m eta: 2:18:14  iter: 1299  total_loss: 1.178  loss_cls: 0.1841  loss_box_reg: 0.3789  loss_mask: 0.1924  loss_rpn_cls: 0.126  loss_rpn_loc: 0.342  time: 4.9272  data_time: 0.0067  lr: 0.01  max_mem: 0M
[32m[11/14 06:28:53 d2.utils.events]: [0m eta: 2:16:34  iter: 1319  total_loss: 1.21  loss_cls: 0.1753  loss_box_reg: 0.3916  loss_mask: 0.1993  loss_rpn_cls: 0.1049  loss_rpn_loc: 0.3454  time: 4.9292  data_time: 0.0075  lr: 0.01  max_mem: 0M
[32m[11/14 06:30:36 d2.utils.events]: [0m eta: 2:15:17  iter: 1339  total_loss: 1.176  loss_cls: 0.1666  loss_box_reg: 0.3884  loss_mask: 0.1948  loss_rpn_cls: 0.1138  loss_rpn_loc: 0.3291  time: 4.9322  data_time: 0.0095  lr: 0.01  max_mem: 0M
[32m[11/14 06:32:10 d2.utils.events]: [0m eta: 2:13:34  iter: 1359  total_loss: 1.147  loss_cls: 0.1636  loss_box_reg: 0.3674  loss_mask: 0.1774  loss_rpn_cls: 0.1277  loss_rpn_loc: 0.2929  time: 4.9294  data_time: 0.0116  lr: 0.01  max_mem: 0M
[32m[11/14 06:33:37 d2.utils.events]: [0m eta: 2:12:28  iter: 1379  total_loss: 1.202  loss_cls: 0.1702  loss_box_reg: 0.3864  loss_mask: 0.1898  loss_rpn_cls: 0.1205  loss_rpn_loc: 0.314  time: 4.9207  data_time: 0.0109  lr: 0.01  max_mem: 0M
[32m[11/14 06:35:24 d2.utils.events]: [0m eta: 2:11:39  iter: 1399  total_loss: 1.129  loss_cls: 0.1661  loss_box_reg: 0.3672  loss_mask: 0.1927  loss_rpn_cls: 0.09735  loss_rpn_loc: 0.3207  time: 4.9266  data_time: 0.0101  lr: 0.01  max_mem: 0M
[32m[11/14 06:37:11 d2.utils.events]: [0m eta: 2:10:11  iter: 1419  total_loss: 1.204  loss_cls: 0.1691  loss_box_reg: 0.3542  loss_mask: 0.187  loss_rpn_cls: 0.1085  loss_rpn_loc: 0.3325  time: 4.9324  data_time: 0.0051  lr: 0.01  max_mem: 0M
[32m[11/14 06:38:50 d2.utils.events]: [0m eta: 2:08:11  iter: 1439  total_loss: 1.146  loss_cls: 0.1563  loss_box_reg: 0.3679  loss_mask: 0.1884  loss_rpn_cls: 0.1293  loss_rpn_loc: 0.2904  time: 4.9327  data_time: 0.0079  lr: 0.01  max_mem: 0M
[32m[11/14 06:40:37 d2.utils.events]: [0m eta: 2:06:53  iter: 1459  total_loss: 1.147  loss_cls: 0.1658  loss_box_reg: 0.3815  loss_mask: 0.1946  loss_rpn_cls: 0.1156  loss_rpn_loc: 0.2911  time: 4.9388  data_time: 0.0088  lr: 0.01  max_mem: 0M
[32m[11/14 06:42:11 d2.utils.events]: [0m eta: 2:05:11  iter: 1479  total_loss: 1.194  loss_cls: 0.1729  loss_box_reg: 0.3931  loss_mask: 0.193  loss_rpn_cls: 0.119  loss_rpn_loc: 0.3142  time: 4.9353  data_time: 0.0108  lr: 0.01  max_mem: 0M
[32m[11/14 06:43:42 d2.utils.events]: [0m eta: 2:03:06  iter: 1499  total_loss: 1.117  loss_cls: 0.1618  loss_box_reg: 0.392  loss_mask: 0.1863  loss_rpn_cls: 0.1043  loss_rpn_loc: 0.2916  time: 4.9303  data_time: 0.0068  lr: 0.01  max_mem: 0M
[32m[11/14 06:45:36 d2.utils.events]: [0m eta: 2:01:56  iter: 1519  total_loss: 1.105  loss_cls: 0.1429  loss_box_reg: 0.3718  loss_mask: 0.1849  loss_rpn_cls: 0.1225  loss_rpn_loc: 0.2864  time: 4.9401  data_time: 0.0048  lr: 0.01  max_mem: 0M
[32m[11/14 06:47:12 d2.utils.events]: [0m eta: 2:00:09  iter: 1539  total_loss: 1.117  loss_cls: 0.1507  loss_box_reg: 0.3637  loss_mask: 0.1789  loss_rpn_cls: 0.09451  loss_rpn_loc: 0.2964  time: 4.9384  data_time: 0.0048  lr: 0.01  max_mem: 0M
[32m[11/14 06:48:28 d2.utils.events]: [0m eta: 1:57:39  iter: 1559  total_loss: 1.091  loss_cls: 0.156  loss_box_reg: 0.3693  loss_mask: 0.1873  loss_rpn_cls: 0.09656  loss_rpn_loc: 0.2824  time: 4.9236  data_time: 0.0044  lr: 0.01  max_mem: 0M
[32m[11/14 06:49:57 d2.utils.events]: [0m eta: 1:55:59  iter: 1579  total_loss: 1.055  loss_cls: 0.1468  loss_box_reg: 0.3745  loss_mask: 0.1892  loss_rpn_cls: 0.08295  loss_rpn_loc: 0.2822  time: 4.9178  data_time: 0.0031  lr: 0.01  max_mem: 0M
[32m[11/14 06:51:47 d2.utils.events]: [0m eta: 1:54:36  iter: 1599  total_loss: 1.252  loss_cls: 0.1484  loss_box_reg: 0.3478  loss_mask: 0.1845  loss_rpn_cls: 0.224  loss_rpn_loc: 0.3209  time: 4.9252  data_time: 0.0050  lr: 0.01  max_mem: 0M
[32m[11/14 06:53:07 d2.utils.events]: [0m eta: 1:52:28  iter: 1619  total_loss: 1.105  loss_cls: 0.1374  loss_box_reg: 0.3409  loss_mask: 0.1765  loss_rpn_cls: 0.1108  loss_rpn_loc: 0.318  time: 4.9134  data_time: 0.0043  lr: 0.01  max_mem: 0M
[32m[11/14 06:54:45 d2.utils.events]: [0m eta: 1:50:26  iter: 1639  total_loss: 1.076  loss_cls: 0.1365  loss_box_reg: 0.3358  loss_mask: 0.1781  loss_rpn_cls: 0.08864  loss_rpn_loc: 0.3192  time: 4.9137  data_time: 0.0040  lr: 0.01  max_mem: 0M
[32m[11/14 06:56:38 d2.utils.events]: [0m eta: 1:49:07  iter: 1659  total_loss: 1.085  loss_cls: 0.1649  loss_box_reg: 0.353  loss_mask: 0.1832  loss_rpn_cls: 0.09546  loss_rpn_loc: 0.2807  time: 4.9221  data_time: 0.0037  lr: 0.01  max_mem: 0M
[32m[11/14 06:58:10 d2.utils.events]: [0m eta: 1:47:11  iter: 1679  total_loss: 1.115  loss_cls: 0.1658  loss_box_reg: 0.362  loss_mask: 0.1805  loss_rpn_cls: 0.1034  loss_rpn_loc: 0.283  time: 4.9182  data_time: 0.0050  lr: 0.01  max_mem: 0M
[32m[11/14 07:00:01 d2.utils.events]: [0m eta: 1:45:51  iter: 1699  total_loss: 1.143  loss_cls: 0.1711  loss_box_reg: 0.3566  loss_mask: 0.1823  loss_rpn_cls: 0.102  loss_rpn_loc: 0.3159  time: 4.9260  data_time: 0.0089  lr: 0.01  max_mem: 0M
[32m[11/14 07:01:54 d2.utils.events]: [0m eta: 1:44:35  iter: 1719  total_loss: 1.166  loss_cls: 0.1572  loss_box_reg: 0.3421  loss_mask: 0.1798  loss_rpn_cls: 0.09428  loss_rpn_loc: 0.3469  time: 4.9345  data_time: 0.0076  lr: 0.01  max_mem: 0M
[32m[11/14 07:03:42 d2.utils.events]: [0m eta: 1:43:19  iter: 1739  total_loss: 1.056  loss_cls: 0.1552  loss_box_reg: 0.334  loss_mask: 0.1651  loss_rpn_cls: 0.1013  loss_rpn_loc: 0.3067  time: 4.9398  data_time: 0.0048  lr: 0.01  max_mem: 0M
[32m[11/14 07:05:31 d2.utils.events]: [0m eta: 1:42:18  iter: 1759  total_loss: 1.039  loss_cls: 0.1564  loss_box_reg: 0.3679  loss_mask: 0.1746  loss_rpn_cls: 0.09568  loss_rpn_loc: 0.2686  time: 4.9451  data_time: 0.0141  lr: 0.01  max_mem: 0M
[32m[11/14 07:07:07 d2.utils.events]: [0m eta: 1:40:35  iter: 1779  total_loss: 1.028  loss_cls: 0.1438  loss_box_reg: 0.3487  loss_mask: 0.1641  loss_rpn_cls: 0.08032  loss_rpn_loc: 0.2856  time: 4.9437  data_time: 0.0070  lr: 0.01  max_mem: 0M
[32m[11/14 07:08:51 d2.utils.events]: [0m eta: 1:39:04  iter: 1799  total_loss: 1.055  loss_cls: 0.1536  loss_box_reg: 0.3402  loss_mask: 0.1687  loss_rpn_cls: 0.07519  loss_rpn_loc: 0.3032  time: 4.9466  data_time: 0.0062  lr: 0.01  max_mem: 0M
[32m[11/14 07:10:27 d2.utils.events]: [0m eta: 1:37:14  iter: 1819  total_loss: 1.05  loss_cls: 0.1518  loss_box_reg: 0.358  loss_mask: 0.1829  loss_rpn_cls: 0.08314  loss_rpn_loc: 0.2743  time: 4.9447  data_time: 0.0120  lr: 0.01  max_mem: 0M
[32m[11/14 07:12:05 d2.utils.events]: [0m eta: 1:35:33  iter: 1839  total_loss: 1.065  loss_cls: 0.1642  loss_box_reg: 0.354  loss_mask: 0.1706  loss_rpn_cls: 0.08341  loss_rpn_loc: 0.2947  time: 4.9444  data_time: 0.0090  lr: 0.01  max_mem: 0M
[32m[11/14 07:13:30 d2.utils.events]: [0m eta: 1:33:31  iter: 1859  total_loss: 0.9846  loss_cls: 0.1402  loss_box_reg: 0.3183  loss_mask: 0.1651  loss_rpn_cls: 0.07635  loss_rpn_loc: 0.2906  time: 4.9369  data_time: 0.0048  lr: 0.01  max_mem: 0M
[32m[11/14 07:15:02 d2.utils.events]: [0m eta: 1:32:00  iter: 1879  total_loss: 1.007  loss_cls: 0.1371  loss_box_reg: 0.3232  loss_mask: 0.1693  loss_rpn_cls: 0.08483  loss_rpn_loc: 0.2719  time: 4.9332  data_time: 0.0081  lr: 0.01  max_mem: 0M
[32m[11/14 07:16:40 d2.utils.events]: [0m eta: 1:30:03  iter: 1899  total_loss: 0.993  loss_cls: 0.1268  loss_box_reg: 0.3259  loss_mask: 0.1586  loss_rpn_cls: 0.1038  loss_rpn_loc: 0.2652  time: 4.9330  data_time: 0.0137  lr: 0.01  max_mem: 0M
[32m[11/14 07:18:13 d2.utils.events]: [0m eta: 1:28:07  iter: 1919  total_loss: 0.9749  loss_cls: 0.1334  loss_box_reg: 0.3247  loss_mask: 0.1642  loss_rpn_cls: 0.07814  loss_rpn_loc: 0.2766  time: 4.9301  data_time: 0.0064  lr: 0.01  max_mem: 0M
[32m[11/14 07:19:52 d2.utils.events]: [0m eta: 1:26:33  iter: 1939  total_loss: 0.9364  loss_cls: 0.1464  loss_box_reg: 0.3118  loss_mask: 0.1606  loss_rpn_cls: 0.08661  loss_rpn_loc: 0.2529  time: 4.9304  data_time: 0.0078  lr: 0.01  max_mem: 0M
[32m[11/14 07:21:25 d2.utils.events]: [0m eta: 1:24:27  iter: 1959  total_loss: 0.9182  loss_cls: 0.1268  loss_box_reg: 0.3214  loss_mask: 0.1548  loss_rpn_cls: 0.07353  loss_rpn_loc: 0.2613  time: 4.9273  data_time: 0.0090  lr: 0.01  max_mem: 0M
[32m[11/14 07:22:50 d2.utils.events]: [0m eta: 1:22:43  iter: 1979  total_loss: 1.048  loss_cls: 0.1497  loss_box_reg: 0.3233  loss_mask: 0.165  loss_rpn_cls: 0.06564  loss_rpn_loc: 0.2754  time: 4.9203  data_time: 0.0054  lr: 0.01  max_mem: 0M
[32m[11/14 07:24:34 d2.utils.events]: [0m eta: 1:21:13  iter: 1999  total_loss: 1.035  loss_cls: 0.1494  loss_box_reg: 0.3416  loss_mask: 0.1633  loss_rpn_cls: 0.107  loss_rpn_loc: 0.2706  time: 4.9232  data_time: 0.0075  lr: 0.01  max_mem: 0M
[32m[11/14 07:26:05 d2.utils.events]: [0m eta: 1:19:26  iter: 2019  total_loss: 1.068  loss_cls: 0.1438  loss_box_reg: 0.3473  loss_mask: 0.1764  loss_rpn_cls: 0.08277  loss_rpn_loc: 0.2871  time: 4.9196  data_time: 0.0123  lr: 0.01  max_mem: 0M
[32m[11/14 07:27:42 d2.utils.events]: [0m eta: 1:17:42  iter: 2039  total_loss: 1.109  loss_cls: 0.1553  loss_box_reg: 0.3459  loss_mask: 0.1685  loss_rpn_cls: 0.1022  loss_rpn_loc: 0.2757  time: 4.9186  data_time: 0.0058  lr: 0.01  max_mem: 0M
[32m[11/14 07:29:05 d2.utils.events]: [0m eta: 1:15:57  iter: 2059  total_loss: 0.9545  loss_cls: 0.1274  loss_box_reg: 0.3232  loss_mask: 0.1646  loss_rpn_cls: 0.07546  loss_rpn_loc: 0.2714  time: 4.9111  data_time: 0.0077  lr: 0.01  max_mem: 0M
[32m[11/14 07:30:38 d2.utils.events]: [0m eta: 1:14:02  iter: 2079  total_loss: 0.9635  loss_cls: 0.1344  loss_box_reg: 0.2996  loss_mask: 0.1533  loss_rpn_cls: 0.08085  loss_rpn_loc: 0.2817  time: 4.9086  data_time: 0.0074  lr: 0.01  max_mem: 0M
[32m[11/14 07:32:13 d2.utils.events]: [0m eta: 1:12:05  iter: 2099  total_loss: 0.9603  loss_cls: 0.1469  loss_box_reg: 0.3224  loss_mask: 0.1558  loss_rpn_cls: 0.06789  loss_rpn_loc: 0.2726  time: 4.9073  data_time: 0.0037  lr: 0.01  max_mem: 0M
[32m[11/14 07:33:39 d2.utils.events]: [0m eta: 1:10:25  iter: 2119  total_loss: 0.9453  loss_cls: 0.1344  loss_box_reg: 0.3186  loss_mask: 0.1597  loss_rpn_cls: 0.07472  loss_rpn_loc: 0.2696  time: 4.9014  data_time: 0.0104  lr: 0.01  max_mem: 0M
[32m[11/14 07:34:49 d2.utils.events]: [0m eta: 1:08:30  iter: 2139  total_loss: 0.9228  loss_cls: 0.136  loss_box_reg: 0.3224  loss_mask: 0.1622  loss_rpn_cls: 0.0568  loss_rpn_loc: 0.2384  time: 4.8884  data_time: 0.0095  lr: 0.01  max_mem: 0M
[32m[11/14 07:35:58 d2.utils.events]: [0m eta: 1:06:45  iter: 2159  total_loss: 0.9523  loss_cls: 0.1264  loss_box_reg: 0.3303  loss_mask: 0.1644  loss_rpn_cls: 0.06324  loss_rpn_loc: 0.2489  time: 4.8751  data_time: 0.0099  lr: 0.01  max_mem: 0M
[32m[11/14 07:37:07 d2.utils.events]: [0m eta: 1:04:48  iter: 2179  total_loss: 0.8748  loss_cls: 0.1324  loss_box_reg: 0.3003  loss_mask: 0.1524  loss_rpn_cls: 0.05769  loss_rpn_loc: 0.2347  time: 4.8620  data_time: 0.0068  lr: 0.01  max_mem: 0M
[32m[11/14 07:38:12 d2.utils.events]: [0m eta: 1:02:48  iter: 2199  total_loss: 0.9856  loss_cls: 0.1298  loss_box_reg: 0.3237  loss_mask: 0.1626  loss_rpn_cls: 0.08464  loss_rpn_loc: 0.2852  time: 4.8472  data_time: 0.0047  lr: 0.01  max_mem: 0M
[32m[11/14 07:39:20 d2.utils.events]: [0m eta: 1:00:30  iter: 2219  total_loss: 0.9171  loss_cls: 0.123  loss_box_reg: 0.3088  loss_mask: 0.1548  loss_rpn_cls: 0.07523  loss_rpn_loc: 0.254  time: 4.8341  data_time: 0.0042  lr: 0.01  max_mem: 0M
[32m[11/14 07:40:27 d2.utils.events]: [0m eta: 0:58:35  iter: 2239  total_loss: 0.9644  loss_cls: 0.121  loss_box_reg: 0.3048  loss_mask: 0.1602  loss_rpn_cls: 0.06726  loss_rpn_loc: 0.2736  time: 4.8207  data_time: 0.0043  lr: 0.01  max_mem: 0M
[32m[11/14 07:41:32 d2.utils.events]: [0m eta: 0:56:29  iter: 2259  total_loss: 0.886  loss_cls: 0.1066  loss_box_reg: 0.2824  loss_mask: 0.1498  loss_rpn_cls: 0.08085  loss_rpn_loc: 0.2573  time: 4.8070  data_time: 0.0031  lr: 0.01  max_mem: 0M
[32m[11/14 07:42:41 d2.utils.events]: [0m eta: 0:54:29  iter: 2279  total_loss: 0.9907  loss_cls: 0.1247  loss_box_reg: 0.3383  loss_mask: 0.1569  loss_rpn_cls: 0.07925  loss_rpn_loc: 0.2783  time: 4.7950  data_time: 0.0048  lr: 0.01  max_mem: 0M
[32m[11/14 07:43:47 d2.utils.events]: [0m eta: 0:52:19  iter: 2299  total_loss: 0.9486  loss_cls: 0.1453  loss_box_reg: 0.3248  loss_mask: 0.1592  loss_rpn_cls: 0.06606  loss_rpn_loc: 0.2607  time: 4.7819  data_time: 0.0035  lr: 0.01  max_mem: 0M
[32m[11/14 07:44:54 d2.utils.events]: [0m eta: 0:50:20  iter: 2319  total_loss: 0.95  loss_cls: 0.1265  loss_box_reg: 0.305  loss_mask: 0.1532  loss_rpn_cls: 0.09592  loss_rpn_loc: 0.2489  time: 4.7693  data_time: 0.0046  lr: 0.01  max_mem: 0M
[32m[11/14 07:46:01 d2.utils.events]: [0m eta: 0:48:24  iter: 2339  total_loss: 0.9966  loss_cls: 0.1284  loss_box_reg: 0.3109  loss_mask: 0.1586  loss_rpn_cls: 0.08961  loss_rpn_loc: 0.2666  time: 4.7572  data_time: 0.0053  lr: 0.01  max_mem: 0M
[32m[11/14 07:47:12 d2.utils.events]: [0m eta: 0:46:24  iter: 2359  total_loss: 0.9799  loss_cls: 0.1198  loss_box_reg: 0.325  loss_mask: 0.1619  loss_rpn_cls: 0.0821  loss_rpn_loc: 0.277  time: 4.7472  data_time: 0.0037  lr: 0.01  max_mem: 0M
[32m[11/14 07:48:22 d2.utils.events]: [0m eta: 0:44:40  iter: 2379  total_loss: 0.9466  loss_cls: 0.1236  loss_box_reg: 0.2919  loss_mask: 0.1551  loss_rpn_cls: 0.09102  loss_rpn_loc: 0.2815  time: 4.7364  data_time: 0.0045  lr: 0.01  max_mem: 0M
[32m[11/14 07:49:29 d2.utils.events]: [0m eta: 0:42:37  iter: 2399  total_loss: 0.9472  loss_cls: 0.1163  loss_box_reg: 0.3206  loss_mask: 0.1604  loss_rpn_cls: 0.09  loss_rpn_loc: 0.2768  time: 4.7249  data_time: 0.0058  lr: 0.01  max_mem: 0M
[32m[11/14 07:50:35 d2.utils.events]: [0m eta: 0:40:28  iter: 2419  total_loss: 0.893  loss_cls: 0.1211  loss_box_reg: 0.2884  loss_mask: 0.1578  loss_rpn_cls: 0.0871  loss_rpn_loc: 0.2487  time: 4.7130  data_time: 0.0044  lr: 0.01  max_mem: 0M
[32m[11/14 07:51:41 d2.utils.events]: [0m eta: 0:38:35  iter: 2439  total_loss: 0.924  loss_cls: 0.1152  loss_box_reg: 0.2942  loss_mask: 0.1507  loss_rpn_cls: 0.07333  loss_rpn_loc: 0.2484  time: 4.7013  data_time: 0.0041  lr: 0.01  max_mem: 0M
[32m[11/14 07:52:48 d2.utils.events]: [0m eta: 0:36:50  iter: 2459  total_loss: 0.8866  loss_cls: 0.1095  loss_box_reg: 0.2899  loss_mask: 0.1546  loss_rpn_cls: 0.08192  loss_rpn_loc: 0.2591  time: 4.6903  data_time: 0.0036  lr: 0.01  max_mem: 0M
[32m[11/14 07:53:57 d2.utils.events]: [0m eta: 0:35:01  iter: 2479  total_loss: 0.9261  loss_cls: 0.1217  loss_box_reg: 0.3002  loss_mask: 0.1555  loss_rpn_cls: 0.07819  loss_rpn_loc: 0.232  time: 4.6805  data_time: 0.0046  lr: 0.01  max_mem: 0M
[32m[11/14 07:55:06 d2.utils.events]: [0m eta: 0:33:22  iter: 2499  total_loss: 0.8787  loss_cls: 0.1104  loss_box_reg: 0.2885  loss_mask: 0.1473  loss_rpn_cls: 0.06319  loss_rpn_loc: 0.2535  time: 4.6706  data_time: 0.0051  lr: 0.01  max_mem: 0M
[32m[11/14 07:56:13 d2.utils.events]: [0m eta: 0:31:32  iter: 2519  total_loss: 0.9071  loss_cls: 0.1054  loss_box_reg: 0.295  loss_mask: 0.1565  loss_rpn_cls: 0.05605  loss_rpn_loc: 0.2585  time: 4.6598  data_time: 0.0031  lr: 0.01  max_mem: 0M
[32m[11/14 07:57:21 d2.utils.events]: [0m eta: 0:29:58  iter: 2539  total_loss: 0.9079  loss_cls: 0.119  loss_box_reg: 0.3098  loss_mask: 0.1528  loss_rpn_cls: 0.07004  loss_rpn_loc: 0.2654  time: 4.6501  data_time: 0.0044  lr: 0.01  max_mem: 0M
[32m[11/14 07:58:31 d2.utils.events]: [0m eta: 0:28:38  iter: 2559  total_loss: 0.9216  loss_cls: 0.1226  loss_box_reg: 0.3007  loss_mask: 0.1616  loss_rpn_cls: 0.07681  loss_rpn_loc: 0.2428  time: 4.6409  data_time: 0.0065  lr: 0.01  max_mem: 0M
[32m[11/14 07:59:37 d2.utils.events]: [0m eta: 0:27:09  iter: 2579  total_loss: 0.9015  loss_cls: 0.1057  loss_box_reg: 0.2787  loss_mask: 0.1503  loss_rpn_cls: 0.06936  loss_rpn_loc: 0.2618  time: 4.6305  data_time: 0.0049  lr: 0.01  max_mem: 0M
[32m[11/14 08:00:43 d2.utils.events]: [0m eta: 0:25:41  iter: 2599  total_loss: 0.8414  loss_cls: 0.1156  loss_box_reg: 0.2914  loss_mask: 0.1473  loss_rpn_cls: 0.06116  loss_rpn_loc: 0.2389  time: 4.6205  data_time: 0.0040  lr: 0.01  max_mem: 0M
[32m[11/14 08:01:52 d2.utils.events]: [0m eta: 0:24:18  iter: 2619  total_loss: 0.8607  loss_cls: 0.126  loss_box_reg: 0.2885  loss_mask: 0.1424  loss_rpn_cls: 0.06164  loss_rpn_loc: 0.2443  time: 4.6112  data_time: 0.0044  lr: 0.01  max_mem: 0M
[32m[11/14 08:03:03 d2.utils.events]: [0m eta: 0:22:58  iter: 2639  total_loss: 0.8926  loss_cls: 0.112  loss_box_reg: 0.2814  loss_mask: 0.1447  loss_rpn_cls: 0.07488  loss_rpn_loc: 0.2597  time: 4.6033  data_time: 0.0051  lr: 0.01  max_mem: 0M
[32m[11/14 08:04:12 d2.utils.events]: [0m eta: 0:21:37  iter: 2659  total_loss: 0.8763  loss_cls: 0.1295  loss_box_reg: 0.2973  loss_mask: 0.1541  loss_rpn_cls: 0.06455  loss_rpn_loc: 0.2352  time: 4.5947  data_time: 0.0033  lr: 0.01  max_mem: 0M
[32m[11/14 08:05:19 d2.utils.events]: [0m eta: 0:20:17  iter: 2679  total_loss: 0.8617  loss_cls: 0.1228  loss_box_reg: 0.2697  loss_mask: 0.1519  loss_rpn_cls: 0.0557  loss_rpn_loc: 0.2405  time: 4.5854  data_time: 0.0067  lr: 0.01  max_mem: 0M
[32m[11/14 08:06:25 d2.utils.events]: [0m eta: 0:18:55  iter: 2699  total_loss: 0.8891  loss_cls: 0.1168  loss_box_reg: 0.2785  loss_mask: 0.1429  loss_rpn_cls: 0.06215  loss_rpn_loc: 0.2294  time: 4.5756  data_time: 0.0047  lr: 0.01  max_mem: 0M
[32m[11/14 08:07:35 d2.utils.events]: [0m eta: 0:17:34  iter: 2719  total_loss: 0.813  loss_cls: 0.1079  loss_box_reg: 0.277  loss_mask: 0.1468  loss_rpn_cls: 0.05664  loss_rpn_loc: 0.2326  time: 4.5677  data_time: 0.0052  lr: 0.01  max_mem: 0M
[32m[11/14 08:08:43 d2.utils.events]: [0m eta: 0:16:15  iter: 2739  total_loss: 0.8649  loss_cls: 0.09289  loss_box_reg: 0.2778  loss_mask: 0.1443  loss_rpn_cls: 0.05652  loss_rpn_loc: 0.2398  time: 4.5595  data_time: 0.0065  lr: 0.01  max_mem: 0M
[32m[11/14 08:09:48 d2.utils.events]: [0m eta: 0:14:51  iter: 2759  total_loss: 0.8266  loss_cls: 0.1127  loss_box_reg: 0.2874  loss_mask: 0.1437  loss_rpn_cls: 0.0516  loss_rpn_loc: 0.2382  time: 4.5498  data_time: 0.0061  lr: 0.01  max_mem: 0M
[32m[11/14 08:10:57 d2.utils.events]: [0m eta: 0:13:32  iter: 2779  total_loss: 0.8597  loss_cls: 0.1221  loss_box_reg: 0.2913  loss_mask: 0.1456  loss_rpn_cls: 0.0638  loss_rpn_loc: 0.2532  time: 4.5417  data_time: 0.0054  lr: 0.01  max_mem: 0M
[32m[11/14 08:12:06 d2.utils.events]: [0m eta: 0:12:13  iter: 2799  total_loss: 0.8753  loss_cls: 0.1087  loss_box_reg: 0.292  loss_mask: 0.1565  loss_rpn_cls: 0.05588  loss_rpn_loc: 0.257  time: 4.5340  data_time: 0.0053  lr: 0.01  max_mem: 0M
[32m[11/14 08:13:15 d2.utils.events]: [0m eta: 0:10:57  iter: 2819  total_loss: 0.8627  loss_cls: 0.1186  loss_box_reg: 0.2856  loss_mask: 0.1508  loss_rpn_cls: 0.05144  loss_rpn_loc: 0.2251  time: 4.5264  data_time: 0.0079  lr: 0.01  max_mem: 0M
[32m[11/14 08:14:23 d2.utils.events]: [0m eta: 0:09:38  iter: 2839  total_loss: 0.8606  loss_cls: 0.1147  loss_box_reg: 0.2751  loss_mask: 0.1411  loss_rpn_cls: 0.08199  loss_rpn_loc: 0.2268  time: 4.5185  data_time: 0.0052  lr: 0.01  max_mem: 0M
[32m[11/14 08:15:32 d2.utils.events]: [0m eta: 0:08:17  iter: 2859  total_loss: 0.8268  loss_cls: 0.1167  loss_box_reg: 0.2754  loss_mask: 0.1395  loss_rpn_cls: 0.06654  loss_rpn_loc: 0.2296  time: 4.5109  data_time: 0.0033  lr: 0.01  max_mem: 0M
[32m[11/14 08:16:42 d2.utils.events]: [0m eta: 0:06:58  iter: 2879  total_loss: 0.8601  loss_cls: 0.1088  loss_box_reg: 0.2926  loss_mask: 0.1444  loss_rpn_cls: 0.05934  loss_rpn_loc: 0.262  time: 4.5038  data_time: 0.0027  lr: 0.01  max_mem: 0M
[32m[11/14 08:17:55 d2.utils.events]: [0m eta: 0:05:46  iter: 2899  total_loss: 0.8811  loss_cls: 0.1063  loss_box_reg: 0.2727  loss_mask: 0.1473  loss_rpn_cls: 0.05303  loss_rpn_loc: 0.2623  time: 4.4978  data_time: 0.0037  lr: 0.01  max_mem: 0M
[32m[11/14 08:19:00 d2.utils.events]: [0m eta: 0:04:36  iter: 2919  total_loss: 0.8061  loss_cls: 0.1086  loss_box_reg: 0.2813  loss_mask: 0.1402  loss_rpn_cls: 0.06458  loss_rpn_loc: 0.2152  time: 4.4894  data_time: 0.0062  lr: 0.01  max_mem: 0M
[32m[11/14 08:20:09 d2.utils.events]: [0m eta: 0:03:26  iter: 2939  total_loss: 0.8159  loss_cls: 0.1075  loss_box_reg: 0.2808  loss_mask: 0.1361  loss_rpn_cls: 0.04873  loss_rpn_loc: 0.2346  time: 4.4822  data_time: 0.0082  lr: 0.01  max_mem: 0M
[32m[11/14 08:21:20 d2.utils.events]: [0m eta: 0:02:16  iter: 2959  total_loss: 0.8462  loss_cls: 0.1102  loss_box_reg: 0.2851  loss_mask: 0.1386  loss_rpn_cls: 0.05237  loss_rpn_loc: 0.2407  time: 4.4761  data_time: 0.0053  lr: 0.01  max_mem: 0M
[32m[11/14 08:22:30 d2.utils.events]: [0m eta: 0:01:08  iter: 2979  total_loss: 0.8508  loss_cls: 0.1201  loss_box_reg: 0.2771  loss_mask: 0.1482  loss_rpn_cls: 0.06794  loss_rpn_loc: 0.2092  time: 4.4694  data_time: 0.0053  lr: 0.01  max_mem: 0M
[32m[11/14 08:23:37 d2.utils.events]: [0m eta: 0:00:00  iter: 2999  total_loss: 0.8352  loss_cls: 0.1006  loss_box_reg: 0.2878  loss_mask: 0.1443  loss_rpn_cls: 0.07418  loss_rpn_loc: 0.2215  time: 4.4616  data_time: 0.0036  lr: 0.01  max_mem: 0M
[32m[11/14 08:23:37 d2.engine.hooks]: [0mOverall training speed: 2998 iterations in 3:42:55 (4.4616 s / it)
[32m[11/14 08:23:37 d2.engine.hooks]: [0mTotal training time: 3:43:03 (0:00:08 on hooks)
[32m[11/14 08:23:37 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[32m[11/14 08:23:37 d2.data.common]: [0mSerializing 20 elements to byte tensors and concatenating them all ...
[32m[11/14 08:23:37 d2.data.common]: [0mSerialized dataset takes 0.46 MiB
[5m[31mWARNING[0m [32m[11/14 08:23:37 d2.engine.defaults]: [0mNo evaluator found. Use `DefaultTrainer.test(evaluators=)`, or implement its `build_evaluator` method.
[32m[11/14 08:23:37 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[32m[11/14 08:23:37 d2.data.common]: [0mSerializing 6 elements to byte tensors and concatenating them all ...
[32m[11/14 08:23:37 d2.data.common]: [0mSerialized dataset takes 0.11 MiB
[5m[31mWARNING[0m [32m[11/14 08:23:37 d2.engine.defaults]: [0mNo evaluator found. Use `DefaultTrainer.test(evaluators=)`, or implement its `build_evaluator` method.
USING MODEL WEIGHT: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp2/model_0002999.pth
Dataset: satellite_Val
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S08_03_SE1_1000X03.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S08_03_SE1_1000X03.png
	num_instances: 96
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S06_01_SE1_500X67.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S06_01_SE1_500X67.png
	num_instances: 68
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S04_02_SE1_1000X50.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S04_02_SE1_1000X50.png
	num_instances: 48
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S03_03_SE1_1250X41.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S03_03_SE1_1250X41.png
	num_instances: 123
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S02_01_SE1_300X14.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S02_01_SE1_300X14.png
	num_instances: 89
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/HP743_2S_250x.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/HP743_2S_250x.png
	num_instances: 65
gt filename: S08_03_SE1_1000X03.png	 pred filename: S08_03_SE1_1000X03.png
gt filename: S06_01_SE1_500X67.png	 pred filename: S06_01_SE1_500X67.png
gt filename: S04_02_SE1_1000X50.png	 pred filename: S04_02_SE1_1000X50.png
gt filename: S03_03_SE1_1250X41.png	 pred filename: S03_03_SE1_1250X41.png
gt filename: S02_01_SE1_300X14.png	 pred filename: S02_01_SE1_300X14.png
gt filename: HP743_2S_250x.png	 pred filename: HP743_2S_250x.png
x:  [1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2]
y:  [0.53, 0.37, 0.58, 0.49, 0.54, 0.54, 0.58, 0.46, 0.62, 0.54, 0.49, 0.71]
Average Precision Score:  0.5079704418939684
Average Recall Score:     0.568225468820707
Precision: 0.5855479687576755
Recall: 0.6164985777088182
---
Precision: 0.4466003848620911
Recall: 0.4743251298646002
---
Precision: 0.7314766158696795
Recall: 0.6816846229187071
---
Precision: 0.5043609527004361
Recall: 0.518180251594003
---
Precision: 0.7892179334372421
Recall: 0.5905598243688255
---
Precision: 0.33095768374164813
Recall: 0.7393034825870647
---
USING MODEL WEIGHT: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp2/model_final.pth
Dataset: satellite_Val
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S08_03_SE1_1000X03.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S08_03_SE1_1000X03.png
	num_instances: 96
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S06_01_SE1_500X67.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S06_01_SE1_500X67.png
	num_instances: 68
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S04_02_SE1_1000X50.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S04_02_SE1_1000X50.png
	num_instances: 48
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S03_03_SE1_1250X41.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S03_03_SE1_1250X41.png
	num_instances: 123
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S02_01_SE1_300X14.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S02_01_SE1_300X14.png
	num_instances: 89
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/HP743_2S_250x.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/HP743_2S_250x.png
	num_instances: 65
gt filename: S08_03_SE1_1000X03.png	 pred filename: S08_03_SE1_1000X03.png
gt filename: S06_01_SE1_500X67.png	 pred filename: S06_01_SE1_500X67.png
gt filename: S04_02_SE1_1000X50.png	 pred filename: S04_02_SE1_1000X50.png
gt filename: S03_03_SE1_1250X41.png	 pred filename: S03_03_SE1_1250X41.png
gt filename: S02_01_SE1_300X14.png	 pred filename: S02_01_SE1_300X14.png
gt filename: HP743_2S_250x.png	 pred filename: HP743_2S_250x.png
x:  [1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2]
y:  [0.53, 0.37, 0.58, 0.49, 0.54, 0.54, 0.58, 0.46, 0.62, 0.54, 0.49, 0.71]
Average Precision Score:  0.5079704418939684
Average Recall Score:     0.568225468820707
Precision: 0.5855479687576755
Recall: 0.6164985777088182
---
Precision: 0.4466003848620911
Recall: 0.4743251298646002
---
Precision: 0.7314766158696795
Recall: 0.6816846229187071
---
Precision: 0.5043609527004361
Recall: 0.518180251594003
---
Precision: 0.7892179334372421
Recall: 0.5905598243688255
---
Precision: 0.33095768374164813
Recall: 0.7393034825870647
---
Ignoring Final Model
Deleting: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp2/model_0002999.pth
Current File Path
../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp2/model_0002999.pth
New File Path
../../../../../../../ocean/projects/dmr200021p/sprice/variance/CPU_FULL_CONFIG/trial1/model12.pth
Deleting: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp2/model_final.pth
Current File Path
../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp2/model_final.pth
New File Path
../../../../../../../ocean/projects/dmr200021p/sprice/variance/CPU_FULL_CONFIG/trial1/model12.pth
Deleting: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp2/results_checkpoint_0002999.pickle
../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp2/results_checkpoint_0002999.pickle
Deleting: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp2/results_checkpoint_final.pickle
../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp2/results_checkpoint_final.pickle
Removing: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp2/metrics.json
Removing: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp2/last_checkpoint
/var/spool/slurm/d/job5018370/slurm_script: line 9: ./gpua.out: No such file or directory
