[W Context.cpp:70] Warning: torch.use_deterministic_algorithms is in beta, and its design and functionality may change in the future. (function operator())
Registered Datasets: ['satellite_Train', 'satellite_Val']
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/HP743_4S_500x.png
	num_instances: 103
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S08_01_SE1_1000X94.png
	num_instances: 68
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/HP743_6S_250x.png
	num_instances: 102
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S08_03_SE1_1000X03.png
	num_instances: 88
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S06_01_SE1_500X67.png
	num_instances: 54
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S04_02_SE1_1000X50.png
	num_instances: 45
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S03_03_SE1_1250X41.png
	num_instances: 111
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S02_01_SE1_300X14.png
	num_instances: 98
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/HP743_2S_250x.png
	num_instances: 49
Weights not found, weights will be downloaded from source: https://dl.fbaipublicfiles.com/detectron2/COCO-InstanceSegmentation/mask_rcnn_R_50_FPN_3x/137849600/model_final_f10217.pkl
[32m[11/13 21:18:51 d2.engine.defaults]: [0mModel:
GeneralizedRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): StandardROIHeads(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): FastRCNNConvFCHead(
      (flatten): Flatten(start_dim=1, end_dim=-1)
      (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      (fc_relu1): ReLU()
      (fc2): Linear(in_features=1024, out_features=1024, bias=True)
      (fc_relu2): ReLU()
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=1024, out_features=2, bias=True)
      (bbox_pred): Linear(in_features=1024, out_features=4, bias=True)
    )
    (mask_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(14, 14), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(14, 14), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (mask_head): MaskRCNNConvUpsampleHead(
      (mask_fcn1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn2): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn3): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn4): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
      (deconv_relu): ReLU()
      (predictor): Conv2d(256, 1, kernel_size=(1, 1), stride=(1, 1))
    )
  )
)
[32m[11/13 21:18:52 d2.data.build]: [0mRemoved 0 images with no usable annotations. 20 images left.
[32m[11/13 21:18:52 d2.data.build]: [0mDistribution of instances among all 1 categories:
[36m|  category  | #instances   |
|:----------:|:-------------|
| satellite  | 1412         |
|            |              |[0m
[32m[11/13 21:18:52 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice')]
[32m[11/13 21:18:52 d2.data.build]: [0mUsing training sampler TrainingSampler
[32m[11/13 21:18:52 d2.data.common]: [0mSerializing 20 elements to byte tensors and concatenating them all ...
[32m[11/13 21:18:52 d2.data.common]: [0mSerialized dataset takes 0.46 MiB
[5m[31mWARNING[0m [32m[11/13 21:18:52 d2.solver.build]: [0mSOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[32m[11/13 21:18:52 d2.checkpoint.c2_model_loading]: [0mRenaming Caffe2 weights ......
[32m[11/13 21:18:52 d2.checkpoint.c2_model_loading]: [0mFollowing weights matched with submodule backbone.bottom_up:
| Names in Model    | Names in Checkpoint      | Shapes                                          |
|:------------------|:-------------------------|:------------------------------------------------|
| res2.0.conv1.*    | res2_0_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,1,1)             |
| res2.0.conv2.*    | res2_0_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.0.conv3.*    | res2_0_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.0.shortcut.* | res2_0_branch1_{bn_*,w}  | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.1.conv1.*    | res2_1_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,256,1,1)            |
| res2.1.conv2.*    | res2_1_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.1.conv3.*    | res2_1_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.2.conv1.*    | res2_2_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,256,1,1)            |
| res2.2.conv2.*    | res2_2_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.2.conv3.*    | res2_2_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res3.0.conv1.*    | res3_0_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,256,1,1)       |
| res3.0.conv2.*    | res3_0_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.0.conv3.*    | res3_0_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.0.shortcut.* | res3_0_branch1_{bn_*,w}  | (512,) (512,) (512,) (512,) (512,256,1,1)       |
| res3.1.conv1.*    | res3_1_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.1.conv2.*    | res3_1_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.1.conv3.*    | res3_1_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.2.conv1.*    | res3_2_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.2.conv2.*    | res3_2_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.2.conv3.*    | res3_2_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.3.conv1.*    | res3_3_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.3.conv2.*    | res3_3_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.3.conv3.*    | res3_3_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res4.0.conv1.*    | res4_0_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,512,1,1)       |
| res4.0.conv2.*    | res4_0_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.0.conv3.*    | res4_0_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.0.shortcut.* | res4_0_branch1_{bn_*,w}  | (1024,) (1024,) (1024,) (1024,) (1024,512,1,1)  |
| res4.1.conv1.*    | res4_1_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.1.conv2.*    | res4_1_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.1.conv3.*    | res4_1_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.2.conv1.*    | res4_2_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.2.conv2.*    | res4_2_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.2.conv3.*    | res4_2_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.3.conv1.*    | res4_3_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.3.conv2.*    | res4_3_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.3.conv3.*    | res4_3_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.4.conv1.*    | res4_4_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.4.conv2.*    | res4_4_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.4.conv3.*    | res4_4_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.5.conv1.*    | res4_5_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.5.conv2.*    | res4_5_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.5.conv3.*    | res4_5_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res5.0.conv1.*    | res5_0_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,1024,1,1)      |
| res5.0.conv2.*    | res5_0_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.0.conv3.*    | res5_0_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| res5.0.shortcut.* | res5_0_branch1_{bn_*,w}  | (2048,) (2048,) (2048,) (2048,) (2048,1024,1,1) |
| res5.1.conv1.*    | res5_1_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,2048,1,1)      |
| res5.1.conv2.*    | res5_1_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.1.conv3.*    | res5_1_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| res5.2.conv1.*    | res5_2_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,2048,1,1)      |
| res5.2.conv2.*    | res5_2_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.2.conv3.*    | res5_2_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| stem.conv1.norm.* | res_conv1_bn_*           | (64,) (64,) (64,) (64,)                         |
| stem.conv1.weight | conv1_w                  | (64, 3, 7, 7)                                   |
[32m[11/13 21:18:52 d2.engine.train_loop]: [0mStarting training from iteration 0
[32m[11/13 21:19:54 d2.utils.events]: [0m eta: 2:30:47  iter: 19  total_loss: 3.299  loss_cls: 0.5196  loss_box_reg: 0.02739  loss_mask: 0.6726  loss_rpn_cls: 0.6624  loss_rpn_loc: 1.269  time: 3.0253  data_time: 0.0134  lr: 0.00019981  max_mem: 0M
[32m[11/13 21:20:50 d2.utils.events]: [0m eta: 2:24:40  iter: 39  total_loss: 2.408  loss_cls: 0.353  loss_box_reg: 0.0366  loss_mask: 0.5966  loss_rpn_cls: 0.6079  loss_rpn_loc: 0.8124  time: 2.9131  data_time: 0.0037  lr: 0.00039961  max_mem: 0M
[32m[11/13 21:21:47 d2.utils.events]: [0m eta: 2:23:41  iter: 59  total_loss: 2.14  loss_cls: 0.2758  loss_box_reg: 0.06761  loss_mask: 0.5832  loss_rpn_cls: 0.5732  loss_rpn_loc: 0.6399  time: 2.8977  data_time: 0.0043  lr: 0.00059941  max_mem: 0M
[32m[11/13 21:22:47 d2.utils.events]: [0m eta: 2:21:56  iter: 79  total_loss: 2.088  loss_cls: 0.2408  loss_box_reg: 0.167  loss_mask: 0.5632  loss_rpn_cls: 0.5431  loss_rpn_loc: 0.5478  time: 2.9184  data_time: 0.0045  lr: 0.00079921  max_mem: 0M
[32m[11/13 21:23:52 d2.utils.events]: [0m eta: 2:24:25  iter: 99  total_loss: 2.122  loss_cls: 0.2652  loss_box_reg: 0.3352  loss_mask: 0.54  loss_rpn_cls: 0.4601  loss_rpn_loc: 0.5138  time: 2.9881  data_time: 0.0034  lr: 0.00099901  max_mem: 0M
[32m[11/13 21:24:56 d2.utils.events]: [0m eta: 2:23:40  iter: 119  total_loss: 2.116  loss_cls: 0.2833  loss_box_reg: 0.4248  loss_mask: 0.5117  loss_rpn_cls: 0.3868  loss_rpn_loc: 0.5009  time: 3.0244  data_time: 0.0033  lr: 0.0011988  max_mem: 0M
[32m[11/13 21:26:01 d2.utils.events]: [0m eta: 2:23:58  iter: 139  total_loss: 2.029  loss_cls: 0.27  loss_box_reg: 0.4271  loss_mask: 0.4687  loss_rpn_cls: 0.3358  loss_rpn_loc: 0.4981  time: 3.0537  data_time: 0.0050  lr: 0.0013986  max_mem: 0M
[32m[11/13 21:27:06 d2.utils.events]: [0m eta: 2:23:35  iter: 159  total_loss: 2.026  loss_cls: 0.3394  loss_box_reg: 0.4839  loss_mask: 0.4366  loss_rpn_cls: 0.3428  loss_rpn_loc: 0.4938  time: 3.0808  data_time: 0.0065  lr: 0.0015984  max_mem: 0M
[32m[11/13 21:28:10 d2.utils.events]: [0m eta: 2:22:55  iter: 179  total_loss: 1.86  loss_cls: 0.2701  loss_box_reg: 0.4661  loss_mask: 0.4145  loss_rpn_cls: 0.289  loss_rpn_loc: 0.4701  time: 3.0931  data_time: 0.0061  lr: 0.0017982  max_mem: 0M
[32m[11/13 21:29:16 d2.utils.events]: [0m eta: 2:23:13  iter: 199  total_loss: 1.815  loss_cls: 0.2634  loss_box_reg: 0.4287  loss_mask: 0.3863  loss_rpn_cls: 0.2698  loss_rpn_loc: 0.4557  time: 3.1128  data_time: 0.0050  lr: 0.001998  max_mem: 0M
[32m[11/13 21:30:20 d2.utils.events]: [0m eta: 2:22:42  iter: 219  total_loss: 1.72  loss_cls: 0.242  loss_box_reg: 0.4053  loss_mask: 0.3469  loss_rpn_cls: 0.2643  loss_rpn_loc: 0.4341  time: 3.1235  data_time: 0.0046  lr: 0.0021978  max_mem: 0M
[32m[11/13 21:31:28 d2.utils.events]: [0m eta: 2:22:13  iter: 239  total_loss: 1.725  loss_cls: 0.2392  loss_box_reg: 0.4024  loss_mask: 0.3397  loss_rpn_cls: 0.2449  loss_rpn_loc: 0.4859  time: 3.1450  data_time: 0.0036  lr: 0.0023976  max_mem: 0M
[32m[11/13 21:32:35 d2.utils.events]: [0m eta: 2:21:43  iter: 259  total_loss: 1.692  loss_cls: 0.2453  loss_box_reg: 0.4473  loss_mask: 0.3233  loss_rpn_cls: 0.2331  loss_rpn_loc: 0.4519  time: 3.1595  data_time: 0.0033  lr: 0.0025974  max_mem: 0M
[32m[11/13 21:33:42 d2.utils.events]: [0m eta: 2:21:07  iter: 279  total_loss: 1.522  loss_cls: 0.1992  loss_box_reg: 0.4029  loss_mask: 0.3234  loss_rpn_cls: 0.1905  loss_rpn_loc: 0.4145  time: 3.1748  data_time: 0.0051  lr: 0.0027972  max_mem: 0M
[32m[11/13 21:34:51 d2.utils.events]: [0m eta: 2:20:49  iter: 299  total_loss: 1.673  loss_cls: 0.2366  loss_box_reg: 0.4892  loss_mask: 0.2994  loss_rpn_cls: 0.2245  loss_rpn_loc: 0.4008  time: 3.1927  data_time: 0.0037  lr: 0.002997  max_mem: 0M
[32m[11/13 21:35:57 d2.utils.events]: [0m eta: 2:20:25  iter: 319  total_loss: 1.709  loss_cls: 0.2342  loss_box_reg: 0.4658  loss_mask: 0.3201  loss_rpn_cls: 0.2235  loss_rpn_loc: 0.4063  time: 3.1977  data_time: 0.0036  lr: 0.0031968  max_mem: 0M
[32m[11/13 21:37:05 d2.utils.events]: [0m eta: 2:21:35  iter: 339  total_loss: 1.696  loss_cls: 0.2512  loss_box_reg: 0.4661  loss_mask: 0.31  loss_rpn_cls: 0.2054  loss_rpn_loc: 0.4611  time: 3.2120  data_time: 0.0047  lr: 0.0033966  max_mem: 0M
[32m[11/13 21:38:13 d2.utils.events]: [0m eta: 2:20:51  iter: 359  total_loss: 1.581  loss_cls: 0.2242  loss_box_reg: 0.4942  loss_mask: 0.2884  loss_rpn_cls: 0.1947  loss_rpn_loc: 0.3806  time: 3.2217  data_time: 0.0056  lr: 0.0035964  max_mem: 0M
[32m[11/13 21:39:19 d2.utils.events]: [0m eta: 2:19:47  iter: 379  total_loss: 1.543  loss_cls: 0.2093  loss_box_reg: 0.4049  loss_mask: 0.295  loss_rpn_cls: 0.2249  loss_rpn_loc: 0.3885  time: 3.2245  data_time: 0.0041  lr: 0.0037962  max_mem: 0M
[32m[11/13 21:40:26 d2.utils.events]: [0m eta: 2:18:55  iter: 399  total_loss: 1.515  loss_cls: 0.2063  loss_box_reg: 0.4246  loss_mask: 0.2744  loss_rpn_cls: 0.2234  loss_rpn_loc: 0.4282  time: 3.2315  data_time: 0.0036  lr: 0.003996  max_mem: 0M
[32m[11/13 21:41:33 d2.utils.events]: [0m eta: 2:18:11  iter: 419  total_loss: 1.537  loss_cls: 0.1888  loss_box_reg: 0.4327  loss_mask: 0.2663  loss_rpn_cls: 0.2287  loss_rpn_loc: 0.4275  time: 3.2360  data_time: 0.0047  lr: 0.0041958  max_mem: 0M
[32m[11/13 21:42:38 d2.utils.events]: [0m eta: 2:17:31  iter: 439  total_loss: 1.576  loss_cls: 0.2122  loss_box_reg: 0.4559  loss_mask: 0.2701  loss_rpn_cls: 0.1717  loss_rpn_loc: 0.4064  time: 3.2381  data_time: 0.0062  lr: 0.0043956  max_mem: 0M
[32m[11/13 21:43:45 d2.utils.events]: [0m eta: 2:16:42  iter: 459  total_loss: 1.458  loss_cls: 0.2153  loss_box_reg: 0.4681  loss_mask: 0.271  loss_rpn_cls: 0.1881  loss_rpn_loc: 0.3691  time: 3.2426  data_time: 0.0035  lr: 0.0045954  max_mem: 0M
[32m[11/13 21:44:51 d2.utils.events]: [0m eta: 2:15:43  iter: 479  total_loss: 1.41  loss_cls: 0.1933  loss_box_reg: 0.4316  loss_mask: 0.2586  loss_rpn_cls: 0.1621  loss_rpn_loc: 0.3775  time: 3.2458  data_time: 0.0031  lr: 0.0047952  max_mem: 0M
[32m[11/13 21:45:59 d2.utils.events]: [0m eta: 2:14:51  iter: 499  total_loss: 1.511  loss_cls: 0.1749  loss_box_reg: 0.4137  loss_mask: 0.2552  loss_rpn_cls: 0.2018  loss_rpn_loc: 0.3978  time: 3.2499  data_time: 0.0063  lr: 0.004995  max_mem: 0M
[32m[11/13 21:47:04 d2.utils.events]: [0m eta: 2:13:47  iter: 519  total_loss: 1.51  loss_cls: 0.2235  loss_box_reg: 0.453  loss_mask: 0.2581  loss_rpn_cls: 0.1837  loss_rpn_loc: 0.3937  time: 3.2500  data_time: 0.0042  lr: 0.0051948  max_mem: 0M
[32m[11/13 21:48:12 d2.utils.events]: [0m eta: 2:13:09  iter: 539  total_loss: 1.408  loss_cls: 0.219  loss_box_reg: 0.43  loss_mask: 0.25  loss_rpn_cls: 0.1416  loss_rpn_loc: 0.3722  time: 3.2552  data_time: 0.0039  lr: 0.0053946  max_mem: 0M
[32m[11/13 21:49:19 d2.utils.events]: [0m eta: 2:12:22  iter: 559  total_loss: 1.441  loss_cls: 0.2292  loss_box_reg: 0.4483  loss_mask: 0.2525  loss_rpn_cls: 0.136  loss_rpn_loc: 0.3599  time: 3.2602  data_time: 0.0047  lr: 0.0055944  max_mem: 0M
[32m[11/13 21:50:28 d2.utils.events]: [0m eta: 2:11:22  iter: 579  total_loss: 1.459  loss_cls: 0.2132  loss_box_reg: 0.4371  loss_mask: 0.2581  loss_rpn_cls: 0.183  loss_rpn_loc: 0.4093  time: 3.2659  data_time: 0.0029  lr: 0.0057942  max_mem: 0M
[32m[11/13 21:51:38 d2.utils.events]: [0m eta: 2:10:29  iter: 599  total_loss: 1.534  loss_cls: 0.2259  loss_box_reg: 0.4604  loss_mask: 0.2505  loss_rpn_cls: 0.1613  loss_rpn_loc: 0.4157  time: 3.2745  data_time: 0.0039  lr: 0.005994  max_mem: 0M
[32m[11/13 21:52:45 d2.utils.events]: [0m eta: 2:09:24  iter: 619  total_loss: 1.498  loss_cls: 0.2039  loss_box_reg: 0.4468  loss_mask: 0.2554  loss_rpn_cls: 0.1536  loss_rpn_loc: 0.3991  time: 3.2762  data_time: 0.0040  lr: 0.0061938  max_mem: 0M
[32m[11/13 21:53:55 d2.utils.events]: [0m eta: 2:08:39  iter: 639  total_loss: 1.436  loss_cls: 0.2273  loss_box_reg: 0.4307  loss_mask: 0.235  loss_rpn_cls: 0.1391  loss_rpn_loc: 0.3758  time: 3.2834  data_time: 0.0036  lr: 0.0063936  max_mem: 0M
[32m[11/13 21:55:02 d2.utils.events]: [0m eta: 2:07:43  iter: 659  total_loss: 1.49  loss_cls: 0.2199  loss_box_reg: 0.4233  loss_mask: 0.2492  loss_rpn_cls: 0.1565  loss_rpn_loc: 0.407  time: 3.2857  data_time: 0.0043  lr: 0.0065934  max_mem: 0M
[32m[11/13 21:56:11 d2.utils.events]: [0m eta: 2:06:47  iter: 679  total_loss: 1.456  loss_cls: 0.2417  loss_box_reg: 0.4396  loss_mask: 0.236  loss_rpn_cls: 0.1653  loss_rpn_loc: 0.3801  time: 3.2896  data_time: 0.0043  lr: 0.0067932  max_mem: 0M
[32m[11/13 21:57:17 d2.utils.events]: [0m eta: 2:05:49  iter: 699  total_loss: 1.433  loss_cls: 0.2029  loss_box_reg: 0.4358  loss_mask: 0.2429  loss_rpn_cls: 0.1624  loss_rpn_loc: 0.3928  time: 3.2899  data_time: 0.0079  lr: 0.006993  max_mem: 0M
[32m[11/13 21:58:22 d2.utils.events]: [0m eta: 2:04:26  iter: 719  total_loss: 1.469  loss_cls: 0.2041  loss_box_reg: 0.4347  loss_mask: 0.2372  loss_rpn_cls: 0.1714  loss_rpn_loc: 0.4186  time: 3.2886  data_time: 0.0041  lr: 0.0071928  max_mem: 0M
[32m[11/13 21:59:28 d2.utils.events]: [0m eta: 2:03:21  iter: 739  total_loss: 1.322  loss_cls: 0.1705  loss_box_reg: 0.4172  loss_mask: 0.2309  loss_rpn_cls: 0.1396  loss_rpn_loc: 0.3769  time: 3.2895  data_time: 0.0040  lr: 0.0073926  max_mem: 0M
[32m[11/13 22:00:34 d2.utils.events]: [0m eta: 2:02:15  iter: 759  total_loss: 1.289  loss_cls: 0.1732  loss_box_reg: 0.383  loss_mask: 0.2196  loss_rpn_cls: 0.1555  loss_rpn_loc: 0.362  time: 3.2889  data_time: 0.0039  lr: 0.0075924  max_mem: 0M
[32m[11/13 22:01:43 d2.utils.events]: [0m eta: 2:01:30  iter: 779  total_loss: 1.291  loss_cls: 0.1905  loss_box_reg: 0.4303  loss_mask: 0.2184  loss_rpn_cls: 0.1315  loss_rpn_loc: 0.3549  time: 3.2933  data_time: 0.0044  lr: 0.0077922  max_mem: 0M
[32m[11/13 22:02:47 d2.utils.events]: [0m eta: 2:00:14  iter: 799  total_loss: 1.376  loss_cls: 0.1858  loss_box_reg: 0.4334  loss_mask: 0.2281  loss_rpn_cls: 0.1577  loss_rpn_loc: 0.3982  time: 3.2908  data_time: 0.0031  lr: 0.007992  max_mem: 0M
[32m[11/13 22:03:55 d2.utils.events]: [0m eta: 1:59:15  iter: 819  total_loss: 1.363  loss_cls: 0.1949  loss_box_reg: 0.4268  loss_mask: 0.2227  loss_rpn_cls: 0.1528  loss_rpn_loc: 0.3868  time: 3.2936  data_time: 0.0051  lr: 0.0081918  max_mem: 0M
[32m[11/13 22:05:01 d2.utils.events]: [0m eta: 1:58:33  iter: 839  total_loss: 1.318  loss_cls: 0.1918  loss_box_reg: 0.4534  loss_mask: 0.227  loss_rpn_cls: 0.1338  loss_rpn_loc: 0.3394  time: 3.2938  data_time: 0.0031  lr: 0.0083916  max_mem: 0M
[32m[11/13 22:06:09 d2.utils.events]: [0m eta: 1:57:30  iter: 859  total_loss: 1.351  loss_cls: 0.1891  loss_box_reg: 0.4223  loss_mask: 0.2126  loss_rpn_cls: 0.1243  loss_rpn_loc: 0.3518  time: 3.2959  data_time: 0.0039  lr: 0.0085914  max_mem: 0M
[32m[11/13 22:07:15 d2.utils.events]: [0m eta: 1:56:27  iter: 879  total_loss: 1.375  loss_cls: 0.1962  loss_box_reg: 0.4361  loss_mask: 0.219  loss_rpn_cls: 0.1459  loss_rpn_loc: 0.3533  time: 3.2965  data_time: 0.0039  lr: 0.0087912  max_mem: 0M
[32m[11/13 22:08:23 d2.utils.events]: [0m eta: 1:55:23  iter: 899  total_loss: 1.334  loss_cls: 0.1739  loss_box_reg: 0.4279  loss_mask: 0.2231  loss_rpn_cls: 0.1595  loss_rpn_loc: 0.36  time: 3.2983  data_time: 0.0042  lr: 0.008991  max_mem: 0M
[32m[11/13 22:09:30 d2.utils.events]: [0m eta: 1:54:15  iter: 919  total_loss: 1.288  loss_cls: 0.1548  loss_box_reg: 0.3835  loss_mask: 0.2123  loss_rpn_cls: 0.1463  loss_rpn_loc: 0.3611  time: 3.2993  data_time: 0.0050  lr: 0.0091908  max_mem: 0M
[32m[11/13 22:10:37 d2.utils.events]: [0m eta: 1:53:11  iter: 939  total_loss: 1.349  loss_cls: 0.2124  loss_box_reg: 0.4485  loss_mask: 0.2155  loss_rpn_cls: 0.1163  loss_rpn_loc: 0.3484  time: 3.3011  data_time: 0.0052  lr: 0.0093906  max_mem: 0M
[32m[11/13 22:11:47 d2.utils.events]: [0m eta: 1:52:07  iter: 959  total_loss: 1.301  loss_cls: 0.2134  loss_box_reg: 0.409  loss_mask: 0.2221  loss_rpn_cls: 0.1073  loss_rpn_loc: 0.3566  time: 3.3049  data_time: 0.0057  lr: 0.0095904  max_mem: 0M
[32m[11/13 22:12:52 d2.utils.events]: [0m eta: 1:50:59  iter: 979  total_loss: 1.411  loss_cls: 0.1787  loss_box_reg: 0.393  loss_mask: 0.2423  loss_rpn_cls: 0.123  loss_rpn_loc: 0.432  time: 3.3032  data_time: 0.0078  lr: 0.0097902  max_mem: 0M
[32m[11/13 22:13:56 d2.utils.events]: [0m eta: 1:49:52  iter: 999  total_loss: 1.35  loss_cls: 0.1701  loss_box_reg: 0.3922  loss_mask: 0.2241  loss_rpn_cls: 0.1467  loss_rpn_loc: 0.4123  time: 3.3019  data_time: 0.0036  lr: 0.00999  max_mem: 0M
[32m[11/13 22:15:03 d2.utils.events]: [0m eta: 1:48:56  iter: 1019  total_loss: 1.343  loss_cls: 0.2016  loss_box_reg: 0.4031  loss_mask: 0.2121  loss_rpn_cls: 0.1327  loss_rpn_loc: 0.3648  time: 3.3026  data_time: 0.0032  lr: 0.01  max_mem: 0M
[32m[11/13 22:16:10 d2.utils.events]: [0m eta: 1:48:00  iter: 1039  total_loss: 1.312  loss_cls: 0.1815  loss_box_reg: 0.4231  loss_mask: 0.2121  loss_rpn_cls: 0.1337  loss_rpn_loc: 0.3659  time: 3.3038  data_time: 0.0024  lr: 0.01  max_mem: 0M
[32m[11/13 22:17:17 d2.utils.events]: [0m eta: 1:47:03  iter: 1059  total_loss: 1.253  loss_cls: 0.1649  loss_box_reg: 0.4072  loss_mask: 0.2084  loss_rpn_cls: 0.1293  loss_rpn_loc: 0.3428  time: 3.3042  data_time: 0.0045  lr: 0.01  max_mem: 0M
[32m[11/13 22:18:24 d2.utils.events]: [0m eta: 1:46:07  iter: 1079  total_loss: 1.193  loss_cls: 0.1603  loss_box_reg: 0.3709  loss_mask: 0.1944  loss_rpn_cls: 0.1126  loss_rpn_loc: 0.3402  time: 3.3051  data_time: 0.0036  lr: 0.01  max_mem: 0M
[32m[11/13 22:19:34 d2.utils.events]: [0m eta: 1:45:05  iter: 1099  total_loss: 1.205  loss_cls: 0.1542  loss_box_reg: 0.3962  loss_mask: 0.2061  loss_rpn_cls: 0.1001  loss_rpn_loc: 0.3241  time: 3.3085  data_time: 0.0064  lr: 0.01  max_mem: 0M
[32m[11/13 22:20:43 d2.utils.events]: [0m eta: 1:44:07  iter: 1119  total_loss: 1.26  loss_cls: 0.1922  loss_box_reg: 0.4113  loss_mask: 0.2194  loss_rpn_cls: 0.1304  loss_rpn_loc: 0.3384  time: 3.3110  data_time: 0.0053  lr: 0.01  max_mem: 0M
[32m[11/13 22:21:50 d2.utils.events]: [0m eta: 1:43:07  iter: 1139  total_loss: 1.257  loss_cls: 0.1841  loss_box_reg: 0.4068  loss_mask: 0.2124  loss_rpn_cls: 0.1083  loss_rpn_loc: 0.343  time: 3.3116  data_time: 0.0049  lr: 0.01  max_mem: 0M
[32m[11/13 22:22:58 d2.utils.events]: [0m eta: 1:42:03  iter: 1159  total_loss: 1.27  loss_cls: 0.1713  loss_box_reg: 0.3895  loss_mask: 0.2215  loss_rpn_cls: 0.1012  loss_rpn_loc: 0.3474  time: 3.3136  data_time: 0.0065  lr: 0.01  max_mem: 0M
[32m[11/13 22:24:08 d2.utils.events]: [0m eta: 1:41:21  iter: 1179  total_loss: 1.211  loss_cls: 0.1597  loss_box_reg: 0.3882  loss_mask: 0.1956  loss_rpn_cls: 0.1133  loss_rpn_loc: 0.3502  time: 3.3164  data_time: 0.0050  lr: 0.01  max_mem: 0M
[32m[11/13 22:25:15 d2.utils.events]: [0m eta: 1:40:16  iter: 1199  total_loss: 1.18  loss_cls: 0.1532  loss_box_reg: 0.3596  loss_mask: 0.1874  loss_rpn_cls: 0.1296  loss_rpn_loc: 0.3784  time: 3.3171  data_time: 0.0039  lr: 0.01  max_mem: 0M
[32m[11/13 22:26:20 d2.utils.events]: [0m eta: 1:39:07  iter: 1219  total_loss: 1.189  loss_cls: 0.1679  loss_box_reg: 0.3785  loss_mask: 0.1972  loss_rpn_cls: 0.0865  loss_rpn_loc: 0.3414  time: 3.3153  data_time: 0.0036  lr: 0.01  max_mem: 0M
[32m[11/13 22:27:28 d2.utils.events]: [0m eta: 1:37:58  iter: 1239  total_loss: 1.223  loss_cls: 0.1674  loss_box_reg: 0.4115  loss_mask: 0.1989  loss_rpn_cls: 0.1096  loss_rpn_loc: 0.3536  time: 3.3167  data_time: 0.0038  lr: 0.01  max_mem: 0M
[32m[11/13 22:28:36 d2.utils.events]: [0m eta: 1:36:56  iter: 1259  total_loss: 1.196  loss_cls: 0.1624  loss_box_reg: 0.3775  loss_mask: 0.2031  loss_rpn_cls: 0.1052  loss_rpn_loc: 0.3333  time: 3.3184  data_time: 0.0034  lr: 0.01  max_mem: 0M
[32m[11/13 22:29:45 d2.utils.events]: [0m eta: 1:35:54  iter: 1279  total_loss: 1.246  loss_cls: 0.17  loss_box_reg: 0.3728  loss_mask: 0.197  loss_rpn_cls: 0.1316  loss_rpn_loc: 0.3637  time: 3.3207  data_time: 0.0035  lr: 0.01  max_mem: 0M
[32m[11/13 22:30:52 d2.utils.events]: [0m eta: 1:34:43  iter: 1299  total_loss: 1.178  loss_cls: 0.1841  loss_box_reg: 0.3789  loss_mask: 0.1924  loss_rpn_cls: 0.126  loss_rpn_loc: 0.342  time: 3.3210  data_time: 0.0059  lr: 0.01  max_mem: 0M
[32m[11/13 22:32:02 d2.utils.events]: [0m eta: 1:33:45  iter: 1319  total_loss: 1.21  loss_cls: 0.1753  loss_box_reg: 0.3916  loss_mask: 0.1993  loss_rpn_cls: 0.1049  loss_rpn_loc: 0.3454  time: 3.3235  data_time: 0.0054  lr: 0.01  max_mem: 0M
[32m[11/13 22:33:09 d2.utils.events]: [0m eta: 1:32:34  iter: 1339  total_loss: 1.176  loss_cls: 0.1666  loss_box_reg: 0.3884  loss_mask: 0.1948  loss_rpn_cls: 0.1138  loss_rpn_loc: 0.3291  time: 3.3238  data_time: 0.0045  lr: 0.01  max_mem: 0M
[32m[11/13 22:34:15 d2.utils.events]: [0m eta: 1:31:22  iter: 1359  total_loss: 1.147  loss_cls: 0.1636  loss_box_reg: 0.3674  loss_mask: 0.1774  loss_rpn_cls: 0.1277  loss_rpn_loc: 0.2929  time: 3.3234  data_time: 0.0031  lr: 0.01  max_mem: 0M
[32m[11/13 22:35:21 d2.utils.events]: [0m eta: 1:30:17  iter: 1379  total_loss: 1.202  loss_cls: 0.1702  loss_box_reg: 0.3864  loss_mask: 0.1898  loss_rpn_cls: 0.1205  loss_rpn_loc: 0.314  time: 3.3232  data_time: 0.0051  lr: 0.01  max_mem: 0M
[32m[11/13 22:36:26 d2.utils.events]: [0m eta: 1:29:03  iter: 1399  total_loss: 1.129  loss_cls: 0.1661  loss_box_reg: 0.3672  loss_mask: 0.1927  loss_rpn_cls: 0.09735  loss_rpn_loc: 0.3207  time: 3.3222  data_time: 0.0055  lr: 0.01  max_mem: 0M
[32m[11/13 22:37:35 d2.utils.events]: [0m eta: 1:28:00  iter: 1419  total_loss: 1.204  loss_cls: 0.1691  loss_box_reg: 0.3542  loss_mask: 0.187  loss_rpn_cls: 0.1085  loss_rpn_loc: 0.3325  time: 3.3238  data_time: 0.0027  lr: 0.01  max_mem: 0M
[32m[11/13 22:38:44 d2.utils.events]: [0m eta: 1:26:55  iter: 1439  total_loss: 1.146  loss_cls: 0.1563  loss_box_reg: 0.3679  loss_mask: 0.1884  loss_rpn_cls: 0.1293  loss_rpn_loc: 0.2904  time: 3.3257  data_time: 0.0043  lr: 0.01  max_mem: 0M
[32m[11/13 22:39:55 d2.utils.events]: [0m eta: 1:25:53  iter: 1459  total_loss: 1.147  loss_cls: 0.1658  loss_box_reg: 0.3815  loss_mask: 0.1946  loss_rpn_cls: 0.1156  loss_rpn_loc: 0.2911  time: 3.3285  data_time: 0.0048  lr: 0.01  max_mem: 0M
[32m[11/13 22:41:05 d2.utils.events]: [0m eta: 1:24:49  iter: 1479  total_loss: 1.194  loss_cls: 0.1729  loss_box_reg: 0.3931  loss_mask: 0.193  loss_rpn_cls: 0.119  loss_rpn_loc: 0.3142  time: 3.3312  data_time: 0.0035  lr: 0.01  max_mem: 0M
[32m[11/13 22:42:15 d2.utils.events]: [0m eta: 1:23:42  iter: 1499  total_loss: 1.117  loss_cls: 0.1618  loss_box_reg: 0.392  loss_mask: 0.1863  loss_rpn_cls: 0.1043  loss_rpn_loc: 0.2916  time: 3.3329  data_time: 0.0044  lr: 0.01  max_mem: 0M
[32m[11/13 22:43:24 d2.utils.events]: [0m eta: 1:22:36  iter: 1519  total_loss: 1.105  loss_cls: 0.1429  loss_box_reg: 0.3718  loss_mask: 0.1849  loss_rpn_cls: 0.1225  loss_rpn_loc: 0.2864  time: 3.3347  data_time: 0.0041  lr: 0.01  max_mem: 0M
[32m[11/13 22:44:37 d2.utils.events]: [0m eta: 1:21:28  iter: 1539  total_loss: 1.117  loss_cls: 0.1507  loss_box_reg: 0.3637  loss_mask: 0.1789  loss_rpn_cls: 0.09451  loss_rpn_loc: 0.2964  time: 3.3384  data_time: 0.0043  lr: 0.01  max_mem: 0M
[32m[11/13 22:45:49 d2.utils.events]: [0m eta: 1:20:22  iter: 1559  total_loss: 1.091  loss_cls: 0.156  loss_box_reg: 0.3693  loss_mask: 0.1873  loss_rpn_cls: 0.09656  loss_rpn_loc: 0.2824  time: 3.3423  data_time: 0.0065  lr: 0.01  max_mem: 0M
[32m[11/13 22:47:04 d2.utils.events]: [0m eta: 1:19:18  iter: 1579  total_loss: 1.055  loss_cls: 0.1468  loss_box_reg: 0.3745  loss_mask: 0.1892  loss_rpn_cls: 0.08295  loss_rpn_loc: 0.2822  time: 3.3471  data_time: 0.0038  lr: 0.01  max_mem: 0M
[32m[11/13 22:48:15 d2.utils.events]: [0m eta: 1:18:10  iter: 1599  total_loss: 1.252  loss_cls: 0.1484  loss_box_reg: 0.3478  loss_mask: 0.1845  loss_rpn_cls: 0.224  loss_rpn_loc: 0.3209  time: 3.3499  data_time: 0.0030  lr: 0.01  max_mem: 0M
[32m[11/13 22:49:27 d2.utils.events]: [0m eta: 1:17:06  iter: 1619  total_loss: 1.105  loss_cls: 0.1374  loss_box_reg: 0.3409  loss_mask: 0.1765  loss_rpn_cls: 0.1108  loss_rpn_loc: 0.318  time: 3.3528  data_time: 0.0062  lr: 0.01  max_mem: 0M
[32m[11/13 22:50:36 d2.utils.events]: [0m eta: 1:15:57  iter: 1639  total_loss: 1.076  loss_cls: 0.1365  loss_box_reg: 0.3358  loss_mask: 0.1781  loss_rpn_cls: 0.08864  loss_rpn_loc: 0.3192  time: 3.3541  data_time: 0.0040  lr: 0.01  max_mem: 0M
[32m[11/13 22:51:47 d2.utils.events]: [0m eta: 1:14:52  iter: 1659  total_loss: 1.085  loss_cls: 0.1649  loss_box_reg: 0.353  loss_mask: 0.1832  loss_rpn_cls: 0.09546  loss_rpn_loc: 0.2807  time: 3.3563  data_time: 0.0056  lr: 0.01  max_mem: 0M
[32m[11/13 22:52:58 d2.utils.events]: [0m eta: 1:13:45  iter: 1679  total_loss: 1.115  loss_cls: 0.1658  loss_box_reg: 0.362  loss_mask: 0.1805  loss_rpn_cls: 0.1034  loss_rpn_loc: 0.283  time: 3.3584  data_time: 0.0034  lr: 0.01  max_mem: 0M
[32m[11/13 22:54:09 d2.utils.events]: [0m eta: 1:12:43  iter: 1699  total_loss: 1.143  loss_cls: 0.1711  loss_box_reg: 0.3566  loss_mask: 0.1823  loss_rpn_cls: 0.102  loss_rpn_loc: 0.3159  time: 3.3611  data_time: 0.0066  lr: 0.01  max_mem: 0M
[32m[11/13 22:55:21 d2.utils.events]: [0m eta: 1:11:45  iter: 1719  total_loss: 1.166  loss_cls: 0.1572  loss_box_reg: 0.3421  loss_mask: 0.1798  loss_rpn_cls: 0.09428  loss_rpn_loc: 0.3469  time: 3.3637  data_time: 0.0053  lr: 0.01  max_mem: 0M
[32m[11/13 22:56:30 d2.utils.events]: [0m eta: 1:10:41  iter: 1739  total_loss: 1.056  loss_cls: 0.1552  loss_box_reg: 0.334  loss_mask: 0.1651  loss_rpn_cls: 0.1013  loss_rpn_loc: 0.3067  time: 3.3646  data_time: 0.0035  lr: 0.01  max_mem: 0M
[32m[11/13 22:57:40 d2.utils.events]: [0m eta: 1:09:38  iter: 1759  total_loss: 1.039  loss_cls: 0.1564  loss_box_reg: 0.3679  loss_mask: 0.1746  loss_rpn_cls: 0.09568  loss_rpn_loc: 0.2686  time: 3.3663  data_time: 0.0061  lr: 0.01  max_mem: 0M
[32m[11/13 22:58:54 d2.utils.events]: [0m eta: 1:08:36  iter: 1779  total_loss: 1.028  loss_cls: 0.1438  loss_box_reg: 0.3487  loss_mask: 0.1641  loss_rpn_cls: 0.08032  loss_rpn_loc: 0.2856  time: 3.3696  data_time: 0.0062  lr: 0.01  max_mem: 0M
[32m[11/13 23:00:04 d2.utils.events]: [0m eta: 1:07:32  iter: 1799  total_loss: 1.055  loss_cls: 0.1536  loss_box_reg: 0.3402  loss_mask: 0.1687  loss_rpn_cls: 0.07519  loss_rpn_loc: 0.3032  time: 3.3714  data_time: 0.0043  lr: 0.01  max_mem: 0M
[32m[11/13 23:01:17 d2.utils.events]: [0m eta: 1:06:25  iter: 1819  total_loss: 1.05  loss_cls: 0.1518  loss_box_reg: 0.358  loss_mask: 0.1829  loss_rpn_cls: 0.08314  loss_rpn_loc: 0.2743  time: 3.3741  data_time: 0.0029  lr: 0.01  max_mem: 0M
[32m[11/13 23:02:28 d2.utils.events]: [0m eta: 1:05:25  iter: 1839  total_loss: 1.065  loss_cls: 0.1642  loss_box_reg: 0.354  loss_mask: 0.1706  loss_rpn_cls: 0.08341  loss_rpn_loc: 0.2947  time: 3.3760  data_time: 0.0036  lr: 0.01  max_mem: 0M
[32m[11/13 23:03:41 d2.utils.events]: [0m eta: 1:04:24  iter: 1859  total_loss: 0.9846  loss_cls: 0.1402  loss_box_reg: 0.3183  loss_mask: 0.1651  loss_rpn_cls: 0.07635  loss_rpn_loc: 0.2906  time: 3.3789  data_time: 0.0063  lr: 0.01  max_mem: 0M
[32m[11/13 23:04:50 d2.utils.events]: [0m eta: 1:03:20  iter: 1879  total_loss: 1.007  loss_cls: 0.1371  loss_box_reg: 0.3232  loss_mask: 0.1693  loss_rpn_cls: 0.08483  loss_rpn_loc: 0.2719  time: 3.3798  data_time: 0.0061  lr: 0.01  max_mem: 0M
[32m[11/13 23:06:03 d2.utils.events]: [0m eta: 1:02:21  iter: 1899  total_loss: 0.993  loss_cls: 0.1268  loss_box_reg: 0.3259  loss_mask: 0.1586  loss_rpn_cls: 0.1038  loss_rpn_loc: 0.2652  time: 3.3829  data_time: 0.0045  lr: 0.01  max_mem: 0M
[32m[11/13 23:07:16 d2.utils.events]: [0m eta: 1:01:18  iter: 1919  total_loss: 0.9749  loss_cls: 0.1334  loss_box_reg: 0.3247  loss_mask: 0.1642  loss_rpn_cls: 0.07814  loss_rpn_loc: 0.2766  time: 3.3854  data_time: 0.0053  lr: 0.01  max_mem: 0M
[32m[11/13 23:08:26 d2.utils.events]: [0m eta: 1:00:27  iter: 1939  total_loss: 0.9364  loss_cls: 0.1464  loss_box_reg: 0.3118  loss_mask: 0.1606  loss_rpn_cls: 0.08661  loss_rpn_loc: 0.2529  time: 3.3866  data_time: 0.0032  lr: 0.01  max_mem: 0M
[32m[11/13 23:09:32 d2.utils.events]: [0m eta: 0:59:04  iter: 1959  total_loss: 0.9182  loss_cls: 0.1268  loss_box_reg: 0.3214  loss_mask: 0.1548  loss_rpn_cls: 0.07353  loss_rpn_loc: 0.2613  time: 3.3858  data_time: 0.0065  lr: 0.01  max_mem: 0M
[32m[11/13 23:10:46 d2.utils.events]: [0m eta: 0:58:19  iter: 1979  total_loss: 1.048  loss_cls: 0.1497  loss_box_reg: 0.3233  loss_mask: 0.165  loss_rpn_cls: 0.06564  loss_rpn_loc: 0.2754  time: 3.3890  data_time: 0.0036  lr: 0.01  max_mem: 0M
[32m[11/13 23:12:00 d2.utils.events]: [0m eta: 0:57:20  iter: 1999  total_loss: 1.035  loss_cls: 0.1494  loss_box_reg: 0.3416  loss_mask: 0.1633  loss_rpn_cls: 0.107  loss_rpn_loc: 0.2706  time: 3.3917  data_time: 0.0056  lr: 0.01  max_mem: 0M
[32m[11/13 23:13:10 d2.utils.events]: [0m eta: 0:56:16  iter: 2019  total_loss: 1.068  loss_cls: 0.1438  loss_box_reg: 0.3473  loss_mask: 0.1764  loss_rpn_cls: 0.08277  loss_rpn_loc: 0.2871  time: 3.3932  data_time: 0.0022  lr: 0.01  max_mem: 0M
[32m[11/13 23:14:22 d2.utils.events]: [0m eta: 0:55:13  iter: 2039  total_loss: 1.109  loss_cls: 0.1553  loss_box_reg: 0.3459  loss_mask: 0.1685  loss_rpn_cls: 0.1022  loss_rpn_loc: 0.2757  time: 3.3950  data_time: 0.0053  lr: 0.01  max_mem: 0M
[32m[11/13 23:15:31 d2.utils.events]: [0m eta: 0:54:09  iter: 2059  total_loss: 0.9545  loss_cls: 0.1274  loss_box_reg: 0.3232  loss_mask: 0.1646  loss_rpn_cls: 0.07546  loss_rpn_loc: 0.2714  time: 3.3955  data_time: 0.0036  lr: 0.01  max_mem: 0M
[32m[11/13 23:16:39 d2.utils.events]: [0m eta: 0:52:59  iter: 2079  total_loss: 0.9635  loss_cls: 0.1344  loss_box_reg: 0.2996  loss_mask: 0.1533  loss_rpn_cls: 0.08085  loss_rpn_loc: 0.2817  time: 3.3954  data_time: 0.0044  lr: 0.01  max_mem: 0M
[32m[11/13 23:17:49 d2.utils.events]: [0m eta: 0:51:51  iter: 2099  total_loss: 0.9603  loss_cls: 0.1469  loss_box_reg: 0.3224  loss_mask: 0.1558  loss_rpn_cls: 0.06789  loss_rpn_loc: 0.2726  time: 3.3966  data_time: 0.0044  lr: 0.01  max_mem: 0M
[32m[11/13 23:18:57 d2.utils.events]: [0m eta: 0:50:39  iter: 2119  total_loss: 0.9453  loss_cls: 0.1344  loss_box_reg: 0.3186  loss_mask: 0.1597  loss_rpn_cls: 0.07472  loss_rpn_loc: 0.2696  time: 3.3967  data_time: 0.0037  lr: 0.01  max_mem: 0M
[32m[11/13 23:20:12 d2.utils.events]: [0m eta: 0:49:39  iter: 2139  total_loss: 0.9228  loss_cls: 0.136  loss_box_reg: 0.3224  loss_mask: 0.1622  loss_rpn_cls: 0.0568  loss_rpn_loc: 0.2384  time: 3.3996  data_time: 0.0039  lr: 0.01  max_mem: 0M
[32m[11/13 23:21:26 d2.utils.events]: [0m eta: 0:48:34  iter: 2159  total_loss: 0.9523  loss_cls: 0.1264  loss_box_reg: 0.3303  loss_mask: 0.1644  loss_rpn_cls: 0.06324  loss_rpn_loc: 0.2489  time: 3.4024  data_time: 0.0050  lr: 0.01  max_mem: 0M
[32m[11/13 23:22:39 d2.utils.events]: [0m eta: 0:47:26  iter: 2179  total_loss: 0.8748  loss_cls: 0.1324  loss_box_reg: 0.3003  loss_mask: 0.1524  loss_rpn_cls: 0.05769  loss_rpn_loc: 0.2347  time: 3.4046  data_time: 0.0065  lr: 0.01  max_mem: 0M
[32m[11/13 23:23:43 d2.utils.events]: [0m eta: 0:46:15  iter: 2199  total_loss: 0.9856  loss_cls: 0.1298  loss_box_reg: 0.3237  loss_mask: 0.1626  loss_rpn_cls: 0.08464  loss_rpn_loc: 0.2852  time: 3.4030  data_time: 0.0034  lr: 0.01  max_mem: 0M
[32m[11/13 23:24:54 d2.utils.events]: [0m eta: 0:45:10  iter: 2219  total_loss: 0.9171  loss_cls: 0.123  loss_box_reg: 0.3088  loss_mask: 0.1548  loss_rpn_cls: 0.07523  loss_rpn_loc: 0.254  time: 3.4044  data_time: 0.0032  lr: 0.01  max_mem: 0M
[32m[11/13 23:26:05 d2.utils.events]: [0m eta: 0:44:01  iter: 2239  total_loss: 0.9644  loss_cls: 0.121  loss_box_reg: 0.3048  loss_mask: 0.1602  loss_rpn_cls: 0.06726  loss_rpn_loc: 0.2736  time: 3.4058  data_time: 0.0048  lr: 0.01  max_mem: 0M
[32m[11/13 23:27:15 d2.utils.events]: [0m eta: 0:42:50  iter: 2259  total_loss: 0.886  loss_cls: 0.1066  loss_box_reg: 0.2824  loss_mask: 0.1498  loss_rpn_cls: 0.08085  loss_rpn_loc: 0.2573  time: 3.4062  data_time: 0.0054  lr: 0.01  max_mem: 0M
[32m[11/13 23:28:24 d2.utils.events]: [0m eta: 0:41:39  iter: 2279  total_loss: 0.9907  loss_cls: 0.1247  loss_box_reg: 0.3383  loss_mask: 0.1569  loss_rpn_cls: 0.07925  loss_rpn_loc: 0.2783  time: 3.4068  data_time: 0.0032  lr: 0.01  max_mem: 0M
[32m[11/13 23:29:35 d2.utils.events]: [0m eta: 0:40:32  iter: 2299  total_loss: 0.9486  loss_cls: 0.1453  loss_box_reg: 0.3248  loss_mask: 0.1592  loss_rpn_cls: 0.06606  loss_rpn_loc: 0.2607  time: 3.4078  data_time: 0.0052  lr: 0.01  max_mem: 0M
[32m[11/13 23:30:43 d2.utils.events]: [0m eta: 0:39:22  iter: 2319  total_loss: 0.95  loss_cls: 0.1265  loss_box_reg: 0.305  loss_mask: 0.1532  loss_rpn_cls: 0.09592  loss_rpn_loc: 0.2489  time: 3.4078  data_time: 0.0061  lr: 0.01  max_mem: 0M
[32m[11/13 23:31:54 d2.utils.events]: [0m eta: 0:38:14  iter: 2339  total_loss: 0.9966  loss_cls: 0.1284  loss_box_reg: 0.3109  loss_mask: 0.1586  loss_rpn_cls: 0.08961  loss_rpn_loc: 0.2666  time: 3.4090  data_time: 0.0057  lr: 0.01  max_mem: 0M
[32m[11/13 23:33:08 d2.utils.events]: [0m eta: 0:37:10  iter: 2359  total_loss: 0.9799  loss_cls: 0.1198  loss_box_reg: 0.325  loss_mask: 0.1619  loss_rpn_cls: 0.0821  loss_rpn_loc: 0.277  time: 3.4114  data_time: 0.0040  lr: 0.01  max_mem: 0M
[32m[11/13 23:34:20 d2.utils.events]: [0m eta: 0:36:01  iter: 2379  total_loss: 0.9466  loss_cls: 0.1236  loss_box_reg: 0.2919  loss_mask: 0.1551  loss_rpn_cls: 0.09102  loss_rpn_loc: 0.2815  time: 3.4133  data_time: 0.0045  lr: 0.01  max_mem: 0M
[32m[11/13 23:35:32 d2.utils.events]: [0m eta: 0:34:52  iter: 2399  total_loss: 0.9472  loss_cls: 0.1163  loss_box_reg: 0.3206  loss_mask: 0.1604  loss_rpn_cls: 0.09  loss_rpn_loc: 0.2768  time: 3.4145  data_time: 0.0037  lr: 0.01  max_mem: 0M
[32m[11/13 23:36:41 d2.utils.events]: [0m eta: 0:33:42  iter: 2419  total_loss: 0.893  loss_cls: 0.1211  loss_box_reg: 0.2884  loss_mask: 0.1578  loss_rpn_cls: 0.0871  loss_rpn_loc: 0.2487  time: 3.4149  data_time: 0.0058  lr: 0.01  max_mem: 0M
[32m[11/13 23:37:47 d2.utils.events]: [0m eta: 0:32:31  iter: 2439  total_loss: 0.924  loss_cls: 0.1152  loss_box_reg: 0.2942  loss_mask: 0.1507  loss_rpn_cls: 0.07333  loss_rpn_loc: 0.2484  time: 3.4138  data_time: 0.0058  lr: 0.01  max_mem: 0M
[32m[11/13 23:38:50 d2.utils.events]: [0m eta: 0:31:18  iter: 2459  total_loss: 0.8866  loss_cls: 0.1095  loss_box_reg: 0.2899  loss_mask: 0.1546  loss_rpn_cls: 0.08192  loss_rpn_loc: 0.2591  time: 3.4119  data_time: 0.0029  lr: 0.01  max_mem: 0M
[32m[11/13 23:40:02 d2.utils.events]: [0m eta: 0:30:08  iter: 2479  total_loss: 0.9261  loss_cls: 0.1217  loss_box_reg: 0.3002  loss_mask: 0.1555  loss_rpn_cls: 0.07819  loss_rpn_loc: 0.232  time: 3.4132  data_time: 0.0058  lr: 0.01  max_mem: 0M
[32m[11/13 23:41:15 d2.utils.events]: [0m eta: 0:29:02  iter: 2499  total_loss: 0.8787  loss_cls: 0.1104  loss_box_reg: 0.2885  loss_mask: 0.1473  loss_rpn_cls: 0.06319  loss_rpn_loc: 0.2535  time: 3.4152  data_time: 0.0032  lr: 0.01  max_mem: 0M
[32m[11/13 23:42:25 d2.utils.events]: [0m eta: 0:27:52  iter: 2519  total_loss: 0.9071  loss_cls: 0.1054  loss_box_reg: 0.295  loss_mask: 0.1565  loss_rpn_cls: 0.05605  loss_rpn_loc: 0.2585  time: 3.4160  data_time: 0.0034  lr: 0.01  max_mem: 0M
[32m[11/13 23:43:37 d2.utils.events]: [0m eta: 0:26:42  iter: 2539  total_loss: 0.9079  loss_cls: 0.119  loss_box_reg: 0.3098  loss_mask: 0.1528  loss_rpn_cls: 0.07004  loss_rpn_loc: 0.2654  time: 3.4173  data_time: 0.0025  lr: 0.01  max_mem: 0M
[32m[11/13 23:44:48 d2.utils.events]: [0m eta: 0:25:33  iter: 2559  total_loss: 0.9216  loss_cls: 0.1226  loss_box_reg: 0.3007  loss_mask: 0.1616  loss_rpn_cls: 0.07681  loss_rpn_loc: 0.2428  time: 3.4185  data_time: 0.0039  lr: 0.01  max_mem: 0M
[32m[11/13 23:45:59 d2.utils.events]: [0m eta: 0:24:23  iter: 2579  total_loss: 0.9015  loss_cls: 0.1057  loss_box_reg: 0.2787  loss_mask: 0.1503  loss_rpn_cls: 0.06936  loss_rpn_loc: 0.2618  time: 3.4195  data_time: 0.0063  lr: 0.01  max_mem: 0M
[32m[11/13 23:47:11 d2.utils.events]: [0m eta: 0:23:13  iter: 2599  total_loss: 0.8414  loss_cls: 0.1156  loss_box_reg: 0.2914  loss_mask: 0.1473  loss_rpn_cls: 0.06116  loss_rpn_loc: 0.2389  time: 3.4205  data_time: 0.0044  lr: 0.01  max_mem: 0M
[32m[11/13 23:48:23 d2.utils.events]: [0m eta: 0:22:04  iter: 2619  total_loss: 0.8607  loss_cls: 0.126  loss_box_reg: 0.2885  loss_mask: 0.1424  loss_rpn_cls: 0.06164  loss_rpn_loc: 0.2443  time: 3.4222  data_time: 0.0066  lr: 0.01  max_mem: 0M
[32m[11/13 23:49:36 d2.utils.events]: [0m eta: 0:20:54  iter: 2639  total_loss: 0.8926  loss_cls: 0.112  loss_box_reg: 0.2814  loss_mask: 0.1447  loss_rpn_cls: 0.07488  loss_rpn_loc: 0.2597  time: 3.4238  data_time: 0.0040  lr: 0.01  max_mem: 0M
[32m[11/13 23:50:50 d2.utils.events]: [0m eta: 0:19:45  iter: 2659  total_loss: 0.8763  loss_cls: 0.1295  loss_box_reg: 0.2973  loss_mask: 0.1541  loss_rpn_cls: 0.06455  loss_rpn_loc: 0.2352  time: 3.4259  data_time: 0.0058  lr: 0.01  max_mem: 0M
[32m[11/13 23:52:02 d2.utils.events]: [0m eta: 0:18:35  iter: 2679  total_loss: 0.8617  loss_cls: 0.1228  loss_box_reg: 0.2697  loss_mask: 0.1519  loss_rpn_cls: 0.0557  loss_rpn_loc: 0.2405  time: 3.4270  data_time: 0.0036  lr: 0.01  max_mem: 0M
[32m[11/13 23:53:11 d2.utils.events]: [0m eta: 0:17:25  iter: 2699  total_loss: 0.8891  loss_cls: 0.1168  loss_box_reg: 0.2785  loss_mask: 0.1429  loss_rpn_cls: 0.06215  loss_rpn_loc: 0.2294  time: 3.4274  data_time: 0.0055  lr: 0.01  max_mem: 0M
[32m[11/13 23:54:24 d2.utils.events]: [0m eta: 0:16:15  iter: 2719  total_loss: 0.813  loss_cls: 0.1079  loss_box_reg: 0.277  loss_mask: 0.1468  loss_rpn_cls: 0.05664  loss_rpn_loc: 0.2326  time: 3.4288  data_time: 0.0043  lr: 0.01  max_mem: 0M
[32m[11/13 23:55:37 d2.utils.events]: [0m eta: 0:15:06  iter: 2739  total_loss: 0.8649  loss_cls: 0.09289  loss_box_reg: 0.2778  loss_mask: 0.1443  loss_rpn_cls: 0.05652  loss_rpn_loc: 0.2398  time: 3.4306  data_time: 0.0041  lr: 0.01  max_mem: 0M
[32m[11/13 23:56:46 d2.utils.events]: [0m eta: 0:13:56  iter: 2759  total_loss: 0.8266  loss_cls: 0.1127  loss_box_reg: 0.2874  loss_mask: 0.1437  loss_rpn_cls: 0.0516  loss_rpn_loc: 0.2382  time: 3.4305  data_time: 0.0043  lr: 0.01  max_mem: 0M
[32m[11/13 23:57:59 d2.utils.events]: [0m eta: 0:12:47  iter: 2779  total_loss: 0.8597  loss_cls: 0.1221  loss_box_reg: 0.2913  loss_mask: 0.1456  loss_rpn_cls: 0.0638  loss_rpn_loc: 0.2532  time: 3.4322  data_time: 0.0047  lr: 0.01  max_mem: 0M
[32m[11/13 23:59:12 d2.utils.events]: [0m eta: 0:11:37  iter: 2799  total_loss: 0.8753  loss_cls: 0.1087  loss_box_reg: 0.292  loss_mask: 0.1565  loss_rpn_cls: 0.05588  loss_rpn_loc: 0.257  time: 3.4338  data_time: 0.0039  lr: 0.01  max_mem: 0M
[32m[11/14 00:00:26 d2.utils.events]: [0m eta: 0:10:28  iter: 2819  total_loss: 0.8627  loss_cls: 0.1186  loss_box_reg: 0.2856  loss_mask: 0.1508  loss_rpn_cls: 0.05144  loss_rpn_loc: 0.2251  time: 3.4356  data_time: 0.0034  lr: 0.01  max_mem: 0M
[32m[11/14 00:01:39 d2.utils.events]: [0m eta: 0:09:18  iter: 2839  total_loss: 0.8606  loss_cls: 0.1147  loss_box_reg: 0.2751  loss_mask: 0.1411  loss_rpn_cls: 0.08199  loss_rpn_loc: 0.2268  time: 3.4370  data_time: 0.0090  lr: 0.01  max_mem: 0M
[32m[11/14 00:02:53 d2.utils.events]: [0m eta: 0:08:08  iter: 2859  total_loss: 0.8268  loss_cls: 0.1167  loss_box_reg: 0.2754  loss_mask: 0.1395  loss_rpn_cls: 0.06654  loss_rpn_loc: 0.2296  time: 3.4388  data_time: 0.0042  lr: 0.01  max_mem: 0M
[32m[11/14 00:04:07 d2.utils.events]: [0m eta: 0:06:59  iter: 2879  total_loss: 0.8601  loss_cls: 0.1088  loss_box_reg: 0.2926  loss_mask: 0.1444  loss_rpn_cls: 0.05934  loss_rpn_loc: 0.262  time: 3.4407  data_time: 0.0039  lr: 0.01  max_mem: 0M
[32m[11/14 00:05:21 d2.utils.events]: [0m eta: 0:05:49  iter: 2899  total_loss: 0.8811  loss_cls: 0.1063  loss_box_reg: 0.2727  loss_mask: 0.1473  loss_rpn_cls: 0.05303  loss_rpn_loc: 0.2623  time: 3.4424  data_time: 0.0034  lr: 0.01  max_mem: 0M
[32m[11/14 00:06:30 d2.utils.events]: [0m eta: 0:04:39  iter: 2919  total_loss: 0.8061  loss_cls: 0.1086  loss_box_reg: 0.2813  loss_mask: 0.1402  loss_rpn_cls: 0.06458  loss_rpn_loc: 0.2152  time: 3.4427  data_time: 0.0033  lr: 0.01  max_mem: 0M
[32m[11/14 00:07:44 d2.utils.events]: [0m eta: 0:03:29  iter: 2939  total_loss: 0.8159  loss_cls: 0.1075  loss_box_reg: 0.2808  loss_mask: 0.1361  loss_rpn_cls: 0.04873  loss_rpn_loc: 0.2346  time: 3.4441  data_time: 0.0065  lr: 0.01  max_mem: 0M
[32m[11/14 00:08:57 d2.utils.events]: [0m eta: 0:02:19  iter: 2959  total_loss: 0.8462  loss_cls: 0.1102  loss_box_reg: 0.2851  loss_mask: 0.1386  loss_rpn_cls: 0.05237  loss_rpn_loc: 0.2407  time: 3.4457  data_time: 0.0056  lr: 0.01  max_mem: 0M
[32m[11/14 00:10:09 d2.utils.events]: [0m eta: 0:01:09  iter: 2979  total_loss: 0.8508  loss_cls: 0.1201  loss_box_reg: 0.2771  loss_mask: 0.1482  loss_rpn_cls: 0.06794  loss_rpn_loc: 0.2092  time: 3.4466  data_time: 0.0039  lr: 0.01  max_mem: 0M
[32m[11/14 00:11:18 d2.utils.events]: [0m eta: 0:00:00  iter: 2999  total_loss: 0.8352  loss_cls: 0.1006  loss_box_reg: 0.2878  loss_mask: 0.1443  loss_rpn_cls: 0.07418  loss_rpn_loc: 0.2215  time: 3.4464  data_time: 0.0051  lr: 0.01  max_mem: 0M
[32m[11/14 00:11:18 d2.engine.hooks]: [0mOverall training speed: 2998 iterations in 2:52:12 (3.4464 s / it)
[32m[11/14 00:11:18 d2.engine.hooks]: [0mTotal training time: 2:52:18 (0:00:06 on hooks)
[32m[11/14 00:11:18 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[32m[11/14 00:11:18 d2.data.common]: [0mSerializing 20 elements to byte tensors and concatenating them all ...
[32m[11/14 00:11:18 d2.data.common]: [0mSerialized dataset takes 0.46 MiB
[5m[31mWARNING[0m [32m[11/14 00:11:18 d2.engine.defaults]: [0mNo evaluator found. Use `DefaultTrainer.test(evaluators=)`, or implement its `build_evaluator` method.
[32m[11/14 00:11:19 d2.data.build]: [0mDistribution of instances among all 1 categories:
[36m|  category  | #instances   |
|:----------:|:-------------|
| satellite  | 445          |
|            |              |[0m
[32m[11/14 00:11:19 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[32m[11/14 00:11:19 d2.data.common]: [0mSerializing 6 elements to byte tensors and concatenating them all ...
[32m[11/14 00:11:19 d2.data.common]: [0mSerialized dataset takes 0.11 MiB
[5m[31mWARNING[0m [32m[11/14 00:11:19 d2.engine.defaults]: [0mNo evaluator found. Use `DefaultTrainer.test(evaluators=)`, or implement its `build_evaluator` method.
USING MODEL WEIGHT: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp1/model_0002999.pth
Dataset: satellite_Val
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S08_03_SE1_1000X03.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S08_03_SE1_1000X03.png
	num_instances: 96
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S06_01_SE1_500X67.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S06_01_SE1_500X67.png
	num_instances: 68
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S04_02_SE1_1000X50.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S04_02_SE1_1000X50.png
	num_instances: 48
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S03_03_SE1_1250X41.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S03_03_SE1_1250X41.png
	num_instances: 123
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S02_01_SE1_300X14.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S02_01_SE1_300X14.png
	num_instances: 89
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/HP743_2S_250x.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/HP743_2S_250x.png
	num_instances: 65
gt filename: S08_03_SE1_1000X03.png	 pred filename: S08_03_SE1_1000X03.png
gt filename: S06_01_SE1_500X67.png	 pred filename: S06_01_SE1_500X67.png
gt filename: S04_02_SE1_1000X50.png	 pred filename: S04_02_SE1_1000X50.png
gt filename: S03_03_SE1_1250X41.png	 pred filename: S03_03_SE1_1250X41.png
gt filename: S02_01_SE1_300X14.png	 pred filename: S02_01_SE1_300X14.png
gt filename: HP743_2S_250x.png	 pred filename: HP743_2S_250x.png
x:  [1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2]
y:  [0.53, 0.37, 0.58, 0.49, 0.54, 0.54, 0.58, 0.46, 0.62, 0.54, 0.49, 0.71]
Average Precision Score:  0.5079704418939684
Average Recall Score:     0.568225468820707
Precision: 0.5855479687576755
Recall: 0.6164985777088182
---
Precision: 0.4466003848620911
Recall: 0.4743251298646002
---
Precision: 0.7314766158696795
Recall: 0.6816846229187071
---
Precision: 0.5043609527004361
Recall: 0.518180251594003
---
Precision: 0.7892179334372421
Recall: 0.5905598243688255
---
Precision: 0.33095768374164813
Recall: 0.7393034825870647
---
USING MODEL WEIGHT: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp1/model_final.pth
Dataset: satellite_Val
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S08_03_SE1_1000X03.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S08_03_SE1_1000X03.png
	num_instances: 96
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S06_01_SE1_500X67.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S06_01_SE1_500X67.png
	num_instances: 68
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S04_02_SE1_1000X50.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S04_02_SE1_1000X50.png
	num_instances: 48
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S03_03_SE1_1250X41.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S03_03_SE1_1250X41.png
	num_instances: 123
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S02_01_SE1_300X14.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S02_01_SE1_300X14.png
	num_instances: 89
	File: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/HP743_2S_250x.png
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/HP743_2S_250x.png
	num_instances: 65
gt filename: S08_03_SE1_1000X03.png	 pred filename: S08_03_SE1_1000X03.png
gt filename: S06_01_SE1_500X67.png	 pred filename: S06_01_SE1_500X67.png
gt filename: S04_02_SE1_1000X50.png	 pred filename: S04_02_SE1_1000X50.png
gt filename: S03_03_SE1_1250X41.png	 pred filename: S03_03_SE1_1250X41.png
gt filename: S02_01_SE1_300X14.png	 pred filename: S02_01_SE1_300X14.png
gt filename: HP743_2S_250x.png	 pred filename: HP743_2S_250x.png
x:  [1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2]
y:  [0.53, 0.37, 0.58, 0.49, 0.54, 0.54, 0.58, 0.46, 0.62, 0.54, 0.49, 0.71]
Average Precision Score:  0.5079704418939684
Average Recall Score:     0.568225468820707
Precision: 0.5855479687576755
Recall: 0.6164985777088182
---
Precision: 0.4466003848620911
Recall: 0.4743251298646002
---
Precision: 0.7314766158696795
Recall: 0.6816846229187071
---
Precision: 0.5043609527004361
Recall: 0.518180251594003
---
Precision: 0.7892179334372421
Recall: 0.5905598243688255
---
Precision: 0.33095768374164813
Recall: 0.7393034825870647
---
Ignoring Final Model
Deleting: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp1/model_0002999.pth
Current File Path
../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp1/model_0002999.pth
New File Path
../../../../../../../ocean/projects/dmr200021p/sprice/variance/CPU_FULL_CONFIG/trial1/model0.pth
Deleting: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp1/model_final.pth
Current File Path
../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp1/model_final.pth
New File Path
../../../../../../../ocean/projects/dmr200021p/sprice/variance/CPU_FULL_CONFIG/trial1/model0.pth
Deleting: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp1/results_checkpoint_0002999.pickle
../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp1/results_checkpoint_0002999.pickle
Deleting: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp1/results_checkpoint_final.pickle
../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp1/results_checkpoint_final.pickle
Removing: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp1/metrics.json
Removing: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp1/last_checkpoint
/var/spool/slurm/d/job5018360/slurm_script: line 9: ./gpua.out: No such file or directory
