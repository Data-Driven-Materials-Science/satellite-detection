[W Context.cpp:70] Warning: torch.use_deterministic_algorithms is in beta, and its design and functionality may change in the future. (function operator())
Registered Datasets: ['satellite_Train', 'satellite_Val']
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/HP743_4S_500x.png
	num_instances: 103
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S08_01_SE1_1000X94.png
	num_instances: 68
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/HP743_6S_250x.png
	num_instances: 102
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S08_03_SE1_1000X03.png
	num_instances: 88
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S06_01_SE1_500X67.png
	num_instances: 54
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S04_02_SE1_1000X50.png
	num_instances: 45
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S03_03_SE1_1250X41.png
	num_instances: 111
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S02_01_SE1_300X14.png
	num_instances: 98
ddict info:
	path: ../SALAS_Rep/../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/HP743_2S_250x.png
	num_instances: 49
Weights not found, weights will be downloaded from source: https://dl.fbaipublicfiles.com/detectron2/COCO-InstanceSegmentation/mask_rcnn_R_50_FPN_3x/137849600/model_final_f10217.pkl
[32m[11/15 11:11:55 d2.engine.defaults]: [0mModel:
GeneralizedRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): StandardROIHeads(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): FastRCNNConvFCHead(
      (flatten): Flatten(start_dim=1, end_dim=-1)
      (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      (fc_relu1): ReLU()
      (fc2): Linear(in_features=1024, out_features=1024, bias=True)
      (fc_relu2): ReLU()
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=1024, out_features=2, bias=True)
      (bbox_pred): Linear(in_features=1024, out_features=4, bias=True)
    )
    (mask_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(14, 14), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(14, 14), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (mask_head): MaskRCNNConvUpsampleHead(
      (mask_fcn1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn2): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn3): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn4): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
      (deconv_relu): ReLU()
      (predictor): Conv2d(256, 1, kernel_size=(1, 1), stride=(1, 1))
    )
  )
)
[32m[11/15 11:11:55 d2.data.build]: [0mRemoved 0 images with no usable annotations. 20 images left.
[32m[11/15 11:11:55 d2.data.build]: [0mDistribution of instances among all 1 categories:
[36m|  category  | #instances   |
|:----------:|:-------------|
| satellite  | 1412         |
|            |              |[0m
[32m[11/15 11:11:55 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice')]
[32m[11/15 11:11:55 d2.data.build]: [0mUsing training sampler TrainingSampler
[32m[11/15 11:11:55 d2.data.common]: [0mSerializing 20 elements to byte tensors and concatenating them all ...
[32m[11/15 11:11:55 d2.data.common]: [0mSerialized dataset takes 0.46 MiB
[5m[31mWARNING[0m [32m[11/15 11:11:55 d2.solver.build]: [0mSOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[32m[11/15 11:11:56 d2.checkpoint.c2_model_loading]: [0mRenaming Caffe2 weights ......
[32m[11/15 11:11:56 d2.checkpoint.c2_model_loading]: [0mFollowing weights matched with submodule backbone.bottom_up:
| Names in Model    | Names in Checkpoint      | Shapes                                          |
|:------------------|:-------------------------|:------------------------------------------------|
| res2.0.conv1.*    | res2_0_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,1,1)             |
| res2.0.conv2.*    | res2_0_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.0.conv3.*    | res2_0_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.0.shortcut.* | res2_0_branch1_{bn_*,w}  | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.1.conv1.*    | res2_1_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,256,1,1)            |
| res2.1.conv2.*    | res2_1_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.1.conv3.*    | res2_1_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.2.conv1.*    | res2_2_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,256,1,1)            |
| res2.2.conv2.*    | res2_2_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.2.conv3.*    | res2_2_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res3.0.conv1.*    | res3_0_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,256,1,1)       |
| res3.0.conv2.*    | res3_0_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.0.conv3.*    | res3_0_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.0.shortcut.* | res3_0_branch1_{bn_*,w}  | (512,) (512,) (512,) (512,) (512,256,1,1)       |
| res3.1.conv1.*    | res3_1_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.1.conv2.*    | res3_1_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.1.conv3.*    | res3_1_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.2.conv1.*    | res3_2_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.2.conv2.*    | res3_2_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.2.conv3.*    | res3_2_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.3.conv1.*    | res3_3_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.3.conv2.*    | res3_3_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.3.conv3.*    | res3_3_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res4.0.conv1.*    | res4_0_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,512,1,1)       |
| res4.0.conv2.*    | res4_0_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.0.conv3.*    | res4_0_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.0.shortcut.* | res4_0_branch1_{bn_*,w}  | (1024,) (1024,) (1024,) (1024,) (1024,512,1,1)  |
| res4.1.conv1.*    | res4_1_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.1.conv2.*    | res4_1_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.1.conv3.*    | res4_1_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.2.conv1.*    | res4_2_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.2.conv2.*    | res4_2_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.2.conv3.*    | res4_2_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.3.conv1.*    | res4_3_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.3.conv2.*    | res4_3_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.3.conv3.*    | res4_3_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.4.conv1.*    | res4_4_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.4.conv2.*    | res4_4_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.4.conv3.*    | res4_4_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.5.conv1.*    | res4_5_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.5.conv2.*    | res4_5_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.5.conv3.*    | res4_5_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res5.0.conv1.*    | res5_0_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,1024,1,1)      |
| res5.0.conv2.*    | res5_0_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.0.conv3.*    | res5_0_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| res5.0.shortcut.* | res5_0_branch1_{bn_*,w}  | (2048,) (2048,) (2048,) (2048,) (2048,1024,1,1) |
| res5.1.conv1.*    | res5_1_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,2048,1,1)      |
| res5.1.conv2.*    | res5_1_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.1.conv3.*    | res5_1_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| res5.2.conv1.*    | res5_2_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,2048,1,1)      |
| res5.2.conv2.*    | res5_2_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.2.conv3.*    | res5_2_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| stem.conv1.norm.* | res_conv1_bn_*           | (64,) (64,) (64,) (64,)                         |
| stem.conv1.weight | conv1_w                  | (64, 3, 7, 7)                                   |
[32m[11/15 11:11:56 d2.engine.train_loop]: [0mStarting training from iteration 0
[32m[11/15 11:11:59 d2.utils.events]: [0m eta: 0:24:26  iter: 19  total_loss: 3.307  loss_cls: 0.5156  loss_box_reg: 0.02809  loss_mask: 0.6728  loss_rpn_cls: 0.6589  loss_rpn_loc: 1.292  time: 0.1484  data_time: 0.0211  lr: 0.00019981  max_mem: 1616M
[32m[11/15 11:12:02 d2.utils.events]: [0m eta: 0:24:43  iter: 39  total_loss: 2.367  loss_cls: 0.3504  loss_box_reg: 0.03986  loss_mask: 0.5958  loss_rpn_cls: 0.5985  loss_rpn_loc: 0.7603  time: 0.1497  data_time: 0.0016  lr: 0.00039961  max_mem: 1701M
[32m[11/15 11:12:05 d2.utils.events]: [0m eta: 0:24:41  iter: 59  total_loss: 2.163  loss_cls: 0.2656  loss_box_reg: 0.1024  loss_mask: 0.584  loss_rpn_cls: 0.5829  loss_rpn_loc: 0.6632  time: 0.1497  data_time: 0.0015  lr: 0.00059941  max_mem: 1701M
[32m[11/15 11:12:08 d2.utils.events]: [0m eta: 0:24:46  iter: 79  total_loss: 2.171  loss_cls: 0.2565  loss_box_reg: 0.1766  loss_mask: 0.5602  loss_rpn_cls: 0.5418  loss_rpn_loc: 0.5529  time: 0.1505  data_time: 0.0015  lr: 0.00079921  max_mem: 1777M
[32m[11/15 11:12:12 d2.utils.events]: [0m eta: 0:24:58  iter: 99  total_loss: 2.142  loss_cls: 0.2741  loss_box_reg: 0.3456  loss_mask: 0.5361  loss_rpn_cls: 0.4605  loss_rpn_loc: 0.5089  time: 0.1529  data_time: 0.0016  lr: 0.00099901  max_mem: 1777M
[32m[11/15 11:12:15 d2.utils.events]: [0m eta: 0:25:07  iter: 119  total_loss: 2.108  loss_cls: 0.2749  loss_box_reg: 0.417  loss_mask: 0.503  loss_rpn_cls: 0.3887  loss_rpn_loc: 0.5265  time: 0.1542  data_time: 0.0016  lr: 0.0011988  max_mem: 1777M
[32m[11/15 11:12:18 d2.utils.events]: [0m eta: 0:25:11  iter: 139  total_loss: 2.078  loss_cls: 0.3523  loss_box_reg: 0.4635  loss_mask: 0.4706  loss_rpn_cls: 0.3501  loss_rpn_loc: 0.4716  time: 0.1552  data_time: 0.0016  lr: 0.0013986  max_mem: 1777M
[32m[11/15 11:12:21 d2.utils.events]: [0m eta: 0:25:13  iter: 159  total_loss: 1.996  loss_cls: 0.295  loss_box_reg: 0.4925  loss_mask: 0.4396  loss_rpn_cls: 0.3492  loss_rpn_loc: 0.4826  time: 0.1563  data_time: 0.0016  lr: 0.0015984  max_mem: 1777M
[32m[11/15 11:12:25 d2.utils.events]: [0m eta: 0:25:14  iter: 179  total_loss: 1.894  loss_cls: 0.2756  loss_box_reg: 0.4708  loss_mask: 0.4084  loss_rpn_cls: 0.28  loss_rpn_loc: 0.4547  time: 0.1569  data_time: 0.0016  lr: 0.0017982  max_mem: 1777M
[32m[11/15 11:12:28 d2.utils.events]: [0m eta: 0:25:25  iter: 199  total_loss: 1.847  loss_cls: 0.2369  loss_box_reg: 0.4295  loss_mask: 0.3841  loss_rpn_cls: 0.2762  loss_rpn_loc: 0.4552  time: 0.1577  data_time: 0.0016  lr: 0.001998  max_mem: 1777M
[32m[11/15 11:12:31 d2.utils.events]: [0m eta: 0:25:24  iter: 219  total_loss: 1.835  loss_cls: 0.2798  loss_box_reg: 0.4578  loss_mask: 0.3632  loss_rpn_cls: 0.2743  loss_rpn_loc: 0.4844  time: 0.1582  data_time: 0.0016  lr: 0.0021978  max_mem: 1777M
[32m[11/15 11:12:35 d2.utils.events]: [0m eta: 0:25:31  iter: 239  total_loss: 1.73  loss_cls: 0.251  loss_box_reg: 0.463  loss_mask: 0.3397  loss_rpn_cls: 0.2687  loss_rpn_loc: 0.4223  time: 0.1590  data_time: 0.0017  lr: 0.0023976  max_mem: 1777M
[32m[11/15 11:12:38 d2.utils.events]: [0m eta: 0:25:31  iter: 259  total_loss: 1.739  loss_cls: 0.2633  loss_box_reg: 0.4853  loss_mask: 0.3314  loss_rpn_cls: 0.2187  loss_rpn_loc: 0.4048  time: 0.1598  data_time: 0.0016  lr: 0.0025974  max_mem: 1777M
[32m[11/15 11:12:41 d2.utils.events]: [0m eta: 0:25:34  iter: 279  total_loss: 1.644  loss_cls: 0.2211  loss_box_reg: 0.4887  loss_mask: 0.3126  loss_rpn_cls: 0.2029  loss_rpn_loc: 0.395  time: 0.1606  data_time: 0.0016  lr: 0.0027972  max_mem: 1826M
[32m[11/15 11:12:45 d2.utils.events]: [0m eta: 0:25:41  iter: 299  total_loss: 1.635  loss_cls: 0.2432  loss_box_reg: 0.5072  loss_mask: 0.3035  loss_rpn_cls: 0.2078  loss_rpn_loc: 0.4228  time: 0.1613  data_time: 0.0016  lr: 0.002997  max_mem: 1826M
[32m[11/15 11:12:48 d2.utils.events]: [0m eta: 0:25:45  iter: 319  total_loss: 1.556  loss_cls: 0.2171  loss_box_reg: 0.4257  loss_mask: 0.3051  loss_rpn_cls: 0.2091  loss_rpn_loc: 0.4202  time: 0.1614  data_time: 0.0015  lr: 0.0031968  max_mem: 1826M
[32m[11/15 11:12:52 d2.utils.events]: [0m eta: 0:25:52  iter: 339  total_loss: 1.615  loss_cls: 0.2284  loss_box_reg: 0.48  loss_mask: 0.3056  loss_rpn_cls: 0.2193  loss_rpn_loc: 0.4002  time: 0.1619  data_time: 0.0016  lr: 0.0033966  max_mem: 1826M
[32m[11/15 11:12:55 d2.utils.events]: [0m eta: 0:25:57  iter: 359  total_loss: 1.655  loss_cls: 0.2481  loss_box_reg: 0.4686  loss_mask: 0.2812  loss_rpn_cls: 0.2  loss_rpn_loc: 0.4027  time: 0.1623  data_time: 0.0016  lr: 0.0035964  max_mem: 1826M
[32m[11/15 11:12:58 d2.utils.events]: [0m eta: 0:25:59  iter: 379  total_loss: 1.582  loss_cls: 0.2507  loss_box_reg: 0.4925  loss_mask: 0.2815  loss_rpn_cls: 0.1922  loss_rpn_loc: 0.4294  time: 0.1626  data_time: 0.0016  lr: 0.0037962  max_mem: 1826M
[32m[11/15 11:13:02 d2.utils.events]: [0m eta: 0:26:08  iter: 399  total_loss: 1.595  loss_cls: 0.2052  loss_box_reg: 0.4655  loss_mask: 0.2862  loss_rpn_cls: 0.208  loss_rpn_loc: 0.4446  time: 0.1629  data_time: 0.0016  lr: 0.003996  max_mem: 1826M
[32m[11/15 11:13:05 d2.utils.events]: [0m eta: 0:26:07  iter: 419  total_loss: 1.468  loss_cls: 0.1988  loss_box_reg: 0.4162  loss_mask: 0.2767  loss_rpn_cls: 0.179  loss_rpn_loc: 0.3811  time: 0.1630  data_time: 0.0016  lr: 0.0041958  max_mem: 1826M
[32m[11/15 11:13:08 d2.utils.events]: [0m eta: 0:26:09  iter: 439  total_loss: 1.483  loss_cls: 0.1936  loss_box_reg: 0.458  loss_mask: 0.2604  loss_rpn_cls: 0.2093  loss_rpn_loc: 0.3846  time: 0.1631  data_time: 0.0014  lr: 0.0043956  max_mem: 1826M
[32m[11/15 11:13:12 d2.utils.events]: [0m eta: 0:26:06  iter: 459  total_loss: 1.506  loss_cls: 0.1994  loss_box_reg: 0.4323  loss_mask: 0.2569  loss_rpn_cls: 0.1696  loss_rpn_loc: 0.4097  time: 0.1632  data_time: 0.0016  lr: 0.0045954  max_mem: 1826M
[32m[11/15 11:13:15 d2.utils.events]: [0m eta: 0:26:09  iter: 479  total_loss: 1.617  loss_cls: 0.2394  loss_box_reg: 0.4336  loss_mask: 0.2626  loss_rpn_cls: 0.2196  loss_rpn_loc: 0.4141  time: 0.1633  data_time: 0.0017  lr: 0.0047952  max_mem: 1826M
[32m[11/15 11:13:18 d2.utils.events]: [0m eta: 0:26:11  iter: 499  total_loss: 1.528  loss_cls: 0.2011  loss_box_reg: 0.4571  loss_mask: 0.2577  loss_rpn_cls: 0.1925  loss_rpn_loc: 0.4003  time: 0.1635  data_time: 0.0014  lr: 0.004995  max_mem: 1826M
[32m[11/15 11:13:22 d2.utils.events]: [0m eta: 0:26:08  iter: 519  total_loss: 1.57  loss_cls: 0.2693  loss_box_reg: 0.4921  loss_mask: 0.2689  loss_rpn_cls: 0.1639  loss_rpn_loc: 0.3897  time: 0.1635  data_time: 0.0016  lr: 0.0051948  max_mem: 1826M
[32m[11/15 11:13:25 d2.utils.events]: [0m eta: 0:26:06  iter: 539  total_loss: 1.537  loss_cls: 0.2527  loss_box_reg: 0.5091  loss_mask: 0.2607  loss_rpn_cls: 0.1639  loss_rpn_loc: 0.379  time: 0.1637  data_time: 0.0016  lr: 0.0053946  max_mem: 1826M
[32m[11/15 11:13:29 d2.utils.events]: [0m eta: 0:26:05  iter: 559  total_loss: 1.469  loss_cls: 0.2023  loss_box_reg: 0.4706  loss_mask: 0.255  loss_rpn_cls: 0.1504  loss_rpn_loc: 0.4114  time: 0.1639  data_time: 0.0016  lr: 0.0055944  max_mem: 1826M
[32m[11/15 11:13:32 d2.utils.events]: [0m eta: 0:26:06  iter: 579  total_loss: 1.426  loss_cls: 0.194  loss_box_reg: 0.4325  loss_mask: 0.2545  loss_rpn_cls: 0.1822  loss_rpn_loc: 0.3952  time: 0.1641  data_time: 0.0015  lr: 0.0057942  max_mem: 1826M
[32m[11/15 11:13:35 d2.utils.events]: [0m eta: 0:26:04  iter: 599  total_loss: 1.409  loss_cls: 0.1702  loss_box_reg: 0.4129  loss_mask: 0.2553  loss_rpn_cls: 0.1829  loss_rpn_loc: 0.3868  time: 0.1643  data_time: 0.0018  lr: 0.005994  max_mem: 1826M
[32m[11/15 11:13:39 d2.utils.events]: [0m eta: 0:26:01  iter: 619  total_loss: 1.464  loss_cls: 0.2175  loss_box_reg: 0.4752  loss_mask: 0.2404  loss_rpn_cls: 0.2065  loss_rpn_loc: 0.3518  time: 0.1644  data_time: 0.0015  lr: 0.0061938  max_mem: 1826M
[32m[11/15 11:13:42 d2.utils.events]: [0m eta: 0:26:00  iter: 639  total_loss: 1.404  loss_cls: 0.1969  loss_box_reg: 0.4462  loss_mask: 0.2381  loss_rpn_cls: 0.1471  loss_rpn_loc: 0.3537  time: 0.1646  data_time: 0.0016  lr: 0.0063936  max_mem: 1826M
[32m[11/15 11:13:46 d2.utils.events]: [0m eta: 0:25:58  iter: 659  total_loss: 1.428  loss_cls: 0.1768  loss_box_reg: 0.4348  loss_mask: 0.2456  loss_rpn_cls: 0.1451  loss_rpn_loc: 0.3995  time: 0.1647  data_time: 0.0015  lr: 0.0065934  max_mem: 1826M
[32m[11/15 11:13:49 d2.utils.events]: [0m eta: 0:25:55  iter: 679  total_loss: 1.433  loss_cls: 0.1832  loss_box_reg: 0.4505  loss_mask: 0.2502  loss_rpn_cls: 0.1648  loss_rpn_loc: 0.3715  time: 0.1647  data_time: 0.0016  lr: 0.0067932  max_mem: 1826M
[32m[11/15 11:13:52 d2.utils.events]: [0m eta: 0:25:51  iter: 699  total_loss: 1.271  loss_cls: 0.1569  loss_box_reg: 0.3875  loss_mask: 0.24  loss_rpn_cls: 0.1293  loss_rpn_loc: 0.4138  time: 0.1647  data_time: 0.0016  lr: 0.006993  max_mem: 1826M
[32m[11/15 11:13:56 d2.utils.events]: [0m eta: 0:25:47  iter: 719  total_loss: 1.318  loss_cls: 0.1748  loss_box_reg: 0.3816  loss_mask: 0.2413  loss_rpn_cls: 0.1423  loss_rpn_loc: 0.3935  time: 0.1647  data_time: 0.0016  lr: 0.0071928  max_mem: 1826M
[32m[11/15 11:13:59 d2.utils.events]: [0m eta: 0:25:44  iter: 739  total_loss: 1.324  loss_cls: 0.1638  loss_box_reg: 0.3796  loss_mask: 0.2313  loss_rpn_cls: 0.1276  loss_rpn_loc: 0.392  time: 0.1648  data_time: 0.0016  lr: 0.0073926  max_mem: 1826M
[32m[11/15 11:14:02 d2.utils.events]: [0m eta: 0:25:42  iter: 759  total_loss: 1.388  loss_cls: 0.207  loss_box_reg: 0.4358  loss_mask: 0.2312  loss_rpn_cls: 0.1667  loss_rpn_loc: 0.3482  time: 0.1648  data_time: 0.0015  lr: 0.0075924  max_mem: 1826M
[32m[11/15 11:14:06 d2.utils.events]: [0m eta: 0:25:42  iter: 779  total_loss: 1.344  loss_cls: 0.1979  loss_box_reg: 0.4449  loss_mask: 0.2255  loss_rpn_cls: 0.1216  loss_rpn_loc: 0.3414  time: 0.1650  data_time: 0.0015  lr: 0.0077922  max_mem: 1826M
[32m[11/15 11:14:09 d2.utils.events]: [0m eta: 0:25:37  iter: 799  total_loss: 1.382  loss_cls: 0.19  loss_box_reg: 0.3981  loss_mask: 0.2287  loss_rpn_cls: 0.1587  loss_rpn_loc: 0.367  time: 0.1649  data_time: 0.0016  lr: 0.007992  max_mem: 1826M
[32m[11/15 11:14:12 d2.utils.events]: [0m eta: 0:25:34  iter: 819  total_loss: 1.368  loss_cls: 0.186  loss_box_reg: 0.3751  loss_mask: 0.2382  loss_rpn_cls: 0.1541  loss_rpn_loc: 0.4076  time: 0.1649  data_time: 0.0016  lr: 0.0081918  max_mem: 1826M
[32m[11/15 11:14:16 d2.utils.events]: [0m eta: 0:25:32  iter: 839  total_loss: 1.419  loss_cls: 0.1995  loss_box_reg: 0.421  loss_mask: 0.2319  loss_rpn_cls: 0.1392  loss_rpn_loc: 0.3918  time: 0.1649  data_time: 0.0016  lr: 0.0083916  max_mem: 1826M
[32m[11/15 11:14:19 d2.utils.events]: [0m eta: 0:25:29  iter: 859  total_loss: 1.288  loss_cls: 0.1673  loss_box_reg: 0.3843  loss_mask: 0.2314  loss_rpn_cls: 0.1732  loss_rpn_loc: 0.3768  time: 0.1650  data_time: 0.0016  lr: 0.0085914  max_mem: 1826M
[32m[11/15 11:14:22 d2.utils.events]: [0m eta: 0:25:26  iter: 879  total_loss: 1.388  loss_cls: 0.1785  loss_box_reg: 0.4225  loss_mask: 0.2141  loss_rpn_cls: 0.1885  loss_rpn_loc: 0.3601  time: 0.1650  data_time: 0.0016  lr: 0.0087912  max_mem: 1826M
[32m[11/15 11:14:26 d2.utils.events]: [0m eta: 0:25:25  iter: 899  total_loss: 1.326  loss_cls: 0.1799  loss_box_reg: 0.4238  loss_mask: 0.2169  loss_rpn_cls: 0.1541  loss_rpn_loc: 0.3832  time: 0.1651  data_time: 0.0014  lr: 0.008991  max_mem: 1826M
[32m[11/15 11:14:29 d2.utils.events]: [0m eta: 0:25:21  iter: 919  total_loss: 1.422  loss_cls: 0.1988  loss_box_reg: 0.4265  loss_mask: 0.2216  loss_rpn_cls: 0.1475  loss_rpn_loc: 0.4196  time: 0.1651  data_time: 0.0016  lr: 0.0091908  max_mem: 1826M
[32m[11/15 11:14:32 d2.utils.events]: [0m eta: 0:25:18  iter: 939  total_loss: 1.378  loss_cls: 0.1931  loss_box_reg: 0.3982  loss_mask: 0.2269  loss_rpn_cls: 0.1439  loss_rpn_loc: 0.3791  time: 0.1651  data_time: 0.0016  lr: 0.0093906  max_mem: 1826M
[32m[11/15 11:14:36 d2.utils.events]: [0m eta: 0:25:15  iter: 959  total_loss: 1.257  loss_cls: 0.188  loss_box_reg: 0.424  loss_mask: 0.2025  loss_rpn_cls: 0.1255  loss_rpn_loc: 0.3401  time: 0.1653  data_time: 0.0016  lr: 0.0095904  max_mem: 1826M
[32m[11/15 11:14:39 d2.utils.events]: [0m eta: 0:25:12  iter: 979  total_loss: 1.33  loss_cls: 0.1692  loss_box_reg: 0.4012  loss_mask: 0.2164  loss_rpn_cls: 0.157  loss_rpn_loc: 0.3827  time: 0.1653  data_time: 0.0015  lr: 0.0097902  max_mem: 1826M
[32m[11/15 11:14:43 d2.utils.events]: [0m eta: 0:25:09  iter: 999  total_loss: 1.349  loss_cls: 0.1676  loss_box_reg: 0.3929  loss_mask: 0.2172  loss_rpn_cls: 0.1632  loss_rpn_loc: 0.3585  time: 0.1652  data_time: 0.0016  lr: 0.00999  max_mem: 1826M
[32m[11/15 11:14:46 d2.utils.events]: [0m eta: 0:25:08  iter: 1019  total_loss: 1.285  loss_cls: 0.1928  loss_box_reg: 0.4053  loss_mask: 0.2057  loss_rpn_cls: 0.1326  loss_rpn_loc: 0.3368  time: 0.1652  data_time: 0.0016  lr: 0.01  max_mem: 1826M
[32m[11/15 11:14:49 d2.utils.events]: [0m eta: 0:25:10  iter: 1039  total_loss: 1.293  loss_cls: 0.1776  loss_box_reg: 0.3929  loss_mask: 0.2059  loss_rpn_cls: 0.1022  loss_rpn_loc: 0.3484  time: 0.1653  data_time: 0.0016  lr: 0.01  max_mem: 1826M
[32m[11/15 11:14:53 d2.utils.events]: [0m eta: 0:25:09  iter: 1059  total_loss: 1.266  loss_cls: 0.1649  loss_box_reg: 0.4004  loss_mask: 0.2116  loss_rpn_cls: 0.1506  loss_rpn_loc: 0.3433  time: 0.1653  data_time: 0.0016  lr: 0.01  max_mem: 1826M
[32m[11/15 11:14:56 d2.utils.events]: [0m eta: 0:25:07  iter: 1079  total_loss: 1.293  loss_cls: 0.1923  loss_box_reg: 0.4156  loss_mask: 0.2137  loss_rpn_cls: 0.1361  loss_rpn_loc: 0.3376  time: 0.1654  data_time: 0.0017  lr: 0.01  max_mem: 1826M
[32m[11/15 11:14:59 d2.utils.events]: [0m eta: 0:25:04  iter: 1099  total_loss: 1.322  loss_cls: 0.175  loss_box_reg: 0.4167  loss_mask: 0.2212  loss_rpn_cls: 0.1132  loss_rpn_loc: 0.3562  time: 0.1655  data_time: 0.0017  lr: 0.01  max_mem: 1826M
[32m[11/15 11:15:03 d2.utils.events]: [0m eta: 0:25:02  iter: 1119  total_loss: 1.202  loss_cls: 0.1576  loss_box_reg: 0.3817  loss_mask: 0.2051  loss_rpn_cls: 0.1128  loss_rpn_loc: 0.3533  time: 0.1655  data_time: 0.0016  lr: 0.01  max_mem: 1826M
[32m[11/15 11:15:06 d2.utils.events]: [0m eta: 0:24:59  iter: 1139  total_loss: 1.205  loss_cls: 0.1594  loss_box_reg: 0.3896  loss_mask: 0.2054  loss_rpn_cls: 0.1193  loss_rpn_loc: 0.3175  time: 0.1655  data_time: 0.0017  lr: 0.01  max_mem: 1826M
[32m[11/15 11:15:10 d2.utils.events]: [0m eta: 0:24:56  iter: 1159  total_loss: 1.234  loss_cls: 0.1667  loss_box_reg: 0.3858  loss_mask: 0.1951  loss_rpn_cls: 0.1337  loss_rpn_loc: 0.3647  time: 0.1656  data_time: 0.0016  lr: 0.01  max_mem: 1826M
[32m[11/15 11:15:13 d2.utils.events]: [0m eta: 0:24:54  iter: 1179  total_loss: 1.24  loss_cls: 0.169  loss_box_reg: 0.3731  loss_mask: 0.1901  loss_rpn_cls: 0.1086  loss_rpn_loc: 0.3843  time: 0.1657  data_time: 0.0016  lr: 0.01  max_mem: 1826M
[32m[11/15 11:15:16 d2.utils.events]: [0m eta: 0:24:51  iter: 1199  total_loss: 1.204  loss_cls: 0.1488  loss_box_reg: 0.3303  loss_mask: 0.1937  loss_rpn_cls: 0.1285  loss_rpn_loc: 0.3614  time: 0.1657  data_time: 0.0016  lr: 0.01  max_mem: 1826M
[32m[11/15 11:15:20 d2.utils.events]: [0m eta: 0:24:47  iter: 1219  total_loss: 1.279  loss_cls: 0.154  loss_box_reg: 0.4107  loss_mask: 0.2154  loss_rpn_cls: 0.1254  loss_rpn_loc: 0.3884  time: 0.1657  data_time: 0.0016  lr: 0.01  max_mem: 1826M
[32m[11/15 11:15:23 d2.utils.events]: [0m eta: 0:24:44  iter: 1239  total_loss: 1.278  loss_cls: 0.1698  loss_box_reg: 0.3928  loss_mask: 0.1939  loss_rpn_cls: 0.1619  loss_rpn_loc: 0.3663  time: 0.1657  data_time: 0.0015  lr: 0.01  max_mem: 1826M
[32m[11/15 11:15:26 d2.utils.events]: [0m eta: 0:24:41  iter: 1259  total_loss: 1.199  loss_cls: 0.1973  loss_box_reg: 0.3858  loss_mask: 0.1872  loss_rpn_cls: 0.1174  loss_rpn_loc: 0.3353  time: 0.1657  data_time: 0.0016  lr: 0.01  max_mem: 1826M
[32m[11/15 11:15:30 d2.utils.events]: [0m eta: 0:24:37  iter: 1279  total_loss: 1.242  loss_cls: 0.1952  loss_box_reg: 0.3971  loss_mask: 0.1953  loss_rpn_cls: 0.1086  loss_rpn_loc: 0.3345  time: 0.1658  data_time: 0.0016  lr: 0.01  max_mem: 1826M
[32m[11/15 11:15:33 d2.utils.events]: [0m eta: 0:24:34  iter: 1299  total_loss: 1.244  loss_cls: 0.1917  loss_box_reg: 0.4153  loss_mask: 0.1996  loss_rpn_cls: 0.1152  loss_rpn_loc: 0.3217  time: 0.1658  data_time: 0.0016  lr: 0.01  max_mem: 1826M
[32m[11/15 11:15:37 d2.utils.events]: [0m eta: 0:24:32  iter: 1319  total_loss: 1.179  loss_cls: 0.1722  loss_box_reg: 0.3799  loss_mask: 0.1965  loss_rpn_cls: 0.1088  loss_rpn_loc: 0.3131  time: 0.1659  data_time: 0.0016  lr: 0.01  max_mem: 1826M
[32m[11/15 11:15:40 d2.utils.events]: [0m eta: 0:24:28  iter: 1339  total_loss: 1.159  loss_cls: 0.1459  loss_box_reg: 0.3738  loss_mask: 0.1854  loss_rpn_cls: 0.1082  loss_rpn_loc: 0.3176  time: 0.1659  data_time: 0.0015  lr: 0.01  max_mem: 1826M
[32m[11/15 11:15:43 d2.utils.events]: [0m eta: 0:24:24  iter: 1359  total_loss: 1.153  loss_cls: 0.154  loss_box_reg: 0.3411  loss_mask: 0.1781  loss_rpn_cls: 0.1111  loss_rpn_loc: 0.3279  time: 0.1659  data_time: 0.0016  lr: 0.01  max_mem: 1826M
[32m[11/15 11:15:47 d2.utils.events]: [0m eta: 0:24:21  iter: 1379  total_loss: 1.27  loss_cls: 0.1753  loss_box_reg: 0.3921  loss_mask: 0.1908  loss_rpn_cls: 0.103  loss_rpn_loc: 0.3543  time: 0.1659  data_time: 0.0016  lr: 0.01  max_mem: 1826M
[32m[11/15 11:15:50 d2.utils.events]: [0m eta: 0:24:17  iter: 1399  total_loss: 1.169  loss_cls: 0.174  loss_box_reg: 0.3876  loss_mask: 0.1929  loss_rpn_cls: 0.08929  loss_rpn_loc: 0.3274  time: 0.1659  data_time: 0.0016  lr: 0.01  max_mem: 1826M
[32m[11/15 11:15:53 d2.utils.events]: [0m eta: 0:24:14  iter: 1419  total_loss: 1.199  loss_cls: 0.1835  loss_box_reg: 0.3615  loss_mask: 0.1854  loss_rpn_cls: 0.09853  loss_rpn_loc: 0.3396  time: 0.1659  data_time: 0.0016  lr: 0.01  max_mem: 1826M
[32m[11/15 11:15:57 d2.utils.events]: [0m eta: 0:24:11  iter: 1439  total_loss: 1.203  loss_cls: 0.1798  loss_box_reg: 0.3711  loss_mask: 0.1864  loss_rpn_cls: 0.1093  loss_rpn_loc: 0.3204  time: 0.1660  data_time: 0.0017  lr: 0.01  max_mem: 1826M
[32m[11/15 11:16:00 d2.utils.events]: [0m eta: 0:24:08  iter: 1459  total_loss: 1.099  loss_cls: 0.1448  loss_box_reg: 0.3572  loss_mask: 0.1705  loss_rpn_cls: 0.08362  loss_rpn_loc: 0.3004  time: 0.1661  data_time: 0.0016  lr: 0.01  max_mem: 1826M
[32m[11/15 11:16:03 d2.utils.events]: [0m eta: 0:24:05  iter: 1479  total_loss: 1.096  loss_cls: 0.1499  loss_box_reg: 0.3441  loss_mask: 0.1778  loss_rpn_cls: 0.1004  loss_rpn_loc: 0.3192  time: 0.1660  data_time: 0.0014  lr: 0.01  max_mem: 1826M
[32m[11/15 11:16:07 d2.utils.events]: [0m eta: 0:24:01  iter: 1499  total_loss: 1.101  loss_cls: 0.147  loss_box_reg: 0.3443  loss_mask: 0.1891  loss_rpn_cls: 0.0919  loss_rpn_loc: 0.3225  time: 0.1660  data_time: 0.0015  lr: 0.01  max_mem: 1826M
[32m[11/15 11:16:10 d2.utils.events]: [0m eta: 0:23:58  iter: 1519  total_loss: 1.087  loss_cls: 0.161  loss_box_reg: 0.3679  loss_mask: 0.1868  loss_rpn_cls: 0.08728  loss_rpn_loc: 0.2772  time: 0.1660  data_time: 0.0016  lr: 0.01  max_mem: 1826M
[32m[11/15 11:16:13 d2.utils.events]: [0m eta: 0:23:54  iter: 1539  total_loss: 1.113  loss_cls: 0.1592  loss_box_reg: 0.3596  loss_mask: 0.1761  loss_rpn_cls: 0.07535  loss_rpn_loc: 0.2928  time: 0.1660  data_time: 0.0017  lr: 0.01  max_mem: 1826M
[32m[11/15 11:16:17 d2.utils.events]: [0m eta: 0:23:51  iter: 1559  total_loss: 1.105  loss_cls: 0.1592  loss_box_reg: 0.3691  loss_mask: 0.1855  loss_rpn_cls: 0.1042  loss_rpn_loc: 0.3082  time: 0.1660  data_time: 0.0016  lr: 0.01  max_mem: 1826M
[32m[11/15 11:16:20 d2.utils.events]: [0m eta: 0:23:47  iter: 1579  total_loss: 1.039  loss_cls: 0.1377  loss_box_reg: 0.3525  loss_mask: 0.1841  loss_rpn_cls: 0.07819  loss_rpn_loc: 0.3098  time: 0.1661  data_time: 0.0015  lr: 0.01  max_mem: 1826M
[32m[11/15 11:16:24 d2.utils.events]: [0m eta: 0:23:43  iter: 1599  total_loss: 1.145  loss_cls: 0.1739  loss_box_reg: 0.3526  loss_mask: 0.2015  loss_rpn_cls: 0.1393  loss_rpn_loc: 0.3077  time: 0.1661  data_time: 0.0016  lr: 0.01  max_mem: 1826M
[32m[11/15 11:16:27 d2.utils.events]: [0m eta: 0:23:40  iter: 1619  total_loss: 1.13  loss_cls: 0.1449  loss_box_reg: 0.3569  loss_mask: 0.1896  loss_rpn_cls: 0.1321  loss_rpn_loc: 0.3131  time: 0.1662  data_time: 0.0016  lr: 0.01  max_mem: 1826M
[32m[11/15 11:16:30 d2.utils.events]: [0m eta: 0:23:35  iter: 1639  total_loss: 1.076  loss_cls: 0.1473  loss_box_reg: 0.3625  loss_mask: 0.1702  loss_rpn_cls: 0.08016  loss_rpn_loc: 0.3007  time: 0.1662  data_time: 0.0016  lr: 0.01  max_mem: 1826M
[32m[11/15 11:16:34 d2.utils.events]: [0m eta: 0:23:32  iter: 1659  total_loss: 1.045  loss_cls: 0.1591  loss_box_reg: 0.3469  loss_mask: 0.1707  loss_rpn_cls: 0.07298  loss_rpn_loc: 0.2782  time: 0.1663  data_time: 0.0016  lr: 0.01  max_mem: 1826M
[32m[11/15 11:16:37 d2.utils.events]: [0m eta: 0:23:28  iter: 1679  total_loss: 1.054  loss_cls: 0.1461  loss_box_reg: 0.3373  loss_mask: 0.1752  loss_rpn_cls: 0.09237  loss_rpn_loc: 0.2536  time: 0.1663  data_time: 0.0016  lr: 0.01  max_mem: 1826M
[32m[11/15 11:16:41 d2.utils.events]: [0m eta: 0:23:25  iter: 1699  total_loss: 0.9772  loss_cls: 0.1369  loss_box_reg: 0.3172  loss_mask: 0.1679  loss_rpn_cls: 0.08567  loss_rpn_loc: 0.2674  time: 0.1663  data_time: 0.0016  lr: 0.01  max_mem: 1826M
[32m[11/15 11:16:44 d2.utils.events]: [0m eta: 0:23:22  iter: 1719  total_loss: 1.005  loss_cls: 0.1306  loss_box_reg: 0.3368  loss_mask: 0.1744  loss_rpn_cls: 0.09025  loss_rpn_loc: 0.2852  time: 0.1663  data_time: 0.0015  lr: 0.01  max_mem: 1826M
[32m[11/15 11:16:47 d2.utils.events]: [0m eta: 0:23:19  iter: 1739  total_loss: 0.9923  loss_cls: 0.1362  loss_box_reg: 0.3413  loss_mask: 0.1736  loss_rpn_cls: 0.08105  loss_rpn_loc: 0.2605  time: 0.1663  data_time: 0.0016  lr: 0.01  max_mem: 1826M
[32m[11/15 11:16:51 d2.utils.events]: [0m eta: 0:23:16  iter: 1759  total_loss: 1.054  loss_cls: 0.1637  loss_box_reg: 0.3512  loss_mask: 0.1772  loss_rpn_cls: 0.07268  loss_rpn_loc: 0.2833  time: 0.1664  data_time: 0.0017  lr: 0.01  max_mem: 1826M
[32m[11/15 11:16:54 d2.utils.events]: [0m eta: 0:23:13  iter: 1779  total_loss: 1.014  loss_cls: 0.1539  loss_box_reg: 0.3405  loss_mask: 0.1672  loss_rpn_cls: 0.08063  loss_rpn_loc: 0.2754  time: 0.1664  data_time: 0.0016  lr: 0.01  max_mem: 1826M
[32m[11/15 11:16:58 d2.utils.events]: [0m eta: 0:23:10  iter: 1799  total_loss: 1.049  loss_cls: 0.1535  loss_box_reg: 0.3498  loss_mask: 0.1735  loss_rpn_cls: 0.0828  loss_rpn_loc: 0.2815  time: 0.1665  data_time: 0.0015  lr: 0.01  max_mem: 1826M
[32m[11/15 11:17:01 d2.utils.events]: [0m eta: 0:23:06  iter: 1819  total_loss: 1.051  loss_cls: 0.148  loss_box_reg: 0.348  loss_mask: 0.1692  loss_rpn_cls: 0.09023  loss_rpn_loc: 0.2874  time: 0.1665  data_time: 0.0016  lr: 0.01  max_mem: 1826M
[32m[11/15 11:17:04 d2.utils.events]: [0m eta: 0:23:03  iter: 1839  total_loss: 1.002  loss_cls: 0.1392  loss_box_reg: 0.3259  loss_mask: 0.1584  loss_rpn_cls: 0.08765  loss_rpn_loc: 0.2668  time: 0.1665  data_time: 0.0016  lr: 0.01  max_mem: 1826M
[32m[11/15 11:17:08 d2.utils.events]: [0m eta: 0:23:00  iter: 1859  total_loss: 1.021  loss_cls: 0.1637  loss_box_reg: 0.336  loss_mask: 0.1684  loss_rpn_cls: 0.04921  loss_rpn_loc: 0.2837  time: 0.1665  data_time: 0.0016  lr: 0.01  max_mem: 1826M
[32m[11/15 11:17:11 d2.utils.events]: [0m eta: 0:22:57  iter: 1879  total_loss: 0.9889  loss_cls: 0.1138  loss_box_reg: 0.3271  loss_mask: 0.1641  loss_rpn_cls: 0.06047  loss_rpn_loc: 0.296  time: 0.1665  data_time: 0.0016  lr: 0.01  max_mem: 1826M
[32m[11/15 11:17:15 d2.utils.events]: [0m eta: 0:22:53  iter: 1899  total_loss: 0.9835  loss_cls: 0.1405  loss_box_reg: 0.3235  loss_mask: 0.1717  loss_rpn_cls: 0.08859  loss_rpn_loc: 0.2677  time: 0.1665  data_time: 0.0015  lr: 0.01  max_mem: 1826M
[32m[11/15 11:17:18 d2.utils.events]: [0m eta: 0:22:50  iter: 1919  total_loss: 1.046  loss_cls: 0.1362  loss_box_reg: 0.343  loss_mask: 0.1679  loss_rpn_cls: 0.0482  loss_rpn_loc: 0.2865  time: 0.1666  data_time: 0.0016  lr: 0.01  max_mem: 1826M
[32m[11/15 11:17:21 d2.utils.events]: [0m eta: 0:22:47  iter: 1939  total_loss: 0.9799  loss_cls: 0.14  loss_box_reg: 0.3299  loss_mask: 0.1603  loss_rpn_cls: 0.06973  loss_rpn_loc: 0.2783  time: 0.1666  data_time: 0.0016  lr: 0.01  max_mem: 1826M
[32m[11/15 11:17:25 d2.utils.events]: [0m eta: 0:22:43  iter: 1959  total_loss: 0.9931  loss_cls: 0.1459  loss_box_reg: 0.3293  loss_mask: 0.162  loss_rpn_cls: 0.07923  loss_rpn_loc: 0.2732  time: 0.1666  data_time: 0.0016  lr: 0.01  max_mem: 1826M
[32m[11/15 11:17:28 d2.utils.events]: [0m eta: 0:22:40  iter: 1979  total_loss: 0.9967  loss_cls: 0.1447  loss_box_reg: 0.3378  loss_mask: 0.1688  loss_rpn_cls: 0.07189  loss_rpn_loc: 0.2533  time: 0.1667  data_time: 0.0016  lr: 0.01  max_mem: 1826M
[32m[11/15 11:17:32 d2.utils.events]: [0m eta: 0:22:38  iter: 1999  total_loss: 0.9299  loss_cls: 0.129  loss_box_reg: 0.307  loss_mask: 0.1524  loss_rpn_cls: 0.08427  loss_rpn_loc: 0.2483  time: 0.1667  data_time: 0.0016  lr: 0.01  max_mem: 1826M
[32m[11/15 11:17:35 d2.utils.events]: [0m eta: 0:22:35  iter: 2019  total_loss: 0.9255  loss_cls: 0.1264  loss_box_reg: 0.3132  loss_mask: 0.1657  loss_rpn_cls: 0.05853  loss_rpn_loc: 0.2609  time: 0.1667  data_time: 0.0017  lr: 0.01  max_mem: 1826M
[32m[11/15 11:17:38 d2.utils.events]: [0m eta: 0:22:31  iter: 2039  total_loss: 1.023  loss_cls: 0.131  loss_box_reg: 0.3069  loss_mask: 0.1625  loss_rpn_cls: 0.1335  loss_rpn_loc: 0.3012  time: 0.1667  data_time: 0.0015  lr: 0.01  max_mem: 1826M
[32m[11/15 11:17:42 d2.utils.events]: [0m eta: 0:22:28  iter: 2059  total_loss: 0.9626  loss_cls: 0.1474  loss_box_reg: 0.3087  loss_mask: 0.1601  loss_rpn_cls: 0.0683  loss_rpn_loc: 0.2849  time: 0.1667  data_time: 0.0016  lr: 0.01  max_mem: 1826M
[32m[11/15 11:17:45 d2.utils.events]: [0m eta: 0:22:25  iter: 2079  total_loss: 0.9936  loss_cls: 0.1449  loss_box_reg: 0.3261  loss_mask: 0.1649  loss_rpn_cls: 0.06651  loss_rpn_loc: 0.2651  time: 0.1668  data_time: 0.0017  lr: 0.01  max_mem: 1826M
[32m[11/15 11:17:48 d2.utils.events]: [0m eta: 0:22:21  iter: 2099  total_loss: 0.9751  loss_cls: 0.1257  loss_box_reg: 0.3153  loss_mask: 0.16  loss_rpn_cls: 0.08491  loss_rpn_loc: 0.2576  time: 0.1668  data_time: 0.0015  lr: 0.01  max_mem: 1826M
[32m[11/15 11:17:52 d2.utils.events]: [0m eta: 0:22:17  iter: 2119  total_loss: 0.9351  loss_cls: 0.1282  loss_box_reg: 0.3086  loss_mask: 0.1507  loss_rpn_cls: 0.06867  loss_rpn_loc: 0.2471  time: 0.1667  data_time: 0.0017  lr: 0.01  max_mem: 1826M
[32m[11/15 11:17:55 d2.utils.events]: [0m eta: 0:22:14  iter: 2139  total_loss: 0.9599  loss_cls: 0.1297  loss_box_reg: 0.3174  loss_mask: 0.1502  loss_rpn_cls: 0.08483  loss_rpn_loc: 0.2489  time: 0.1668  data_time: 0.0016  lr: 0.01  max_mem: 1826M
[32m[11/15 11:17:59 d2.utils.events]: [0m eta: 0:22:11  iter: 2159  total_loss: 1.04  loss_cls: 0.149  loss_box_reg: 0.3455  loss_mask: 0.1852  loss_rpn_cls: 0.07848  loss_rpn_loc: 0.2608  time: 0.1668  data_time: 0.0016  lr: 0.01  max_mem: 1826M
[32m[11/15 11:18:02 d2.utils.events]: [0m eta: 0:22:08  iter: 2179  total_loss: 0.8983  loss_cls: 0.1239  loss_box_reg: 0.3049  loss_mask: 0.1515  loss_rpn_cls: 0.05318  loss_rpn_loc: 0.2501  time: 0.1669  data_time: 0.0016  lr: 0.01  max_mem: 1826M
[32m[11/15 11:18:05 d2.utils.events]: [0m eta: 0:22:04  iter: 2199  total_loss: 0.9941  loss_cls: 0.1143  loss_box_reg: 0.3267  loss_mask: 0.1613  loss_rpn_cls: 0.09504  loss_rpn_loc: 0.2673  time: 0.1668  data_time: 0.0016  lr: 0.01  max_mem: 1826M
[32m[11/15 11:18:09 d2.utils.events]: [0m eta: 0:22:01  iter: 2219  total_loss: 0.8933  loss_cls: 0.1286  loss_box_reg: 0.3034  loss_mask: 0.147  loss_rpn_cls: 0.06327  loss_rpn_loc: 0.2605  time: 0.1668  data_time: 0.0016  lr: 0.01  max_mem: 1826M
[32m[11/15 11:18:12 d2.utils.events]: [0m eta: 0:21:57  iter: 2239  total_loss: 0.9158  loss_cls: 0.1255  loss_box_reg: 0.2908  loss_mask: 0.1492  loss_rpn_cls: 0.07427  loss_rpn_loc: 0.2571  time: 0.1668  data_time: 0.0016  lr: 0.01  max_mem: 1826M
[32m[11/15 11:18:15 d2.utils.events]: [0m eta: 0:21:53  iter: 2259  total_loss: 0.9022  loss_cls: 0.1267  loss_box_reg: 0.3093  loss_mask: 0.149  loss_rpn_cls: 0.06538  loss_rpn_loc: 0.2557  time: 0.1668  data_time: 0.0016  lr: 0.01  max_mem: 1826M
[32m[11/15 11:18:19 d2.utils.events]: [0m eta: 0:21:49  iter: 2279  total_loss: 0.931  loss_cls: 0.1184  loss_box_reg: 0.3016  loss_mask: 0.16  loss_rpn_cls: 0.08853  loss_rpn_loc: 0.2602  time: 0.1668  data_time: 0.0016  lr: 0.01  max_mem: 1826M
[32m[11/15 11:18:22 d2.utils.events]: [0m eta: 0:21:46  iter: 2299  total_loss: 0.9723  loss_cls: 0.1302  loss_box_reg: 0.3083  loss_mask: 0.163  loss_rpn_cls: 0.08466  loss_rpn_loc: 0.2661  time: 0.1668  data_time: 0.0016  lr: 0.01  max_mem: 1826M
[32m[11/15 11:18:25 d2.utils.events]: [0m eta: 0:21:42  iter: 2319  total_loss: 0.965  loss_cls: 0.1284  loss_box_reg: 0.313  loss_mask: 0.1538  loss_rpn_cls: 0.07217  loss_rpn_loc: 0.2484  time: 0.1668  data_time: 0.0016  lr: 0.01  max_mem: 1826M
[32m[11/15 11:18:29 d2.utils.events]: [0m eta: 0:21:39  iter: 2339  total_loss: 0.8989  loss_cls: 0.1286  loss_box_reg: 0.3178  loss_mask: 0.159  loss_rpn_cls: 0.07483  loss_rpn_loc: 0.2546  time: 0.1668  data_time: 0.0015  lr: 0.01  max_mem: 1826M
[32m[11/15 11:18:32 d2.utils.events]: [0m eta: 0:21:36  iter: 2359  total_loss: 0.866  loss_cls: 0.1029  loss_box_reg: 0.2988  loss_mask: 0.1539  loss_rpn_cls: 0.06323  loss_rpn_loc: 0.2498  time: 0.1669  data_time: 0.0016  lr: 0.01  max_mem: 1826M
[32m[11/15 11:18:36 d2.utils.events]: [0m eta: 0:21:33  iter: 2379  total_loss: 0.8974  loss_cls: 0.1101  loss_box_reg: 0.2877  loss_mask: 0.1509  loss_rpn_cls: 0.06048  loss_rpn_loc: 0.2568  time: 0.1669  data_time: 0.0015  lr: 0.01  max_mem: 1826M
[32m[11/15 11:18:39 d2.utils.events]: [0m eta: 0:21:29  iter: 2399  total_loss: 0.9113  loss_cls: 0.1181  loss_box_reg: 0.2901  loss_mask: 0.149  loss_rpn_cls: 0.0722  loss_rpn_loc: 0.267  time: 0.1669  data_time: 0.0016  lr: 0.01  max_mem: 1826M
[32m[11/15 11:18:43 d2.utils.events]: [0m eta: 0:21:25  iter: 2419  total_loss: 0.9154  loss_cls: 0.1282  loss_box_reg: 0.3049  loss_mask: 0.1529  loss_rpn_cls: 0.07916  loss_rpn_loc: 0.2519  time: 0.1669  data_time: 0.0015  lr: 0.01  max_mem: 1826M
[32m[11/15 11:18:46 d2.utils.events]: [0m eta: 0:21:22  iter: 2439  total_loss: 0.9  loss_cls: 0.1224  loss_box_reg: 0.2908  loss_mask: 0.1515  loss_rpn_cls: 0.08585  loss_rpn_loc: 0.2687  time: 0.1669  data_time: 0.0016  lr: 0.01  max_mem: 1826M
[32m[11/15 11:18:49 d2.utils.events]: [0m eta: 0:21:17  iter: 2459  total_loss: 0.8895  loss_cls: 0.1213  loss_box_reg: 0.3115  loss_mask: 0.1501  loss_rpn_cls: 0.04973  loss_rpn_loc: 0.268  time: 0.1668  data_time: 0.0016  lr: 0.01  max_mem: 1826M
[32m[11/15 11:18:53 d2.utils.events]: [0m eta: 0:21:14  iter: 2479  total_loss: 0.8651  loss_cls: 0.1235  loss_box_reg: 0.3008  loss_mask: 0.147  loss_rpn_cls: 0.05938  loss_rpn_loc: 0.2365  time: 0.1669  data_time: 0.0017  lr: 0.01  max_mem: 1826M
[32m[11/15 11:18:56 d2.utils.events]: [0m eta: 0:21:11  iter: 2499  total_loss: 0.8634  loss_cls: 0.116  loss_box_reg: 0.2825  loss_mask: 0.1505  loss_rpn_cls: 0.07026  loss_rpn_loc: 0.2296  time: 0.1669  data_time: 0.0016  lr: 0.01  max_mem: 1826M
[32m[11/15 11:18:59 d2.utils.events]: [0m eta: 0:21:08  iter: 2519  total_loss: 0.8964  loss_cls: 0.11  loss_box_reg: 0.2824  loss_mask: 0.1505  loss_rpn_cls: 0.06745  loss_rpn_loc: 0.258  time: 0.1669  data_time: 0.0017  lr: 0.01  max_mem: 1826M
[32m[11/15 11:19:03 d2.utils.events]: [0m eta: 0:21:05  iter: 2539  total_loss: 0.8654  loss_cls: 0.1176  loss_box_reg: 0.2806  loss_mask: 0.1394  loss_rpn_cls: 0.08891  loss_rpn_loc: 0.2352  time: 0.1669  data_time: 0.0013  lr: 0.01  max_mem: 1826M
[32m[11/15 11:19:06 d2.utils.events]: [0m eta: 0:21:01  iter: 2559  total_loss: 0.9002  loss_cls: 0.121  loss_box_reg: 0.2944  loss_mask: 0.1473  loss_rpn_cls: 0.07992  loss_rpn_loc: 0.2575  time: 0.1669  data_time: 0.0016  lr: 0.01  max_mem: 1826M
[32m[11/15 11:19:09 d2.utils.events]: [0m eta: 0:20:57  iter: 2579  total_loss: 0.8996  loss_cls: 0.1139  loss_box_reg: 0.2944  loss_mask: 0.1483  loss_rpn_cls: 0.06658  loss_rpn_loc: 0.2461  time: 0.1669  data_time: 0.0016  lr: 0.01  max_mem: 1826M
[32m[11/15 11:19:13 d2.utils.events]: [0m eta: 0:20:54  iter: 2599  total_loss: 0.8636  loss_cls: 0.1128  loss_box_reg: 0.279  loss_mask: 0.1479  loss_rpn_cls: 0.05237  loss_rpn_loc: 0.2345  time: 0.1669  data_time: 0.0016  lr: 0.01  max_mem: 1826M
[32m[11/15 11:19:16 d2.utils.events]: [0m eta: 0:20:51  iter: 2619  total_loss: 0.832  loss_cls: 0.1109  loss_box_reg: 0.2789  loss_mask: 0.1392  loss_rpn_cls: 0.05953  loss_rpn_loc: 0.2218  time: 0.1669  data_time: 0.0016  lr: 0.01  max_mem: 1826M
[32m[11/15 11:19:20 d2.utils.events]: [0m eta: 0:20:47  iter: 2639  total_loss: 0.8701  loss_cls: 0.123  loss_box_reg: 0.3043  loss_mask: 0.1418  loss_rpn_cls: 0.04688  loss_rpn_loc: 0.2311  time: 0.1669  data_time: 0.0015  lr: 0.01  max_mem: 1826M
[32m[11/15 11:19:23 d2.utils.events]: [0m eta: 0:20:44  iter: 2659  total_loss: 0.8082  loss_cls: 0.1098  loss_box_reg: 0.2786  loss_mask: 0.142  loss_rpn_cls: 0.04835  loss_rpn_loc: 0.228  time: 0.1670  data_time: 0.0015  lr: 0.01  max_mem: 1826M
[32m[11/15 11:19:26 d2.utils.events]: [0m eta: 0:20:41  iter: 2679  total_loss: 0.8284  loss_cls: 0.1062  loss_box_reg: 0.273  loss_mask: 0.14  loss_rpn_cls: 0.06832  loss_rpn_loc: 0.2378  time: 0.1670  data_time: 0.0016  lr: 0.01  max_mem: 1826M
[32m[11/15 11:19:30 d2.utils.events]: [0m eta: 0:20:37  iter: 2699  total_loss: 0.8383  loss_cls: 0.1175  loss_box_reg: 0.2814  loss_mask: 0.1462  loss_rpn_cls: 0.05585  loss_rpn_loc: 0.2285  time: 0.1670  data_time: 0.0016  lr: 0.01  max_mem: 1826M
[32m[11/15 11:19:33 d2.utils.events]: [0m eta: 0:20:33  iter: 2719  total_loss: 0.8387  loss_cls: 0.1059  loss_box_reg: 0.2805  loss_mask: 0.1482  loss_rpn_cls: 0.06298  loss_rpn_loc: 0.2353  time: 0.1670  data_time: 0.0016  lr: 0.01  max_mem: 1826M
[32m[11/15 11:19:36 d2.utils.events]: [0m eta: 0:20:30  iter: 2739  total_loss: 0.8387  loss_cls: 0.1083  loss_box_reg: 0.2603  loss_mask: 0.1426  loss_rpn_cls: 0.05203  loss_rpn_loc: 0.2379  time: 0.1670  data_time: 0.0016  lr: 0.01  max_mem: 1826M
[32m[11/15 11:19:40 d2.utils.events]: [0m eta: 0:20:26  iter: 2759  total_loss: 0.8611  loss_cls: 0.109  loss_box_reg: 0.2673  loss_mask: 0.1489  loss_rpn_cls: 0.05521  loss_rpn_loc: 0.2354  time: 0.1670  data_time: 0.0016  lr: 0.01  max_mem: 1826M
[32m[11/15 11:19:43 d2.utils.events]: [0m eta: 0:20:23  iter: 2779  total_loss: 0.8305  loss_cls: 0.1077  loss_box_reg: 0.2683  loss_mask: 0.1396  loss_rpn_cls: 0.04788  loss_rpn_loc: 0.2409  time: 0.1670  data_time: 0.0016  lr: 0.01  max_mem: 1826M
[32m[11/15 11:19:47 d2.utils.events]: [0m eta: 0:20:19  iter: 2799  total_loss: 0.8582  loss_cls: 0.1195  loss_box_reg: 0.3012  loss_mask: 0.1449  loss_rpn_cls: 0.06798  loss_rpn_loc: 0.2275  time: 0.1670  data_time: 0.0016  lr: 0.01  max_mem: 1826M
[32m[11/15 11:19:50 d2.utils.events]: [0m eta: 0:20:16  iter: 2819  total_loss: 0.8598  loss_cls: 0.1077  loss_box_reg: 0.2854  loss_mask: 0.1523  loss_rpn_cls: 0.05501  loss_rpn_loc: 0.234  time: 0.1670  data_time: 0.0017  lr: 0.01  max_mem: 1826M
[32m[11/15 11:19:53 d2.utils.events]: [0m eta: 0:20:13  iter: 2839  total_loss: 0.8094  loss_cls: 0.1071  loss_box_reg: 0.2806  loss_mask: 0.1461  loss_rpn_cls: 0.05175  loss_rpn_loc: 0.226  time: 0.1671  data_time: 0.0013  lr: 0.01  max_mem: 1826M
[32m[11/15 11:19:57 d2.utils.events]: [0m eta: 0:20:09  iter: 2859  total_loss: 0.8266  loss_cls: 0.1095  loss_box_reg: 0.2794  loss_mask: 0.1474  loss_rpn_cls: 0.05976  loss_rpn_loc: 0.2409  time: 0.1671  data_time: 0.0015  lr: 0.01  max_mem: 1826M
[32m[11/15 11:20:00 d2.utils.events]: [0m eta: 0:20:06  iter: 2879  total_loss: 0.8293  loss_cls: 0.1124  loss_box_reg: 0.2701  loss_mask: 0.1426  loss_rpn_cls: 0.05816  loss_rpn_loc: 0.2402  time: 0.1671  data_time: 0.0017  lr: 0.01  max_mem: 1826M
[32m[11/15 11:20:04 d2.utils.events]: [0m eta: 0:20:02  iter: 2899  total_loss: 0.8211  loss_cls: 0.1091  loss_box_reg: 0.272  loss_mask: 0.1358  loss_rpn_cls: 0.05243  loss_rpn_loc: 0.2394  time: 0.1671  data_time: 0.0015  lr: 0.01  max_mem: 1826M
[32m[11/15 11:20:07 d2.utils.events]: [0m eta: 0:19:59  iter: 2919  total_loss: 0.7968  loss_cls: 0.104  loss_box_reg: 0.2581  loss_mask: 0.1375  loss_rpn_cls: 0.0626  loss_rpn_loc: 0.2289  time: 0.1671  data_time: 0.0016  lr: 0.01  max_mem: 1826M
[32m[11/15 11:20:10 d2.utils.events]: [0m eta: 0:19:56  iter: 2939  total_loss: 0.7998  loss_cls: 0.1045  loss_box_reg: 0.2637  loss_mask: 0.1404  loss_rpn_cls: 0.05181  loss_rpn_loc: 0.2117  time: 0.1671  data_time: 0.0015  lr: 0.01  max_mem: 1826M
[32m[11/15 11:20:14 d2.utils.events]: [0m eta: 0:19:53  iter: 2959  total_loss: 0.7845  loss_cls: 0.1025  loss_box_reg: 0.2406  loss_mask: 0.136  loss_rpn_cls: 0.04982  loss_rpn_loc: 0.2186  time: 0.1672  data_time: 0.0016  lr: 0.01  max_mem: 1826M
[32m[11/15 11:20:17 d2.utils.events]: [0m eta: 0:19:49  iter: 2979  total_loss: 0.7969  loss_cls: 0.1024  loss_box_reg: 0.2799  loss_mask: 0.1403  loss_rpn_cls: 0.03549  loss_rpn_loc: 0.2253  time: 0.1672  data_time: 0.0016  lr: 0.01  max_mem: 1826M
[32m[11/15 11:20:20 d2.utils.events]: [0m eta: 0:19:45  iter: 2999  total_loss: 0.8227  loss_cls: 0.1043  loss_box_reg: 0.2778  loss_mask: 0.1394  loss_rpn_cls: 0.06011  loss_rpn_loc: 0.2244  time: 0.1671  data_time: 0.0016  lr: 0.01  max_mem: 1826M
[32m[11/15 11:20:24 d2.utils.events]: [0m eta: 0:19:41  iter: 3019  total_loss: 0.8382  loss_cls: 0.1074  loss_box_reg: 0.2906  loss_mask: 0.1469  loss_rpn_cls: 0.06615  loss_rpn_loc: 0.231  time: 0.1671  data_time: 0.0016  lr: 0.01  max_mem: 1826M
[32m[11/15 11:20:27 d2.utils.events]: [0m eta: 0:19:38  iter: 3039  total_loss: 0.8365  loss_cls: 0.1168  loss_box_reg: 0.2772  loss_mask: 0.1374  loss_rpn_cls: 0.04783  loss_rpn_loc: 0.2224  time: 0.1672  data_time: 0.0015  lr: 0.01  max_mem: 1826M
[32m[11/15 11:20:31 d2.utils.events]: [0m eta: 0:19:34  iter: 3059  total_loss: 0.8489  loss_cls: 0.1312  loss_box_reg: 0.2761  loss_mask: 0.1309  loss_rpn_cls: 0.06147  loss_rpn_loc: 0.252  time: 0.1671  data_time: 0.0015  lr: 0.01  max_mem: 1826M
[32m[11/15 11:20:34 d2.utils.events]: [0m eta: 0:19:31  iter: 3079  total_loss: 0.8023  loss_cls: 0.1119  loss_box_reg: 0.2694  loss_mask: 0.1435  loss_rpn_cls: 0.05331  loss_rpn_loc: 0.2342  time: 0.1672  data_time: 0.0015  lr: 0.01  max_mem: 1826M
[32m[11/15 11:20:37 d2.utils.events]: [0m eta: 0:19:28  iter: 3099  total_loss: 0.7592  loss_cls: 0.1037  loss_box_reg: 0.2623  loss_mask: 0.1345  loss_rpn_cls: 0.04431  loss_rpn_loc: 0.2136  time: 0.1672  data_time: 0.0016  lr: 0.01  max_mem: 1826M
[32m[11/15 11:20:41 d2.utils.events]: [0m eta: 0:19:25  iter: 3119  total_loss: 0.8136  loss_cls: 0.1056  loss_box_reg: 0.2604  loss_mask: 0.1332  loss_rpn_cls: 0.0752  loss_rpn_loc: 0.2337  time: 0.1672  data_time: 0.0016  lr: 0.01  max_mem: 1826M
[32m[11/15 11:20:44 d2.utils.events]: [0m eta: 0:19:21  iter: 3139  total_loss: 0.7651  loss_cls: 0.09552  loss_box_reg: 0.2619  loss_mask: 0.1338  loss_rpn_cls: 0.05531  loss_rpn_loc: 0.2233  time: 0.1672  data_time: 0.0015  lr: 0.01  max_mem: 1826M
[32m[11/15 11:20:48 d2.utils.events]: [0m eta: 0:19:17  iter: 3159  total_loss: 0.8282  loss_cls: 0.09886  loss_box_reg: 0.2571  loss_mask: 0.1386  loss_rpn_cls: 0.05266  loss_rpn_loc: 0.2286  time: 0.1672  data_time: 0.0015  lr: 0.01  max_mem: 1826M
[32m[11/15 11:20:51 d2.utils.events]: [0m eta: 0:19:14  iter: 3179  total_loss: 0.7962  loss_cls: 0.1098  loss_box_reg: 0.2702  loss_mask: 0.1322  loss_rpn_cls: 0.06916  loss_rpn_loc: 0.219  time: 0.1673  data_time: 0.0016  lr: 0.01  max_mem: 1826M
[32m[11/15 11:20:55 d2.utils.events]: [0m eta: 0:19:11  iter: 3199  total_loss: 0.7435  loss_cls: 0.09123  loss_box_reg: 0.2427  loss_mask: 0.1396  loss_rpn_cls: 0.0508  loss_rpn_loc: 0.2142  time: 0.1673  data_time: 0.0015  lr: 0.01  max_mem: 1826M
[32m[11/15 11:20:58 d2.utils.events]: [0m eta: 0:19:08  iter: 3219  total_loss: 0.7829  loss_cls: 0.09785  loss_box_reg: 0.2572  loss_mask: 0.1362  loss_rpn_cls: 0.05037  loss_rpn_loc: 0.2163  time: 0.1673  data_time: 0.0017  lr: 0.01  max_mem: 1826M
[32m[11/15 11:21:01 d2.utils.events]: [0m eta: 0:19:05  iter: 3239  total_loss: 0.7552  loss_cls: 0.1012  loss_box_reg: 0.2533  loss_mask: 0.135  loss_rpn_cls: 0.05539  loss_rpn_loc: 0.2142  time: 0.1673  data_time: 0.0016  lr: 0.01  max_mem: 1826M
[32m[11/15 11:21:05 d2.utils.events]: [0m eta: 0:19:02  iter: 3259  total_loss: 0.7543  loss_cls: 0.08306  loss_box_reg: 0.2443  loss_mask: 0.1271  loss_rpn_cls: 0.04364  loss_rpn_loc: 0.216  time: 0.1673  data_time: 0.0016  lr: 0.01  max_mem: 1826M
[32m[11/15 11:21:08 d2.utils.events]: [0m eta: 0:18:59  iter: 3279  total_loss: 0.7356  loss_cls: 0.08569  loss_box_reg: 0.2308  loss_mask: 0.1382  loss_rpn_cls: 0.05992  loss_rpn_loc: 0.2119  time: 0.1673  data_time: 0.0016  lr: 0.01  max_mem: 1826M
[32m[11/15 11:21:11 d2.utils.events]: [0m eta: 0:18:55  iter: 3299  total_loss: 0.7543  loss_cls: 0.1048  loss_box_reg: 0.254  loss_mask: 0.1263  loss_rpn_cls: 0.05899  loss_rpn_loc: 0.2147  time: 0.1673  data_time: 0.0016  lr: 0.01  max_mem: 1826M
[32m[11/15 11:21:15 d2.utils.events]: [0m eta: 0:18:52  iter: 3319  total_loss: 0.7077  loss_cls: 0.0962  loss_box_reg: 0.245  loss_mask: 0.1307  loss_rpn_cls: 0.04929  loss_rpn_loc: 0.2045  time: 0.1673  data_time: 0.0017  lr: 0.01  max_mem: 1826M
[32m[11/15 11:21:18 d2.utils.events]: [0m eta: 0:18:48  iter: 3339  total_loss: 0.7145  loss_cls: 0.09869  loss_box_reg: 0.258  loss_mask: 0.1231  loss_rpn_cls: 0.05886  loss_rpn_loc: 0.2233  time: 0.1673  data_time: 0.0017  lr: 0.01  max_mem: 1826M
[32m[11/15 11:21:21 d2.utils.events]: [0m eta: 0:18:44  iter: 3359  total_loss: 0.7846  loss_cls: 0.1041  loss_box_reg: 0.257  loss_mask: 0.1331  loss_rpn_cls: 0.05173  loss_rpn_loc: 0.2199  time: 0.1673  data_time: 0.0017  lr: 0.01  max_mem: 1826M
[32m[11/15 11:21:25 d2.utils.events]: [0m eta: 0:18:41  iter: 3379  total_loss: 0.7872  loss_cls: 0.09897  loss_box_reg: 0.2552  loss_mask: 0.1259  loss_rpn_cls: 0.05365  loss_rpn_loc: 0.2179  time: 0.1673  data_time: 0.0015  lr: 0.01  max_mem: 1826M
[32m[11/15 11:21:28 d2.utils.events]: [0m eta: 0:18:37  iter: 3399  total_loss: 0.7286  loss_cls: 0.09123  loss_box_reg: 0.2445  loss_mask: 0.1285  loss_rpn_cls: 0.0369  loss_rpn_loc: 0.2348  time: 0.1673  data_time: 0.0016  lr: 0.01  max_mem: 1826M
[32m[11/15 11:21:32 d2.utils.events]: [0m eta: 0:18:35  iter: 3419  total_loss: 0.759  loss_cls: 0.1043  loss_box_reg: 0.27  loss_mask: 0.1265  loss_rpn_cls: 0.04368  loss_rpn_loc: 0.2125  time: 0.1673  data_time: 0.0017  lr: 0.01  max_mem: 1826M
[32m[11/15 11:21:35 d2.utils.events]: [0m eta: 0:18:32  iter: 3439  total_loss: 0.7952  loss_cls: 0.1  loss_box_reg: 0.2828  loss_mask: 0.1324  loss_rpn_cls: 0.05946  loss_rpn_loc: 0.2125  time: 0.1673  data_time: 0.0017  lr: 0.01  max_mem: 1826M
[32m[11/15 11:21:38 d2.utils.events]: [0m eta: 0:18:29  iter: 3459  total_loss: 0.7191  loss_cls: 0.08813  loss_box_reg: 0.2466  loss_mask: 0.1295  loss_rpn_cls: 0.04165  loss_rpn_loc: 0.2175  time: 0.1673  data_time: 0.0015  lr: 0.01  max_mem: 1826M
[32m[11/15 11:21:42 d2.utils.events]: [0m eta: 0:18:26  iter: 3479  total_loss: 0.7637  loss_cls: 0.09916  loss_box_reg: 0.2467  loss_mask: 0.1312  loss_rpn_cls: 0.04811  loss_rpn_loc: 0.2047  time: 0.1673  data_time: 0.0014  lr: 0.01  max_mem: 1826M
[32m[11/15 11:21:45 d2.utils.events]: [0m eta: 0:18:22  iter: 3499  total_loss: 0.726  loss_cls: 0.08738  loss_box_reg: 0.2491  loss_mask: 0.1276  loss_rpn_cls: 0.05162  loss_rpn_loc: 0.2152  time: 0.1673  data_time: 0.0016  lr: 0.01  max_mem: 1826M
[32m[11/15 11:21:48 d2.utils.events]: [0m eta: 0:18:19  iter: 3519  total_loss: 0.6874  loss_cls: 0.07927  loss_box_reg: 0.2455  loss_mask: 0.121  loss_rpn_cls: 0.0462  loss_rpn_loc: 0.2089  time: 0.1673  data_time: 0.0016  lr: 0.01  max_mem: 1826M
[32m[11/15 11:21:52 d2.utils.events]: [0m eta: 0:18:15  iter: 3539  total_loss: 0.7201  loss_cls: 0.09385  loss_box_reg: 0.2322  loss_mask: 0.1312  loss_rpn_cls: 0.0495  loss_rpn_loc: 0.2048  time: 0.1673  data_time: 0.0017  lr: 0.01  max_mem: 1826M
[32m[11/15 11:21:55 d2.utils.events]: [0m eta: 0:18:12  iter: 3559  total_loss: 0.7424  loss_cls: 0.08788  loss_box_reg: 0.2364  loss_mask: 0.1377  loss_rpn_cls: 0.06323  loss_rpn_loc: 0.209  time: 0.1674  data_time: 0.0016  lr: 0.01  max_mem: 1826M
[32m[11/15 11:21:59 d2.utils.events]: [0m eta: 0:18:09  iter: 3579  total_loss: 0.7218  loss_cls: 0.08828  loss_box_reg: 0.2336  loss_mask: 0.1275  loss_rpn_cls: 0.05631  loss_rpn_loc: 0.2075  time: 0.1674  data_time: 0.0016  lr: 0.01  max_mem: 1826M
[32m[11/15 11:22:02 d2.utils.events]: [0m eta: 0:18:06  iter: 3599  total_loss: 0.7242  loss_cls: 0.08633  loss_box_reg: 0.2304  loss_mask: 0.1274  loss_rpn_cls: 0.05558  loss_rpn_loc: 0.2048  time: 0.1674  data_time: 0.0016  lr: 0.01  max_mem: 1826M
