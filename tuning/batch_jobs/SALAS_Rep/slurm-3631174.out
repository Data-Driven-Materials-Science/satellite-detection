Registered Datasets: ['satellite_Train', 'satellite_Val']
ddict info:
	path: ../../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/HP743_1S_500x.png
	num_instances: 37
ddict info:
	path: ../../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/HP743_11S_500x.png
	num_instances: 25
ddict info:
	path: ../../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S08_01_SE1_1000X94.png
	num_instances: 68
ddict info:
	path: ../../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S08_03_SE1_1000X03.png
	num_instances: 88
ddict info:
	path: ../../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S06_01_SE1_500X67.png
	num_instances: 54
ddict info:
	path: ../../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S04_02_SE1_1000X50.png
	num_instances: 45
ddict info:
	path: ../../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S03_03_SE1_1250X41.png
	num_instances: 111
ddict info:
	path: ../../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S02_01_SE1_300X14.png
	num_instances: 98
ddict info:
	path: ../../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/HP743_2S_250x.png
	num_instances: 49
Weights not found, weights will be downloaded from source: https://dl.fbaipublicfiles.com/detectron2/COCO-InstanceSegmentation/mask_rcnn_R_50_FPN_3x/137849600/model_final_f10217.pkl
[32m[09/15 14:31:20 d2.engine.defaults]: [0mModel:
GeneralizedRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): StandardROIHeads(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): FastRCNNConvFCHead(
      (flatten): Flatten(start_dim=1, end_dim=-1)
      (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      (fc_relu1): ReLU()
      (fc2): Linear(in_features=1024, out_features=1024, bias=True)
      (fc_relu2): ReLU()
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=1024, out_features=2, bias=True)
      (bbox_pred): Linear(in_features=1024, out_features=4, bias=True)
    )
    (mask_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(14, 14), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(14, 14), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (mask_head): MaskRCNNConvUpsampleHead(
      (mask_fcn1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn2): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn3): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn4): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
      (deconv_relu): ReLU()
      (predictor): Conv2d(256, 1, kernel_size=(1, 1), stride=(1, 1))
    )
  )
)
[32m[09/15 14:31:20 d2.data.build]: [0mRemoved 0 images with no usable annotations. 20 images left.
[32m[09/15 14:31:20 d2.data.build]: [0mDistribution of instances among all 1 categories:
[36m|  category  | #instances   |
|:----------:|:-------------|
| satellite  | 1412         |
|            |              |[0m
[32m[09/15 14:31:20 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice'), RandomFlip()]
[32m[09/15 14:31:20 d2.data.build]: [0mUsing training sampler TrainingSampler
[32m[09/15 14:31:20 d2.data.common]: [0mSerializing 20 elements to byte tensors and concatenating them all ...
[32m[09/15 14:31:20 d2.data.common]: [0mSerialized dataset takes 0.46 MiB
[5m[31mWARNING[0m [32m[09/15 14:31:20 d2.solver.build]: [0mSOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[32m[09/15 14:31:20 d2.checkpoint.c2_model_loading]: [0mRenaming Caffe2 weights ......
[32m[09/15 14:31:20 d2.checkpoint.c2_model_loading]: [0mFollowing weights matched with submodule backbone.bottom_up:
| Names in Model    | Names in Checkpoint      | Shapes                                          |
|:------------------|:-------------------------|:------------------------------------------------|
| res2.0.conv1.*    | res2_0_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,1,1)             |
| res2.0.conv2.*    | res2_0_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.0.conv3.*    | res2_0_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.0.shortcut.* | res2_0_branch1_{bn_*,w}  | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.1.conv1.*    | res2_1_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,256,1,1)            |
| res2.1.conv2.*    | res2_1_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.1.conv3.*    | res2_1_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.2.conv1.*    | res2_2_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,256,1,1)            |
| res2.2.conv2.*    | res2_2_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.2.conv3.*    | res2_2_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res3.0.conv1.*    | res3_0_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,256,1,1)       |
| res3.0.conv2.*    | res3_0_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.0.conv3.*    | res3_0_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.0.shortcut.* | res3_0_branch1_{bn_*,w}  | (512,) (512,) (512,) (512,) (512,256,1,1)       |
| res3.1.conv1.*    | res3_1_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.1.conv2.*    | res3_1_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.1.conv3.*    | res3_1_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.2.conv1.*    | res3_2_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.2.conv2.*    | res3_2_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.2.conv3.*    | res3_2_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.3.conv1.*    | res3_3_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.3.conv2.*    | res3_3_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.3.conv3.*    | res3_3_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res4.0.conv1.*    | res4_0_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,512,1,1)       |
| res4.0.conv2.*    | res4_0_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.0.conv3.*    | res4_0_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.0.shortcut.* | res4_0_branch1_{bn_*,w}  | (1024,) (1024,) (1024,) (1024,) (1024,512,1,1)  |
| res4.1.conv1.*    | res4_1_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.1.conv2.*    | res4_1_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.1.conv3.*    | res4_1_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.2.conv1.*    | res4_2_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.2.conv2.*    | res4_2_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.2.conv3.*    | res4_2_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.3.conv1.*    | res4_3_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.3.conv2.*    | res4_3_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.3.conv3.*    | res4_3_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.4.conv1.*    | res4_4_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.4.conv2.*    | res4_4_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.4.conv3.*    | res4_4_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.5.conv1.*    | res4_5_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.5.conv2.*    | res4_5_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.5.conv3.*    | res4_5_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res5.0.conv1.*    | res5_0_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,1024,1,1)      |
| res5.0.conv2.*    | res5_0_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.0.conv3.*    | res5_0_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| res5.0.shortcut.* | res5_0_branch1_{bn_*,w}  | (2048,) (2048,) (2048,) (2048,) (2048,1024,1,1) |
| res5.1.conv1.*    | res5_1_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,2048,1,1)      |
| res5.1.conv2.*    | res5_1_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.1.conv3.*    | res5_1_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| res5.2.conv1.*    | res5_2_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,2048,1,1)      |
| res5.2.conv2.*    | res5_2_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.2.conv3.*    | res5_2_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| stem.conv1.norm.* | res_conv1_bn_*           | (64,) (64,) (64,) (64,)                         |
| stem.conv1.weight | conv1_w                  | (64, 3, 7, 7)                                   |
[32m[09/15 14:31:20 d2.engine.train_loop]: [0mStarting training from iteration 0
/jet/home/sprice/.local/lib/python3.8/site-packages/torch/utils/data/dataloader.py:474: UserWarning: This DataLoader will create 4 worker processes in total. Our suggested max number of worker in current system is 1, which is smaller than what this DataLoader is going to create. Please be aware that excessive worker creation might get DataLoader running slow or even freeze, lower the worker number to avoid potential slowness/freeze if necessary.
  warnings.warn(_create_warning_msg(
[32m[09/15 14:31:25 d2.utils.events]: [0m eta: 0:11:52  iter: 19  total_loss: 3.008  loss_cls: 0.6009  loss_box_reg: 0.05378  loss_mask: 0.6623  loss_rpn_cls: 0.6615  loss_rpn_loc: 1.147  time: 0.1429  data_time: 0.1171  lr: 0.00039962  max_mem: 1587M
[32m[09/15 14:31:28 d2.utils.events]: [0m eta: 0:11:50  iter: 39  total_loss: 2.265  loss_cls: 0.2999  loss_box_reg: 0.05296  loss_mask: 0.596  loss_rpn_cls: 0.5806  loss_rpn_loc: 0.6779  time: 0.1474  data_time: 0.0163  lr: 0.00079922  max_mem: 1823M
[32m[09/15 14:31:31 d2.utils.events]: [0m eta: 0:11:46  iter: 59  total_loss: 2.112  loss_cls: 0.2272  loss_box_reg: 0.1009  loss_mask: 0.5812  loss_rpn_cls: 0.5881  loss_rpn_loc: 0.5622  time: 0.1459  data_time: 0.0165  lr: 0.0011988  max_mem: 1823M
[32m[09/15 14:31:34 d2.utils.events]: [0m eta: 0:11:56  iter: 79  total_loss: 2.22  loss_cls: 0.3014  loss_box_reg: 0.2959  loss_mask: 0.564  loss_rpn_cls: 0.5039  loss_rpn_loc: 0.5265  time: 0.1473  data_time: 0.0161  lr: 0.0015984  max_mem: 1823M
[32m[09/15 14:31:37 d2.utils.events]: [0m eta: 0:11:56  iter: 99  total_loss: 2.129  loss_cls: 0.2937  loss_box_reg: 0.3981  loss_mask: 0.5404  loss_rpn_cls: 0.3859  loss_rpn_loc: 0.5623  time: 0.1474  data_time: 0.0163  lr: 0.001998  max_mem: 1823M
[32m[09/15 14:31:40 d2.utils.events]: [0m eta: 0:11:54  iter: 119  total_loss: 2.047  loss_cls: 0.3136  loss_box_reg: 0.4577  loss_mask: 0.4893  loss_rpn_cls: 0.3168  loss_rpn_loc: 0.5065  time: 0.1476  data_time: 0.0160  lr: 0.0023976  max_mem: 1823M
[32m[09/15 14:31:43 d2.utils.events]: [0m eta: 0:11:52  iter: 139  total_loss: 1.966  loss_cls: 0.2824  loss_box_reg: 0.3894  loss_mask: 0.4388  loss_rpn_cls: 0.3216  loss_rpn_loc: 0.5  time: 0.1483  data_time: 0.0183  lr: 0.0027972  max_mem: 1823M
[32m[09/15 14:31:46 d2.utils.events]: [0m eta: 0:11:51  iter: 159  total_loss: 1.906  loss_cls: 0.2834  loss_box_reg: 0.429  loss_mask: 0.4467  loss_rpn_cls: 0.2847  loss_rpn_loc: 0.4769  time: 0.1485  data_time: 0.0159  lr: 0.0031968  max_mem: 1823M
[32m[09/15 14:31:49 d2.utils.events]: [0m eta: 0:11:48  iter: 179  total_loss: 1.833  loss_cls: 0.2302  loss_box_reg: 0.3713  loss_mask: 0.383  loss_rpn_cls: 0.2885  loss_rpn_loc: 0.5427  time: 0.1486  data_time: 0.0168  lr: 0.0035964  max_mem: 1823M
[32m[09/15 14:31:53 d2.utils.events]: [0m eta: 0:11:50  iter: 199  total_loss: 1.693  loss_cls: 0.2556  loss_box_reg: 0.3658  loss_mask: 0.3727  loss_rpn_cls: 0.26  loss_rpn_loc: 0.491  time: 0.1494  data_time: 0.0169  lr: 0.003996  max_mem: 1823M
[32m[09/15 14:31:56 d2.utils.events]: [0m eta: 0:11:48  iter: 219  total_loss: 1.772  loss_cls: 0.256  loss_box_reg: 0.3923  loss_mask: 0.3737  loss_rpn_cls: 0.2683  loss_rpn_loc: 0.4526  time: 0.1495  data_time: 0.0167  lr: 0.0043956  max_mem: 1823M
[32m[09/15 14:31:59 d2.utils.events]: [0m eta: 0:11:44  iter: 239  total_loss: 1.892  loss_cls: 0.2682  loss_box_reg: 0.4811  loss_mask: 0.3494  loss_rpn_cls: 0.3017  loss_rpn_loc: 0.4373  time: 0.1494  data_time: 0.0158  lr: 0.0047952  max_mem: 1823M
[32m[09/15 14:32:02 d2.utils.events]: [0m eta: 0:11:42  iter: 259  total_loss: 1.692  loss_cls: 0.258  loss_box_reg: 0.447  loss_mask: 0.3065  loss_rpn_cls: 0.2616  loss_rpn_loc: 0.4522  time: 0.1498  data_time: 0.0166  lr: 0.0051948  max_mem: 1823M
[32m[09/15 14:32:05 d2.utils.events]: [0m eta: 0:11:40  iter: 279  total_loss: 1.665  loss_cls: 0.2489  loss_box_reg: 0.377  loss_mask: 0.3235  loss_rpn_cls: 0.2656  loss_rpn_loc: 0.4411  time: 0.1500  data_time: 0.0162  lr: 0.0055944  max_mem: 1823M
[32m[09/15 14:32:08 d2.utils.events]: [0m eta: 0:11:43  iter: 299  total_loss: 1.7  loss_cls: 0.2661  loss_box_reg: 0.4679  loss_mask: 0.301  loss_rpn_cls: 0.2187  loss_rpn_loc: 0.4398  time: 0.1504  data_time: 0.0163  lr: 0.005994  max_mem: 1823M
[32m[09/15 14:32:11 d2.utils.events]: [0m eta: 0:11:42  iter: 319  total_loss: 1.654  loss_cls: 0.2323  loss_box_reg: 0.4441  loss_mask: 0.298  loss_rpn_cls: 0.2229  loss_rpn_loc: 0.4545  time: 0.1505  data_time: 0.0160  lr: 0.0063936  max_mem: 1823M
[32m[09/15 14:32:14 d2.utils.events]: [0m eta: 0:11:41  iter: 339  total_loss: 1.736  loss_cls: 0.272  loss_box_reg: 0.4824  loss_mask: 0.306  loss_rpn_cls: 0.2296  loss_rpn_loc: 0.4439  time: 0.1507  data_time: 0.0168  lr: 0.0067932  max_mem: 1823M
[32m[09/15 14:32:17 d2.utils.events]: [0m eta: 0:11:39  iter: 359  total_loss: 1.741  loss_cls: 0.2194  loss_box_reg: 0.44  loss_mask: 0.3088  loss_rpn_cls: 0.2179  loss_rpn_loc: 0.5175  time: 0.1508  data_time: 0.0166  lr: 0.0071928  max_mem: 1823M
[32m[09/15 14:32:20 d2.utils.events]: [0m eta: 0:11:35  iter: 379  total_loss: 1.654  loss_cls: 0.1772  loss_box_reg: 0.3201  loss_mask: 0.2915  loss_rpn_cls: 0.2796  loss_rpn_loc: 0.5025  time: 0.1507  data_time: 0.0163  lr: 0.0075924  max_mem: 1823M
[32m[09/15 14:32:23 d2.utils.events]: [0m eta: 0:11:34  iter: 399  total_loss: 1.578  loss_cls: 0.2185  loss_box_reg: 0.3466  loss_mask: 0.2812  loss_rpn_cls: 0.2219  loss_rpn_loc: 0.4639  time: 0.1509  data_time: 0.0168  lr: 0.007992  max_mem: 1823M
[32m[09/15 14:32:26 d2.utils.events]: [0m eta: 0:11:31  iter: 419  total_loss: 1.729  loss_cls: 0.259  loss_box_reg: 0.4201  loss_mask: 0.2748  loss_rpn_cls: 0.2457  loss_rpn_loc: 0.5227  time: 0.1510  data_time: 0.0167  lr: 0.0083916  max_mem: 1823M
[32m[09/15 14:32:29 d2.utils.events]: [0m eta: 0:11:28  iter: 439  total_loss: 1.575  loss_cls: 0.2283  loss_box_reg: 0.3487  loss_mask: 0.2856  loss_rpn_cls: 0.2266  loss_rpn_loc: 0.4344  time: 0.1511  data_time: 0.0170  lr: 0.0087912  max_mem: 1823M
[32m[09/15 14:32:33 d2.utils.events]: [0m eta: 0:11:27  iter: 459  total_loss: 1.648  loss_cls: 0.2479  loss_box_reg: 0.472  loss_mask: 0.2738  loss_rpn_cls: 0.2219  loss_rpn_loc: 0.4445  time: 0.1516  data_time: 0.0155  lr: 0.0091908  max_mem: 1823M
[32m[09/15 14:32:36 d2.utils.events]: [0m eta: 0:11:24  iter: 479  total_loss: 1.565  loss_cls: 0.2264  loss_box_reg: 0.4515  loss_mask: 0.266  loss_rpn_cls: 0.1736  loss_rpn_loc: 0.4131  time: 0.1517  data_time: 0.0171  lr: 0.0095904  max_mem: 1823M
[32m[09/15 14:32:39 d2.utils.events]: [0m eta: 0:11:21  iter: 499  total_loss: 1.472  loss_cls: 0.2232  loss_box_reg: 0.4059  loss_mask: 0.2637  loss_rpn_cls: 0.193  loss_rpn_loc: 0.4129  time: 0.1518  data_time: 0.0159  lr: 0.00999  max_mem: 1823M
[32m[09/15 14:32:42 d2.utils.events]: [0m eta: 0:11:18  iter: 519  total_loss: 1.552  loss_cls: 0.2224  loss_box_reg: 0.4163  loss_mask: 0.2642  loss_rpn_cls: 0.2194  loss_rpn_loc: 0.4146  time: 0.1517  data_time: 0.0167  lr: 0.01039  max_mem: 1823M
[32m[09/15 14:32:45 d2.utils.events]: [0m eta: 0:11:15  iter: 539  total_loss: 1.57  loss_cls: 0.2609  loss_box_reg: 0.4476  loss_mask: 0.2556  loss_rpn_cls: 0.2047  loss_rpn_loc: 0.4194  time: 0.1518  data_time: 0.0160  lr: 0.010789  max_mem: 1823M
[32m[09/15 14:32:48 d2.utils.events]: [0m eta: 0:11:12  iter: 559  total_loss: 1.555  loss_cls: 0.244  loss_box_reg: 0.4246  loss_mask: 0.2468  loss_rpn_cls: 0.188  loss_rpn_loc: 0.433  time: 0.1521  data_time: 0.0165  lr: 0.011189  max_mem: 1823M
[32m[09/15 14:32:51 d2.utils.events]: [0m eta: 0:11:09  iter: 579  total_loss: 1.56  loss_cls: 0.2097  loss_box_reg: 0.4238  loss_mask: 0.2542  loss_rpn_cls: 0.2039  loss_rpn_loc: 0.4504  time: 0.1523  data_time: 0.0164  lr: 0.011588  max_mem: 1823M
[32m[09/15 14:32:54 d2.utils.events]: [0m eta: 0:11:06  iter: 599  total_loss: 1.571  loss_cls: 0.2299  loss_box_reg: 0.4344  loss_mask: 0.2343  loss_rpn_cls: 0.193  loss_rpn_loc: 0.4426  time: 0.1524  data_time: 0.0160  lr: 0.011988  max_mem: 1823M
[32m[09/15 14:32:57 d2.utils.events]: [0m eta: 0:11:04  iter: 619  total_loss: 1.574  loss_cls: 0.2349  loss_box_reg: 0.425  loss_mask: 0.2545  loss_rpn_cls: 0.1974  loss_rpn_loc: 0.4583  time: 0.1524  data_time: 0.0159  lr: 0.012388  max_mem: 1823M
[32m[09/15 14:33:00 d2.utils.events]: [0m eta: 0:11:00  iter: 639  total_loss: 1.531  loss_cls: 0.2071  loss_box_reg: 0.4494  loss_mask: 0.2587  loss_rpn_cls: 0.1696  loss_rpn_loc: 0.4214  time: 0.1523  data_time: 0.0164  lr: 0.012787  max_mem: 1823M
[32m[09/15 14:33:04 d2.utils.events]: [0m eta: 0:10:58  iter: 659  total_loss: 1.512  loss_cls: 0.2282  loss_box_reg: 0.4084  loss_mask: 0.2411  loss_rpn_cls: 0.1662  loss_rpn_loc: 0.4023  time: 0.1525  data_time: 0.0162  lr: 0.013187  max_mem: 1823M
[32m[09/15 14:33:07 d2.utils.events]: [0m eta: 0:10:55  iter: 679  total_loss: 1.529  loss_cls: 0.2189  loss_box_reg: 0.4715  loss_mask: 0.2531  loss_rpn_cls: 0.1601  loss_rpn_loc: 0.402  time: 0.1525  data_time: 0.0168  lr: 0.013586  max_mem: 1823M
[32m[09/15 14:33:10 d2.utils.events]: [0m eta: 0:10:53  iter: 699  total_loss: 1.529  loss_cls: 0.2033  loss_box_reg: 0.4025  loss_mask: 0.2431  loss_rpn_cls: 0.2082  loss_rpn_loc: 0.4534  time: 0.1529  data_time: 0.0180  lr: 0.013986  max_mem: 1823M
[32m[09/15 14:33:13 d2.utils.events]: [0m eta: 0:10:51  iter: 719  total_loss: 1.542  loss_cls: 0.2296  loss_box_reg: 0.407  loss_mask: 0.2333  loss_rpn_cls: 0.1821  loss_rpn_loc: 0.4378  time: 0.1531  data_time: 0.0174  lr: 0.014386  max_mem: 1823M
[32m[09/15 14:33:16 d2.utils.events]: [0m eta: 0:10:48  iter: 739  total_loss: 1.548  loss_cls: 0.2325  loss_box_reg: 0.4369  loss_mask: 0.2388  loss_rpn_cls: 0.1873  loss_rpn_loc: 0.4082  time: 0.1531  data_time: 0.0166  lr: 0.014785  max_mem: 1823M
[32m[09/15 14:33:20 d2.utils.events]: [0m eta: 0:10:45  iter: 759  total_loss: 1.376  loss_cls: 0.1808  loss_box_reg: 0.3461  loss_mask: 0.239  loss_rpn_cls: 0.1625  loss_rpn_loc: 0.437  time: 0.1532  data_time: 0.0168  lr: 0.015185  max_mem: 1823M
[32m[09/15 14:33:23 d2.utils.events]: [0m eta: 0:10:43  iter: 779  total_loss: 1.523  loss_cls: 0.2368  loss_box_reg: 0.4177  loss_mask: 0.224  loss_rpn_cls: 0.2099  loss_rpn_loc: 0.4688  time: 0.1533  data_time: 0.0169  lr: 0.015584  max_mem: 1823M
[32m[09/15 14:33:26 d2.utils.events]: [0m eta: 0:10:40  iter: 799  total_loss: 1.416  loss_cls: 0.2262  loss_box_reg: 0.3717  loss_mask: 0.238  loss_rpn_cls: 0.1499  loss_rpn_loc: 0.4233  time: 0.1533  data_time: 0.0167  lr: 0.015984  max_mem: 1823M
[32m[09/15 14:33:29 d2.utils.events]: [0m eta: 0:10:37  iter: 819  total_loss: 1.513  loss_cls: 0.1924  loss_box_reg: 0.3961  loss_mask: 0.2463  loss_rpn_cls: 0.1907  loss_rpn_loc: 0.4352  time: 0.1534  data_time: 0.0174  lr: 0.016384  max_mem: 1823M
[32m[09/15 14:33:32 d2.utils.events]: [0m eta: 0:10:34  iter: 839  total_loss: 1.488  loss_cls: 0.2033  loss_box_reg: 0.3711  loss_mask: 0.2386  loss_rpn_cls: 0.2161  loss_rpn_loc: 0.4506  time: 0.1533  data_time: 0.0156  lr: 0.016783  max_mem: 1823M
[32m[09/15 14:33:35 d2.utils.events]: [0m eta: 0:10:31  iter: 859  total_loss: 1.428  loss_cls: 0.1887  loss_box_reg: 0.3768  loss_mask: 0.2352  loss_rpn_cls: 0.1737  loss_rpn_loc: 0.4376  time: 0.1534  data_time: 0.0164  lr: 0.017183  max_mem: 1823M
[32m[09/15 14:33:38 d2.utils.events]: [0m eta: 0:10:28  iter: 879  total_loss: 1.443  loss_cls: 0.1984  loss_box_reg: 0.374  loss_mask: 0.2162  loss_rpn_cls: 0.1969  loss_rpn_loc: 0.453  time: 0.1535  data_time: 0.0160  lr: 0.017582  max_mem: 1823M
[32m[09/15 14:33:41 d2.utils.events]: [0m eta: 0:10:25  iter: 899  total_loss: 1.402  loss_cls: 0.1765  loss_box_reg: 0.2865  loss_mask: 0.245  loss_rpn_cls: 0.1907  loss_rpn_loc: 0.4656  time: 0.1535  data_time: 0.0171  lr: 0.017982  max_mem: 1823M
[32m[09/15 14:33:44 d2.utils.events]: [0m eta: 0:10:22  iter: 919  total_loss: 1.317  loss_cls: 0.181  loss_box_reg: 0.371  loss_mask: 0.2289  loss_rpn_cls: 0.1674  loss_rpn_loc: 0.4376  time: 0.1535  data_time: 0.0161  lr: 0.018382  max_mem: 1823M
[32m[09/15 14:33:48 d2.utils.events]: [0m eta: 0:10:20  iter: 939  total_loss: 1.582  loss_cls: 0.2302  loss_box_reg: 0.4285  loss_mask: 0.2308  loss_rpn_cls: 0.2361  loss_rpn_loc: 0.461  time: 0.1535  data_time: 0.0172  lr: 0.018781  max_mem: 1823M
[32m[09/15 14:33:51 d2.utils.events]: [0m eta: 0:10:17  iter: 959  total_loss: 1.409  loss_cls: 0.1772  loss_box_reg: 0.3331  loss_mask: 0.228  loss_rpn_cls: 0.1815  loss_rpn_loc: 0.4649  time: 0.1535  data_time: 0.0174  lr: 0.019181  max_mem: 1823M
[32m[09/15 14:33:54 d2.utils.events]: [0m eta: 0:10:14  iter: 979  total_loss: 1.342  loss_cls: 0.1698  loss_box_reg: 0.3233  loss_mask: 0.2188  loss_rpn_cls: 0.1695  loss_rpn_loc: 0.4704  time: 0.1536  data_time: 0.0167  lr: 0.01958  max_mem: 1823M
[32m[09/15 14:33:58 d2.utils.events]: [0m eta: 0:10:11  iter: 999  total_loss: 1.458  loss_cls: 0.1867  loss_box_reg: 0.3558  loss_mask: 0.2236  loss_rpn_cls: 0.1825  loss_rpn_loc: 0.4798  time: 0.1537  data_time: 0.0169  lr: 0.01998  max_mem: 1823M
[32m[09/15 14:34:01 d2.utils.events]: [0m eta: 0:10:10  iter: 1019  total_loss: 1.488  loss_cls: 0.2041  loss_box_reg: 0.367  loss_mask: 0.2295  loss_rpn_cls: 0.1936  loss_rpn_loc: 0.448  time: 0.1537  data_time: 0.0173  lr: 0.02  max_mem: 1823M
[32m[09/15 14:34:04 d2.utils.events]: [0m eta: 0:10:07  iter: 1039  total_loss: 1.406  loss_cls: 0.1955  loss_box_reg: 0.3723  loss_mask: 0.2176  loss_rpn_cls: 0.177  loss_rpn_loc: 0.4165  time: 0.1538  data_time: 0.0161  lr: 0.02  max_mem: 1823M
[32m[09/15 14:34:07 d2.utils.events]: [0m eta: 0:10:05  iter: 1059  total_loss: 1.514  loss_cls: 0.2084  loss_box_reg: 0.4436  loss_mask: 0.2277  loss_rpn_cls: 0.1836  loss_rpn_loc: 0.4277  time: 0.1539  data_time: 0.0173  lr: 0.02  max_mem: 1823M
[32m[09/15 14:34:11 d2.utils.events]: [0m eta: 0:10:02  iter: 1079  total_loss: 1.439  loss_cls: 0.2032  loss_box_reg: 0.411  loss_mask: 0.2334  loss_rpn_cls: 0.1851  loss_rpn_loc: 0.41  time: 0.1540  data_time: 0.0170  lr: 0.02  max_mem: 1823M
[32m[09/15 14:34:14 d2.utils.events]: [0m eta: 0:09:59  iter: 1099  total_loss: 1.412  loss_cls: 0.2037  loss_box_reg: 0.4057  loss_mask: 0.235  loss_rpn_cls: 0.1712  loss_rpn_loc: 0.3996  time: 0.1540  data_time: 0.0179  lr: 0.02  max_mem: 1823M
[32m[09/15 14:34:17 d2.utils.events]: [0m eta: 0:09:57  iter: 1119  total_loss: 1.439  loss_cls: 0.2222  loss_box_reg: 0.3783  loss_mask: 0.2233  loss_rpn_cls: 0.1703  loss_rpn_loc: 0.4314  time: 0.1540  data_time: 0.0168  lr: 0.02  max_mem: 1823M
[32m[09/15 14:34:20 d2.utils.events]: [0m eta: 0:09:54  iter: 1139  total_loss: 1.383  loss_cls: 0.1547  loss_box_reg: 0.3027  loss_mask: 0.2159  loss_rpn_cls: 0.2234  loss_rpn_loc: 0.5138  time: 0.1540  data_time: 0.0173  lr: 0.02  max_mem: 1823M
[32m[09/15 14:34:23 d2.utils.events]: [0m eta: 0:09:52  iter: 1159  total_loss: 1.414  loss_cls: 0.1865  loss_box_reg: 0.3617  loss_mask: 0.2116  loss_rpn_cls: 0.1895  loss_rpn_loc: 0.448  time: 0.1540  data_time: 0.0164  lr: 0.02  max_mem: 1823M
[32m[09/15 14:34:26 d2.utils.events]: [0m eta: 0:09:49  iter: 1179  total_loss: 1.443  loss_cls: 0.2026  loss_box_reg: 0.3977  loss_mask: 0.215  loss_rpn_cls: 0.1575  loss_rpn_loc: 0.4217  time: 0.1541  data_time: 0.0165  lr: 0.02  max_mem: 1823M
[32m[09/15 14:34:30 d2.utils.events]: [0m eta: 0:09:46  iter: 1199  total_loss: 1.439  loss_cls: 0.2067  loss_box_reg: 0.4108  loss_mask: 0.2193  loss_rpn_cls: 0.1755  loss_rpn_loc: 0.4315  time: 0.1541  data_time: 0.0169  lr: 0.02  max_mem: 1823M
[32m[09/15 14:34:33 d2.utils.events]: [0m eta: 0:09:43  iter: 1219  total_loss: 1.44  loss_cls: 0.2317  loss_box_reg: 0.4114  loss_mask: 0.209  loss_rpn_cls: 0.1648  loss_rpn_loc: 0.432  time: 0.1542  data_time: 0.0167  lr: 0.02  max_mem: 1823M
[32m[09/15 14:34:36 d2.utils.events]: [0m eta: 0:09:40  iter: 1239  total_loss: 1.443  loss_cls: 0.1761  loss_box_reg: 0.3675  loss_mask: 0.2233  loss_rpn_cls: 0.2218  loss_rpn_loc: 0.4476  time: 0.1542  data_time: 0.0165  lr: 0.02  max_mem: 1823M
[32m[09/15 14:34:39 d2.utils.events]: [0m eta: 0:09:37  iter: 1259  total_loss: 1.414  loss_cls: 0.1718  loss_box_reg: 0.3518  loss_mask: 0.2166  loss_rpn_cls: 0.1595  loss_rpn_loc: 0.4605  time: 0.1542  data_time: 0.0168  lr: 0.02  max_mem: 1823M
[32m[09/15 14:34:42 d2.utils.events]: [0m eta: 0:09:34  iter: 1279  total_loss: 1.413  loss_cls: 0.2269  loss_box_reg: 0.3802  loss_mask: 0.2256  loss_rpn_cls: 0.1713  loss_rpn_loc: 0.4209  time: 0.1543  data_time: 0.0172  lr: 0.02  max_mem: 1823M
[32m[09/15 14:34:46 d2.utils.events]: [0m eta: 0:09:32  iter: 1299  total_loss: 1.419  loss_cls: 0.2056  loss_box_reg: 0.4236  loss_mask: 0.2146  loss_rpn_cls: 0.1773  loss_rpn_loc: 0.3862  time: 0.1544  data_time: 0.0168  lr: 0.02  max_mem: 1823M
[32m[09/15 14:34:49 d2.utils.events]: [0m eta: 0:09:29  iter: 1319  total_loss: 1.484  loss_cls: 0.21  loss_box_reg: 0.396  loss_mask: 0.2184  loss_rpn_cls: 0.1703  loss_rpn_loc: 0.4546  time: 0.1543  data_time: 0.0176  lr: 0.02  max_mem: 1823M
[32m[09/15 14:34:52 d2.utils.events]: [0m eta: 0:09:26  iter: 1339  total_loss: 1.415  loss_cls: 0.2365  loss_box_reg: 0.4359  loss_mask: 0.2142  loss_rpn_cls: 0.1344  loss_rpn_loc: 0.4137  time: 0.1545  data_time: 0.0166  lr: 0.02  max_mem: 1823M
[32m[09/15 14:34:55 d2.utils.events]: [0m eta: 0:09:23  iter: 1359  total_loss: 1.368  loss_cls: 0.216  loss_box_reg: 0.3751  loss_mask: 0.2083  loss_rpn_cls: 0.1814  loss_rpn_loc: 0.4061  time: 0.1545  data_time: 0.0164  lr: 0.02  max_mem: 1823M
[32m[09/15 14:34:58 d2.utils.events]: [0m eta: 0:09:20  iter: 1379  total_loss: 1.373  loss_cls: 0.1939  loss_box_reg: 0.3649  loss_mask: 0.2129  loss_rpn_cls: 0.1697  loss_rpn_loc: 0.4282  time: 0.1545  data_time: 0.0165  lr: 0.02  max_mem: 1823M
[32m[09/15 14:35:01 d2.utils.events]: [0m eta: 0:09:17  iter: 1399  total_loss: 1.375  loss_cls: 0.2118  loss_box_reg: 0.4213  loss_mask: 0.203  loss_rpn_cls: 0.1582  loss_rpn_loc: 0.4196  time: 0.1545  data_time: 0.0173  lr: 0.02  max_mem: 1823M
[32m[09/15 14:35:05 d2.utils.events]: [0m eta: 0:09:15  iter: 1419  total_loss: 1.417  loss_cls: 0.1948  loss_box_reg: 0.3507  loss_mask: 0.2058  loss_rpn_cls: 0.2051  loss_rpn_loc: 0.4219  time: 0.1546  data_time: 0.0172  lr: 0.02  max_mem: 1823M
[32m[09/15 14:35:08 d2.utils.events]: [0m eta: 0:09:12  iter: 1439  total_loss: 1.369  loss_cls: 0.1812  loss_box_reg: 0.3808  loss_mask: 0.2236  loss_rpn_cls: 0.1846  loss_rpn_loc: 0.4191  time: 0.1546  data_time: 0.0163  lr: 0.02  max_mem: 1823M
[32m[09/15 14:35:11 d2.utils.events]: [0m eta: 0:09:09  iter: 1459  total_loss: 1.319  loss_cls: 0.1698  loss_box_reg: 0.3128  loss_mask: 0.2116  loss_rpn_cls: 0.1552  loss_rpn_loc: 0.4267  time: 0.1546  data_time: 0.0172  lr: 0.02  max_mem: 1823M
[32m[09/15 14:35:14 d2.utils.events]: [0m eta: 0:09:06  iter: 1479  total_loss: 1.41  loss_cls: 0.2098  loss_box_reg: 0.434  loss_mask: 0.2012  loss_rpn_cls: 0.1664  loss_rpn_loc: 0.4005  time: 0.1547  data_time: 0.0172  lr: 0.02  max_mem: 1823M
[32m[09/15 14:35:17 d2.utils.events]: [0m eta: 0:09:03  iter: 1499  total_loss: 1.344  loss_cls: 0.2254  loss_box_reg: 0.4132  loss_mask: 0.2021  loss_rpn_cls: 0.1223  loss_rpn_loc: 0.3939  time: 0.1547  data_time: 0.0167  lr: 0.02  max_mem: 1823M
[32m[09/15 14:35:20 d2.utils.events]: [0m eta: 0:09:00  iter: 1519  total_loss: 1.341  loss_cls: 0.2067  loss_box_reg: 0.3814  loss_mask: 0.2012  loss_rpn_cls: 0.1638  loss_rpn_loc: 0.4006  time: 0.1547  data_time: 0.0173  lr: 0.02  max_mem: 1823M
[32m[09/15 14:35:23 d2.utils.events]: [0m eta: 0:08:58  iter: 1539  total_loss: 1.317  loss_cls: 0.1937  loss_box_reg: 0.3935  loss_mask: 0.1948  loss_rpn_cls: 0.1649  loss_rpn_loc: 0.415  time: 0.1547  data_time: 0.0173  lr: 0.02  max_mem: 1823M
[32m[09/15 14:35:27 d2.utils.events]: [0m eta: 0:08:55  iter: 1559  total_loss: 1.327  loss_cls: 0.1977  loss_box_reg: 0.3841  loss_mask: 0.2  loss_rpn_cls: 0.1389  loss_rpn_loc: 0.381  time: 0.1548  data_time: 0.0165  lr: 0.02  max_mem: 1823M
[32m[09/15 14:35:30 d2.utils.events]: [0m eta: 0:08:52  iter: 1579  total_loss: 1.387  loss_cls: 0.2124  loss_box_reg: 0.4425  loss_mask: 0.2084  loss_rpn_cls: 0.1463  loss_rpn_loc: 0.3847  time: 0.1549  data_time: 0.0175  lr: 0.02  max_mem: 1823M
[32m[09/15 14:35:33 d2.utils.events]: [0m eta: 0:08:49  iter: 1599  total_loss: 1.293  loss_cls: 0.1979  loss_box_reg: 0.4314  loss_mask: 0.1908  loss_rpn_cls: 0.1181  loss_rpn_loc: 0.4087  time: 0.1550  data_time: 0.0170  lr: 0.02  max_mem: 1823M
[32m[09/15 14:35:36 d2.utils.events]: [0m eta: 0:08:46  iter: 1619  total_loss: 1.343  loss_cls: 0.1923  loss_box_reg: 0.3925  loss_mask: 0.218  loss_rpn_cls: 0.1691  loss_rpn_loc: 0.3931  time: 0.1549  data_time: 0.0171  lr: 0.02  max_mem: 1823M
[32m[09/15 14:35:40 d2.utils.events]: [0m eta: 0:08:44  iter: 1639  total_loss: 1.46  loss_cls: 0.1983  loss_box_reg: 0.4245  loss_mask: 0.2149  loss_rpn_cls: 0.1788  loss_rpn_loc: 0.3754  time: 0.1550  data_time: 0.0184  lr: 0.02  max_mem: 1823M
[32m[09/15 14:35:43 d2.utils.events]: [0m eta: 0:08:40  iter: 1659  total_loss: 1.271  loss_cls: 0.1763  loss_box_reg: 0.3976  loss_mask: 0.2079  loss_rpn_cls: 0.155  loss_rpn_loc: 0.4024  time: 0.1550  data_time: 0.0171  lr: 0.02  max_mem: 1823M
[32m[09/15 14:35:46 d2.utils.events]: [0m eta: 0:08:37  iter: 1679  total_loss: 1.42  loss_cls: 0.2116  loss_box_reg: 0.4437  loss_mask: 0.2138  loss_rpn_cls: 0.1923  loss_rpn_loc: 0.3648  time: 0.1550  data_time: 0.0167  lr: 0.02  max_mem: 1823M
[32m[09/15 14:35:49 d2.utils.events]: [0m eta: 0:08:34  iter: 1699  total_loss: 1.352  loss_cls: 0.2032  loss_box_reg: 0.4043  loss_mask: 0.1963  loss_rpn_cls: 0.1287  loss_rpn_loc: 0.3987  time: 0.1551  data_time: 0.0177  lr: 0.02  max_mem: 1823M
[32m[09/15 14:35:52 d2.utils.events]: [0m eta: 0:08:31  iter: 1719  total_loss: 1.372  loss_cls: 0.1996  loss_box_reg: 0.397  loss_mask: 0.1966  loss_rpn_cls: 0.1345  loss_rpn_loc: 0.3978  time: 0.1551  data_time: 0.0168  lr: 0.02  max_mem: 1823M
[32m[09/15 14:35:55 d2.utils.events]: [0m eta: 0:08:28  iter: 1739  total_loss: 1.315  loss_cls: 0.2023  loss_box_reg: 0.3931  loss_mask: 0.1941  loss_rpn_cls: 0.1509  loss_rpn_loc: 0.3888  time: 0.1551  data_time: 0.0158  lr: 0.02  max_mem: 1823M
[32m[09/15 14:35:58 d2.utils.events]: [0m eta: 0:08:25  iter: 1759  total_loss: 1.277  loss_cls: 0.21  loss_box_reg: 0.3602  loss_mask: 0.1999  loss_rpn_cls: 0.1113  loss_rpn_loc: 0.3902  time: 0.1551  data_time: 0.0166  lr: 0.02  max_mem: 1823M
[32m[09/15 14:36:02 d2.utils.events]: [0m eta: 0:08:22  iter: 1779  total_loss: 1.356  loss_cls: 0.2168  loss_box_reg: 0.4091  loss_mask: 0.2018  loss_rpn_cls: 0.1339  loss_rpn_loc: 0.3665  time: 0.1551  data_time: 0.0170  lr: 0.02  max_mem: 1823M
[32m[09/15 14:36:05 d2.utils.events]: [0m eta: 0:08:18  iter: 1799  total_loss: 1.314  loss_cls: 0.1992  loss_box_reg: 0.3984  loss_mask: 0.2037  loss_rpn_cls: 0.1439  loss_rpn_loc: 0.3848  time: 0.1551  data_time: 0.0156  lr: 0.02  max_mem: 1823M
[32m[09/15 14:36:08 d2.utils.events]: [0m eta: 0:08:15  iter: 1819  total_loss: 1.333  loss_cls: 0.2142  loss_box_reg: 0.4237  loss_mask: 0.2002  loss_rpn_cls: 0.1435  loss_rpn_loc: 0.3683  time: 0.1552  data_time: 0.0169  lr: 0.02  max_mem: 1823M
[32m[09/15 14:36:11 d2.utils.events]: [0m eta: 0:08:13  iter: 1839  total_loss: 1.275  loss_cls: 0.1965  loss_box_reg: 0.4138  loss_mask: 0.1866  loss_rpn_cls: 0.1197  loss_rpn_loc: 0.3431  time: 0.1552  data_time: 0.0173  lr: 0.02  max_mem: 1823M
[32m[09/15 14:36:14 d2.utils.events]: [0m eta: 0:08:09  iter: 1859  total_loss: 1.293  loss_cls: 0.2212  loss_box_reg: 0.4116  loss_mask: 0.1957  loss_rpn_cls: 0.1235  loss_rpn_loc: 0.352  time: 0.1552  data_time: 0.0166  lr: 0.02  max_mem: 1823M
[32m[09/15 14:36:17 d2.utils.events]: [0m eta: 0:08:06  iter: 1879  total_loss: 1.324  loss_cls: 0.2086  loss_box_reg: 0.4315  loss_mask: 0.2074  loss_rpn_cls: 0.1528  loss_rpn_loc: 0.3672  time: 0.1552  data_time: 0.0165  lr: 0.02  max_mem: 1823M
[32m[09/15 14:36:20 d2.utils.events]: [0m eta: 0:08:03  iter: 1899  total_loss: 1.32  loss_cls: 0.222  loss_box_reg: 0.4059  loss_mask: 0.1811  loss_rpn_cls: 0.1767  loss_rpn_loc: 0.3636  time: 0.1552  data_time: 0.0160  lr: 0.02  max_mem: 1823M
[32m[09/15 14:36:24 d2.utils.events]: [0m eta: 0:08:00  iter: 1919  total_loss: 1.295  loss_cls: 0.2036  loss_box_reg: 0.3937  loss_mask: 0.1924  loss_rpn_cls: 0.1309  loss_rpn_loc: 0.3546  time: 0.1552  data_time: 0.0166  lr: 0.02  max_mem: 1823M
[32m[09/15 14:36:27 d2.utils.events]: [0m eta: 0:07:56  iter: 1939  total_loss: 1.268  loss_cls: 0.1802  loss_box_reg: 0.3922  loss_mask: 0.179  loss_rpn_cls: 0.1448  loss_rpn_loc: 0.3697  time: 0.1551  data_time: 0.0159  lr: 0.02  max_mem: 1823M
[32m[09/15 14:36:30 d2.utils.events]: [0m eta: 0:07:53  iter: 1959  total_loss: 1.213  loss_cls: 0.1981  loss_box_reg: 0.371  loss_mask: 0.1878  loss_rpn_cls: 0.1063  loss_rpn_loc: 0.3444  time: 0.1551  data_time: 0.0170  lr: 0.02  max_mem: 1823M
[32m[09/15 14:36:33 d2.utils.events]: [0m eta: 0:07:50  iter: 1979  total_loss: 1.338  loss_cls: 0.2177  loss_box_reg: 0.4194  loss_mask: 0.1974  loss_rpn_cls: 0.1133  loss_rpn_loc: 0.3686  time: 0.1551  data_time: 0.0167  lr: 0.02  max_mem: 1823M
[32m[09/15 14:36:37 d2.utils.events]: [0m eta: 0:07:47  iter: 1999  total_loss: 1.348  loss_cls: 0.2038  loss_box_reg: 0.403  loss_mask: 0.206  loss_rpn_cls: 0.1679  loss_rpn_loc: 0.3842  time: 0.1552  data_time: 0.0163  lr: 0.02  max_mem: 1823M
[32m[09/15 14:36:40 d2.utils.events]: [0m eta: 0:07:43  iter: 2019  total_loss: 1.324  loss_cls: 0.2023  loss_box_reg: 0.3853  loss_mask: 0.1957  loss_rpn_cls: 0.1483  loss_rpn_loc: 0.3787  time: 0.1551  data_time: 0.0159  lr: 0.02  max_mem: 1823M
[32m[09/15 14:36:43 d2.utils.events]: [0m eta: 0:07:40  iter: 2039  total_loss: 1.325  loss_cls: 0.2016  loss_box_reg: 0.3925  loss_mask: 0.1987  loss_rpn_cls: 0.1362  loss_rpn_loc: 0.3612  time: 0.1552  data_time: 0.0167  lr: 0.02  max_mem: 1823M
[32m[09/15 14:36:46 d2.utils.events]: [0m eta: 0:07:37  iter: 2059  total_loss: 1.294  loss_cls: 0.1888  loss_box_reg: 0.3754  loss_mask: 0.1938  loss_rpn_cls: 0.1444  loss_rpn_loc: 0.4411  time: 0.1551  data_time: 0.0162  lr: 0.02  max_mem: 1823M
[32m[09/15 14:36:49 d2.utils.events]: [0m eta: 0:07:34  iter: 2079  total_loss: 1.269  loss_cls: 0.1855  loss_box_reg: 0.379  loss_mask: 0.1911  loss_rpn_cls: 0.1228  loss_rpn_loc: 0.3717  time: 0.1552  data_time: 0.0169  lr: 0.02  max_mem: 1823M
[32m[09/15 14:36:53 d2.utils.events]: [0m eta: 0:07:31  iter: 2099  total_loss: 1.34  loss_cls: 0.1963  loss_box_reg: 0.3865  loss_mask: 0.1968  loss_rpn_cls: 0.1673  loss_rpn_loc: 0.3643  time: 0.1552  data_time: 0.0166  lr: 0.02  max_mem: 1823M
[32m[09/15 14:36:56 d2.utils.events]: [0m eta: 0:07:28  iter: 2119  total_loss: 1.228  loss_cls: 0.1975  loss_box_reg: 0.3849  loss_mask: 0.1899  loss_rpn_cls: 0.1214  loss_rpn_loc: 0.3573  time: 0.1552  data_time: 0.0164  lr: 0.02  max_mem: 1823M
[32m[09/15 14:36:59 d2.utils.events]: [0m eta: 0:07:24  iter: 2139  total_loss: 1.236  loss_cls: 0.1732  loss_box_reg: 0.3583  loss_mask: 0.1895  loss_rpn_cls: 0.123  loss_rpn_loc: 0.3531  time: 0.1552  data_time: 0.0170  lr: 0.02  max_mem: 1823M
[32m[09/15 14:37:02 d2.utils.events]: [0m eta: 0:07:21  iter: 2159  total_loss: 1.229  loss_cls: 0.1829  loss_box_reg: 0.3869  loss_mask: 0.1868  loss_rpn_cls: 0.1294  loss_rpn_loc: 0.3568  time: 0.1552  data_time: 0.0163  lr: 0.02  max_mem: 1823M
[32m[09/15 14:37:05 d2.utils.events]: [0m eta: 0:07:18  iter: 2179  total_loss: 1.257  loss_cls: 0.1824  loss_box_reg: 0.3722  loss_mask: 0.1874  loss_rpn_cls: 0.1544  loss_rpn_loc: 0.3453  time: 0.1552  data_time: 0.0168  lr: 0.02  max_mem: 1823M
[32m[09/15 14:37:08 d2.utils.events]: [0m eta: 0:07:15  iter: 2199  total_loss: 1.342  loss_cls: 0.205  loss_box_reg: 0.3695  loss_mask: 0.1822  loss_rpn_cls: 0.1966  loss_rpn_loc: 0.3891  time: 0.1552  data_time: 0.0167  lr: 0.02  max_mem: 1823M
[32m[09/15 14:37:12 d2.utils.events]: [0m eta: 0:07:12  iter: 2219  total_loss: 1.347  loss_cls: 0.2095  loss_box_reg: 0.3969  loss_mask: 0.1974  loss_rpn_cls: 0.1346  loss_rpn_loc: 0.3608  time: 0.1552  data_time: 0.0158  lr: 0.02  max_mem: 1823M
[32m[09/15 14:37:15 d2.utils.events]: [0m eta: 0:07:09  iter: 2239  total_loss: 1.273  loss_cls: 0.193  loss_box_reg: 0.3801  loss_mask: 0.2076  loss_rpn_cls: 0.1422  loss_rpn_loc: 0.3631  time: 0.1553  data_time: 0.0170  lr: 0.02  max_mem: 1823M
[32m[09/15 14:37:18 d2.utils.events]: [0m eta: 0:07:06  iter: 2259  total_loss: 1.225  loss_cls: 0.188  loss_box_reg: 0.3563  loss_mask: 0.1936  loss_rpn_cls: 0.1243  loss_rpn_loc: 0.3562  time: 0.1553  data_time: 0.0163  lr: 0.02  max_mem: 1823M
[32m[09/15 14:37:21 d2.utils.events]: [0m eta: 0:07:03  iter: 2279  total_loss: 1.222  loss_cls: 0.1804  loss_box_reg: 0.3764  loss_mask: 0.1902  loss_rpn_cls: 0.1242  loss_rpn_loc: 0.3611  time: 0.1553  data_time: 0.0164  lr: 0.02  max_mem: 1823M
[32m[09/15 14:37:24 d2.utils.events]: [0m eta: 0:06:59  iter: 2299  total_loss: 1.316  loss_cls: 0.2115  loss_box_reg: 0.3983  loss_mask: 0.1987  loss_rpn_cls: 0.1294  loss_rpn_loc: 0.3317  time: 0.1553  data_time: 0.0160  lr: 0.02  max_mem: 1823M
[32m[09/15 14:37:27 d2.utils.events]: [0m eta: 0:06:56  iter: 2319  total_loss: 1.268  loss_cls: 0.1959  loss_box_reg: 0.4033  loss_mask: 0.2012  loss_rpn_cls: 0.1141  loss_rpn_loc: 0.3384  time: 0.1553  data_time: 0.0163  lr: 0.02  max_mem: 1823M
[32m[09/15 14:37:30 d2.utils.events]: [0m eta: 0:06:53  iter: 2339  total_loss: 1.208  loss_cls: 0.1614  loss_box_reg: 0.3442  loss_mask: 0.1815  loss_rpn_cls: 0.1387  loss_rpn_loc: 0.36  time: 0.1553  data_time: 0.0165  lr: 0.02  max_mem: 1823M
[32m[09/15 14:37:34 d2.utils.events]: [0m eta: 0:06:50  iter: 2359  total_loss: 1.181  loss_cls: 0.1802  loss_box_reg: 0.3669  loss_mask: 0.1819  loss_rpn_cls: 0.1083  loss_rpn_loc: 0.342  time: 0.1553  data_time: 0.0167  lr: 0.02  max_mem: 1823M
[32m[09/15 14:37:37 d2.utils.events]: [0m eta: 0:06:48  iter: 2379  total_loss: 1.187  loss_cls: 0.1681  loss_box_reg: 0.3749  loss_mask: 0.1726  loss_rpn_cls: 0.1251  loss_rpn_loc: 0.3169  time: 0.1553  data_time: 0.0164  lr: 0.02  max_mem: 1823M
[32m[09/15 14:37:40 d2.utils.events]: [0m eta: 0:06:44  iter: 2399  total_loss: 1.154  loss_cls: 0.1789  loss_box_reg: 0.3669  loss_mask: 0.1768  loss_rpn_cls: 0.143  loss_rpn_loc: 0.3294  time: 0.1552  data_time: 0.0162  lr: 0.02  max_mem: 1823M
[32m[09/15 14:37:43 d2.utils.events]: [0m eta: 0:06:41  iter: 2419  total_loss: 1.236  loss_cls: 0.1942  loss_box_reg: 0.3933  loss_mask: 0.1901  loss_rpn_cls: 0.1167  loss_rpn_loc: 0.3332  time: 0.1553  data_time: 0.0168  lr: 0.02  max_mem: 1823M
[32m[09/15 14:37:46 d2.utils.events]: [0m eta: 0:06:38  iter: 2439  total_loss: 1.255  loss_cls: 0.191  loss_box_reg: 0.3768  loss_mask: 0.1846  loss_rpn_cls: 0.1248  loss_rpn_loc: 0.3818  time: 0.1552  data_time: 0.0158  lr: 0.02  max_mem: 1823M
[32m[09/15 14:37:49 d2.utils.events]: [0m eta: 0:06:34  iter: 2459  total_loss: 1.21  loss_cls: 0.1511  loss_box_reg: 0.3374  loss_mask: 0.1874  loss_rpn_cls: 0.1381  loss_rpn_loc: 0.3799  time: 0.1552  data_time: 0.0170  lr: 0.02  max_mem: 1823M
[32m[09/15 14:37:52 d2.utils.events]: [0m eta: 0:06:31  iter: 2479  total_loss: 1.162  loss_cls: 0.1646  loss_box_reg: 0.3531  loss_mask: 0.1842  loss_rpn_cls: 0.1105  loss_rpn_loc: 0.3451  time: 0.1552  data_time: 0.0163  lr: 0.02  max_mem: 1823M
[32m[09/15 14:37:55 d2.utils.events]: [0m eta: 0:06:28  iter: 2499  total_loss: 1.197  loss_cls: 0.1778  loss_box_reg: 0.3718  loss_mask: 0.1778  loss_rpn_cls: 0.1465  loss_rpn_loc: 0.3308  time: 0.1552  data_time: 0.0164  lr: 0.02  max_mem: 1823M
[32m[09/15 14:37:58 d2.utils.events]: [0m eta: 0:06:24  iter: 2519  total_loss: 1.219  loss_cls: 0.1769  loss_box_reg: 0.3784  loss_mask: 0.1747  loss_rpn_cls: 0.1262  loss_rpn_loc: 0.3368  time: 0.1552  data_time: 0.0170  lr: 0.02  max_mem: 1823M
[32m[09/15 14:38:02 d2.utils.events]: [0m eta: 0:06:21  iter: 2539  total_loss: 1.158  loss_cls: 0.1714  loss_box_reg: 0.3532  loss_mask: 0.1795  loss_rpn_cls: 0.1254  loss_rpn_loc: 0.3407  time: 0.1552  data_time: 0.0169  lr: 0.02  max_mem: 1823M
[32m[09/15 14:38:05 d2.utils.events]: [0m eta: 0:06:18  iter: 2559  total_loss: 1.095  loss_cls: 0.1511  loss_box_reg: 0.3417  loss_mask: 0.1695  loss_rpn_cls: 0.1268  loss_rpn_loc: 0.3378  time: 0.1551  data_time: 0.0163  lr: 0.02  max_mem: 1823M
[32m[09/15 14:38:08 d2.utils.events]: [0m eta: 0:06:14  iter: 2579  total_loss: 1.139  loss_cls: 0.1725  loss_box_reg: 0.3664  loss_mask: 0.1894  loss_rpn_cls: 0.09611  loss_rpn_loc: 0.3277  time: 0.1551  data_time: 0.0168  lr: 0.02  max_mem: 1823M
[32m[09/15 14:38:11 d2.utils.events]: [0m eta: 0:06:11  iter: 2599  total_loss: 1.13  loss_cls: 0.1815  loss_box_reg: 0.3758  loss_mask: 0.1713  loss_rpn_cls: 0.1017  loss_rpn_loc: 0.311  time: 0.1551  data_time: 0.0166  lr: 0.02  max_mem: 1823M
[32m[09/15 14:38:14 d2.utils.events]: [0m eta: 0:06:08  iter: 2619  total_loss: 1.157  loss_cls: 0.1734  loss_box_reg: 0.3796  loss_mask: 0.1796  loss_rpn_cls: 0.09077  loss_rpn_loc: 0.3014  time: 0.1552  data_time: 0.0169  lr: 0.02  max_mem: 1823M
[32m[09/15 14:38:17 d2.utils.events]: [0m eta: 0:06:05  iter: 2639  total_loss: 1.196  loss_cls: 0.184  loss_box_reg: 0.3718  loss_mask: 0.1737  loss_rpn_cls: 0.1083  loss_rpn_loc: 0.3334  time: 0.1552  data_time: 0.0159  lr: 0.02  max_mem: 1823M
[32m[09/15 14:38:21 d2.utils.events]: [0m eta: 0:06:02  iter: 2659  total_loss: 1.153  loss_cls: 0.1594  loss_box_reg: 0.3517  loss_mask: 0.1769  loss_rpn_cls: 0.1279  loss_rpn_loc: 0.3458  time: 0.1552  data_time: 0.0157  lr: 0.02  max_mem: 1823M
[32m[09/15 14:38:24 d2.utils.events]: [0m eta: 0:05:59  iter: 2679  total_loss: 1.261  loss_cls: 0.181  loss_box_reg: 0.3613  loss_mask: 0.1914  loss_rpn_cls: 0.1175  loss_rpn_loc: 0.3396  time: 0.1553  data_time: 0.0166  lr: 0.02  max_mem: 1823M
[32m[09/15 14:38:27 d2.utils.events]: [0m eta: 0:05:55  iter: 2699  total_loss: 1.171  loss_cls: 0.1816  loss_box_reg: 0.3741  loss_mask: 0.185  loss_rpn_cls: 0.1105  loss_rpn_loc: 0.3107  time: 0.1553  data_time: 0.0161  lr: 0.02  max_mem: 1823M
[32m[09/15 14:38:30 d2.utils.events]: [0m eta: 0:05:52  iter: 2719  total_loss: 1.262  loss_cls: 0.1967  loss_box_reg: 0.3808  loss_mask: 0.1919  loss_rpn_cls: 0.1184  loss_rpn_loc: 0.3237  time: 0.1552  data_time: 0.0167  lr: 0.02  max_mem: 1823M
[32m[09/15 14:38:33 d2.utils.events]: [0m eta: 0:05:49  iter: 2739  total_loss: 1.166  loss_cls: 0.1805  loss_box_reg: 0.3568  loss_mask: 0.1783  loss_rpn_cls: 0.1133  loss_rpn_loc: 0.3346  time: 0.1552  data_time: 0.0165  lr: 0.02  max_mem: 1823M
[32m[09/15 14:38:36 d2.utils.events]: [0m eta: 0:05:46  iter: 2759  total_loss: 1.178  loss_cls: 0.1799  loss_box_reg: 0.3632  loss_mask: 0.1825  loss_rpn_cls: 0.1096  loss_rpn_loc: 0.3132  time: 0.1552  data_time: 0.0160  lr: 0.02  max_mem: 1823M
[32m[09/15 14:38:39 d2.utils.events]: [0m eta: 0:05:43  iter: 2779  total_loss: 1.096  loss_cls: 0.1647  loss_box_reg: 0.3581  loss_mask: 0.1748  loss_rpn_cls: 0.1052  loss_rpn_loc: 0.3138  time: 0.1552  data_time: 0.0169  lr: 0.02  max_mem: 1823M
[32m[09/15 14:38:43 d2.utils.events]: [0m eta: 0:05:40  iter: 2799  total_loss: 1.143  loss_cls: 0.1824  loss_box_reg: 0.3611  loss_mask: 0.1726  loss_rpn_cls: 0.108  loss_rpn_loc: 0.3241  time: 0.1552  data_time: 0.0166  lr: 0.02  max_mem: 1823M
[32m[09/15 14:38:46 d2.utils.events]: [0m eta: 0:05:36  iter: 2819  total_loss: 1.186  loss_cls: 0.1654  loss_box_reg: 0.3565  loss_mask: 0.1844  loss_rpn_cls: 0.1165  loss_rpn_loc: 0.355  time: 0.1552  data_time: 0.0162  lr: 0.02  max_mem: 1823M
[32m[09/15 14:38:49 d2.utils.events]: [0m eta: 0:05:33  iter: 2839  total_loss: 1.158  loss_cls: 0.1662  loss_box_reg: 0.3805  loss_mask: 0.172  loss_rpn_cls: 0.1197  loss_rpn_loc: 0.3101  time: 0.1552  data_time: 0.0169  lr: 0.02  max_mem: 1823M
[32m[09/15 14:38:52 d2.utils.events]: [0m eta: 0:05:30  iter: 2859  total_loss: 1.146  loss_cls: 0.177  loss_box_reg: 0.3763  loss_mask: 0.1715  loss_rpn_cls: 0.1264  loss_rpn_loc: 0.3365  time: 0.1552  data_time: 0.0163  lr: 0.02  max_mem: 1823M
[32m[09/15 14:38:55 d2.utils.events]: [0m eta: 0:05:27  iter: 2879  total_loss: 1.183  loss_cls: 0.2  loss_box_reg: 0.381  loss_mask: 0.1643  loss_rpn_cls: 0.1112  loss_rpn_loc: 0.3263  time: 0.1552  data_time: 0.0162  lr: 0.02  max_mem: 1823M
[32m[09/15 14:38:58 d2.utils.events]: [0m eta: 0:05:24  iter: 2899  total_loss: 1.164  loss_cls: 0.1649  loss_box_reg: 0.3718  loss_mask: 0.1748  loss_rpn_cls: 0.09378  loss_rpn_loc: 0.3217  time: 0.1552  data_time: 0.0164  lr: 0.02  max_mem: 1823M
[32m[09/15 14:39:01 d2.utils.events]: [0m eta: 0:05:21  iter: 2919  total_loss: 1.191  loss_cls: 0.1576  loss_box_reg: 0.3499  loss_mask: 0.1889  loss_rpn_cls: 0.1141  loss_rpn_loc: 0.365  time: 0.1552  data_time: 0.0168  lr: 0.02  max_mem: 1823M
[32m[09/15 14:39:04 d2.utils.events]: [0m eta: 0:05:18  iter: 2939  total_loss: 1.143  loss_cls: 0.1736  loss_box_reg: 0.3471  loss_mask: 0.1711  loss_rpn_cls: 0.09995  loss_rpn_loc: 0.3409  time: 0.1552  data_time: 0.0170  lr: 0.02  max_mem: 1823M
[32m[09/15 14:39:07 d2.utils.events]: [0m eta: 0:05:14  iter: 2959  total_loss: 1.073  loss_cls: 0.1763  loss_box_reg: 0.3658  loss_mask: 0.1708  loss_rpn_cls: 0.1037  loss_rpn_loc: 0.3037  time: 0.1552  data_time: 0.0157  lr: 0.02  max_mem: 1823M
[32m[09/15 14:39:11 d2.utils.events]: [0m eta: 0:05:11  iter: 2979  total_loss: 1.089  loss_cls: 0.1741  loss_box_reg: 0.3438  loss_mask: 0.171  loss_rpn_cls: 0.1041  loss_rpn_loc: 0.3013  time: 0.1552  data_time: 0.0167  lr: 0.02  max_mem: 1823M
[32m[09/15 14:39:15 d2.utils.events]: [0m eta: 0:05:08  iter: 2999  total_loss: 1.163  loss_cls: 0.1683  loss_box_reg: 0.3595  loss_mask: 0.1732  loss_rpn_cls: 0.09379  loss_rpn_loc: 0.3495  time: 0.1552  data_time: 0.0165  lr: 0.02  max_mem: 1823M
[32m[09/15 14:39:18 d2.utils.events]: [0m eta: 0:05:05  iter: 3019  total_loss: 1.113  loss_cls: 0.1766  loss_box_reg: 0.3535  loss_mask: 0.1665  loss_rpn_cls: 0.08617  loss_rpn_loc: 0.3356  time: 0.1552  data_time: 0.0169  lr: 0.02  max_mem: 1823M
[32m[09/15 14:39:21 d2.utils.events]: [0m eta: 0:05:02  iter: 3039  total_loss: 1.155  loss_cls: 0.1684  loss_box_reg: 0.3507  loss_mask: 0.1645  loss_rpn_cls: 0.1153  loss_rpn_loc: 0.3334  time: 0.1552  data_time: 0.0160  lr: 0.02  max_mem: 1823M
[32m[09/15 14:39:24 d2.utils.events]: [0m eta: 0:04:59  iter: 3059  total_loss: 1.121  loss_cls: 0.1639  loss_box_reg: 0.3656  loss_mask: 0.1745  loss_rpn_cls: 0.1173  loss_rpn_loc: 0.295  time: 0.1552  data_time: 0.0164  lr: 0.02  max_mem: 1823M
[32m[09/15 14:39:27 d2.utils.events]: [0m eta: 0:04:56  iter: 3079  total_loss: 1.14  loss_cls: 0.1842  loss_box_reg: 0.3538  loss_mask: 0.1678  loss_rpn_cls: 0.1005  loss_rpn_loc: 0.3487  time: 0.1552  data_time: 0.0168  lr: 0.02  max_mem: 1823M
[32m[09/15 14:39:30 d2.utils.events]: [0m eta: 0:04:53  iter: 3099  total_loss: 1.131  loss_cls: 0.163  loss_box_reg: 0.3507  loss_mask: 0.1715  loss_rpn_cls: 0.1116  loss_rpn_loc: 0.3339  time: 0.1552  data_time: 0.0162  lr: 0.02  max_mem: 1823M
[32m[09/15 14:39:33 d2.utils.events]: [0m eta: 0:04:50  iter: 3119  total_loss: 1.075  loss_cls: 0.1647  loss_box_reg: 0.3474  loss_mask: 0.1639  loss_rpn_cls: 0.1024  loss_rpn_loc: 0.2982  time: 0.1552  data_time: 0.0171  lr: 0.02  max_mem: 1823M
[32m[09/15 14:39:37 d2.utils.events]: [0m eta: 0:04:46  iter: 3139  total_loss: 1.09  loss_cls: 0.1536  loss_box_reg: 0.3434  loss_mask: 0.1637  loss_rpn_cls: 0.1019  loss_rpn_loc: 0.2954  time: 0.1552  data_time: 0.0159  lr: 0.02  max_mem: 1823M
[32m[09/15 14:39:40 d2.utils.events]: [0m eta: 0:04:43  iter: 3159  total_loss: 1.174  loss_cls: 0.1801  loss_box_reg: 0.3612  loss_mask: 0.1687  loss_rpn_cls: 0.12  loss_rpn_loc: 0.3192  time: 0.1552  data_time: 0.0154  lr: 0.02  max_mem: 1823M
[32m[09/15 14:39:43 d2.utils.events]: [0m eta: 0:04:41  iter: 3179  total_loss: 1.081  loss_cls: 0.1703  loss_box_reg: 0.3425  loss_mask: 0.1685  loss_rpn_cls: 0.1122  loss_rpn_loc: 0.3044  time: 0.1552  data_time: 0.0171  lr: 0.02  max_mem: 1823M
[32m[09/15 14:39:46 d2.utils.events]: [0m eta: 0:04:37  iter: 3199  total_loss: 1.176  loss_cls: 0.1799  loss_box_reg: 0.3706  loss_mask: 0.1763  loss_rpn_cls: 0.1184  loss_rpn_loc: 0.3186  time: 0.1552  data_time: 0.0163  lr: 0.02  max_mem: 1823M
[32m[09/15 14:39:49 d2.utils.events]: [0m eta: 0:04:34  iter: 3219  total_loss: 1.099  loss_cls: 0.1595  loss_box_reg: 0.3614  loss_mask: 0.1711  loss_rpn_cls: 0.08512  loss_rpn_loc: 0.3015  time: 0.1552  data_time: 0.0171  lr: 0.02  max_mem: 1823M
[32m[09/15 14:39:52 d2.utils.events]: [0m eta: 0:04:31  iter: 3239  total_loss: 1.083  loss_cls: 0.1599  loss_box_reg: 0.3487  loss_mask: 0.173  loss_rpn_cls: 0.09427  loss_rpn_loc: 0.3082  time: 0.1553  data_time: 0.0154  lr: 0.02  max_mem: 1823M
[32m[09/15 14:39:55 d2.utils.events]: [0m eta: 0:04:28  iter: 3259  total_loss: 1.069  loss_cls: 0.153  loss_box_reg: 0.3561  loss_mask: 0.1689  loss_rpn_cls: 0.09395  loss_rpn_loc: 0.3084  time: 0.1553  data_time: 0.0166  lr: 0.02  max_mem: 1823M
[32m[09/15 14:39:59 d2.utils.events]: [0m eta: 0:04:25  iter: 3279  total_loss: 1.031  loss_cls: 0.1361  loss_box_reg: 0.342  loss_mask: 0.173  loss_rpn_cls: 0.1001  loss_rpn_loc: 0.301  time: 0.1553  data_time: 0.0170  lr: 0.02  max_mem: 1823M
[32m[09/15 14:40:02 d2.utils.events]: [0m eta: 0:04:22  iter: 3299  total_loss: 1.119  loss_cls: 0.1546  loss_box_reg: 0.341  loss_mask: 0.1653  loss_rpn_cls: 0.1152  loss_rpn_loc: 0.322  time: 0.1553  data_time: 0.0161  lr: 0.02  max_mem: 1823M
[32m[09/15 14:40:05 d2.utils.events]: [0m eta: 0:04:19  iter: 3319  total_loss: 1.093  loss_cls: 0.1738  loss_box_reg: 0.3688  loss_mask: 0.164  loss_rpn_cls: 0.09517  loss_rpn_loc: 0.2989  time: 0.1553  data_time: 0.0168  lr: 0.02  max_mem: 1823M
[32m[09/15 14:40:08 d2.utils.events]: [0m eta: 0:04:16  iter: 3339  total_loss: 1.162  loss_cls: 0.1945  loss_box_reg: 0.3737  loss_mask: 0.1837  loss_rpn_cls: 0.1131  loss_rpn_loc: 0.3202  time: 0.1553  data_time: 0.0149  lr: 0.02  max_mem: 1823M
[32m[09/15 14:40:11 d2.utils.events]: [0m eta: 0:04:13  iter: 3359  total_loss: 1.173  loss_cls: 0.1722  loss_box_reg: 0.3735  loss_mask: 0.1844  loss_rpn_cls: 0.1168  loss_rpn_loc: 0.3036  time: 0.1553  data_time: 0.0170  lr: 0.02  max_mem: 1823M
[32m[09/15 14:40:14 d2.utils.events]: [0m eta: 0:04:09  iter: 3379  total_loss: 1.099  loss_cls: 0.1632  loss_box_reg: 0.3736  loss_mask: 0.1728  loss_rpn_cls: 0.08231  loss_rpn_loc: 0.2979  time: 0.1553  data_time: 0.0168  lr: 0.02  max_mem: 1823M
[32m[09/15 14:40:18 d2.utils.events]: [0m eta: 0:04:06  iter: 3399  total_loss: 1.167  loss_cls: 0.177  loss_box_reg: 0.3692  loss_mask: 0.1778  loss_rpn_cls: 0.1118  loss_rpn_loc: 0.3007  time: 0.1553  data_time: 0.0169  lr: 0.02  max_mem: 1823M
[32m[09/15 14:40:21 d2.utils.events]: [0m eta: 0:04:03  iter: 3419  total_loss: 1.126  loss_cls: 0.1924  loss_box_reg: 0.359  loss_mask: 0.1761  loss_rpn_cls: 0.1149  loss_rpn_loc: 0.2828  time: 0.1553  data_time: 0.0158  lr: 0.02  max_mem: 1823M
[32m[09/15 14:40:24 d2.utils.events]: [0m eta: 0:04:00  iter: 3439  total_loss: 1.077  loss_cls: 0.145  loss_box_reg: 0.3483  loss_mask: 0.1749  loss_rpn_cls: 0.09936  loss_rpn_loc: 0.2893  time: 0.1553  data_time: 0.0161  lr: 0.02  max_mem: 1823M
[32m[09/15 14:40:27 d2.utils.events]: [0m eta: 0:03:57  iter: 3459  total_loss: 1.087  loss_cls: 0.1611  loss_box_reg: 0.3366  loss_mask: 0.1694  loss_rpn_cls: 0.1194  loss_rpn_loc: 0.3146  time: 0.1553  data_time: 0.0166  lr: 0.02  max_mem: 1823M
[32m[09/15 14:40:30 d2.utils.events]: [0m eta: 0:03:54  iter: 3479  total_loss: 1.106  loss_cls: 0.1475  loss_box_reg: 0.3209  loss_mask: 0.1665  loss_rpn_cls: 0.1099  loss_rpn_loc: 0.3276  time: 0.1553  data_time: 0.0165  lr: 0.02  max_mem: 1823M
[32m[09/15 14:40:33 d2.utils.events]: [0m eta: 0:03:51  iter: 3499  total_loss: 1.047  loss_cls: 0.1608  loss_box_reg: 0.346  loss_mask: 0.1656  loss_rpn_cls: 0.09178  loss_rpn_loc: 0.3094  time: 0.1552  data_time: 0.0159  lr: 0.02  max_mem: 1823M
[32m[09/15 14:40:36 d2.utils.events]: [0m eta: 0:03:48  iter: 3519  total_loss: 1.11  loss_cls: 0.1651  loss_box_reg: 0.345  loss_mask: 0.166  loss_rpn_cls: 0.1081  loss_rpn_loc: 0.314  time: 0.1552  data_time: 0.0168  lr: 0.02  max_mem: 1823M
[32m[09/15 14:40:39 d2.utils.events]: [0m eta: 0:03:45  iter: 3539  total_loss: 1.155  loss_cls: 0.1869  loss_box_reg: 0.3527  loss_mask: 0.1722  loss_rpn_cls: 0.1395  loss_rpn_loc: 0.3051  time: 0.1552  data_time: 0.0160  lr: 0.02  max_mem: 1823M
[32m[09/15 14:40:42 d2.utils.events]: [0m eta: 0:03:42  iter: 3559  total_loss: 1.13  loss_cls: 0.1716  loss_box_reg: 0.3525  loss_mask: 0.1725  loss_rpn_cls: 0.09564  loss_rpn_loc: 0.314  time: 0.1552  data_time: 0.0165  lr: 0.02  max_mem: 1823M
[32m[09/15 14:40:45 d2.utils.events]: [0m eta: 0:03:39  iter: 3579  total_loss: 1.143  loss_cls: 0.1773  loss_box_reg: 0.3607  loss_mask: 0.1806  loss_rpn_cls: 0.1003  loss_rpn_loc: 0.3113  time: 0.1552  data_time: 0.0159  lr: 0.02  max_mem: 1823M
[32m[09/15 14:40:48 d2.utils.events]: [0m eta: 0:03:36  iter: 3599  total_loss: 1.113  loss_cls: 0.1627  loss_box_reg: 0.3404  loss_mask: 0.1645  loss_rpn_cls: 0.1245  loss_rpn_loc: 0.3078  time: 0.1552  data_time: 0.0169  lr: 0.02  max_mem: 1823M
[32m[09/15 14:40:51 d2.utils.events]: [0m eta: 0:03:33  iter: 3619  total_loss: 1.085  loss_cls: 0.1507  loss_box_reg: 0.3379  loss_mask: 0.1625  loss_rpn_cls: 0.09561  loss_rpn_loc: 0.314  time: 0.1552  data_time: 0.0169  lr: 0.02  max_mem: 1823M
[32m[09/15 14:40:55 d2.utils.events]: [0m eta: 0:03:29  iter: 3639  total_loss: 1.091  loss_cls: 0.1678  loss_box_reg: 0.3506  loss_mask: 0.1674  loss_rpn_cls: 0.09475  loss_rpn_loc: 0.3086  time: 0.1552  data_time: 0.0146  lr: 0.02  max_mem: 1823M
[32m[09/15 14:40:58 d2.utils.events]: [0m eta: 0:03:26  iter: 3659  total_loss: 1.077  loss_cls: 0.1545  loss_box_reg: 0.3509  loss_mask: 0.1636  loss_rpn_cls: 0.09995  loss_rpn_loc: 0.3209  time: 0.1552  data_time: 0.0166  lr: 0.02  max_mem: 1823M
[32m[09/15 14:41:01 d2.utils.events]: [0m eta: 0:03:23  iter: 3679  total_loss: 1.037  loss_cls: 0.1525  loss_box_reg: 0.3335  loss_mask: 0.1531  loss_rpn_cls: 0.0991  loss_rpn_loc: 0.2899  time: 0.1552  data_time: 0.0165  lr: 0.02  max_mem: 1823M
[32m[09/15 14:41:04 d2.utils.events]: [0m eta: 0:03:20  iter: 3699  total_loss: 1.127  loss_cls: 0.1698  loss_box_reg: 0.3679  loss_mask: 0.1679  loss_rpn_cls: 0.1137  loss_rpn_loc: 0.3244  time: 0.1552  data_time: 0.0154  lr: 0.02  max_mem: 1823M
[32m[09/15 14:41:07 d2.utils.events]: [0m eta: 0:03:17  iter: 3719  total_loss: 1.094  loss_cls: 0.1743  loss_box_reg: 0.353  loss_mask: 0.1555  loss_rpn_cls: 0.1027  loss_rpn_loc: 0.2994  time: 0.1552  data_time: 0.0168  lr: 0.02  max_mem: 1823M
[32m[09/15 14:41:10 d2.utils.events]: [0m eta: 0:03:14  iter: 3739  total_loss: 1.105  loss_cls: 0.1672  loss_box_reg: 0.343  loss_mask: 0.164  loss_rpn_cls: 0.1259  loss_rpn_loc: 0.3091  time: 0.1552  data_time: 0.0158  lr: 0.02  max_mem: 1823M
[32m[09/15 14:41:13 d2.utils.events]: [0m eta: 0:03:11  iter: 3759  total_loss: 1.077  loss_cls: 0.1652  loss_box_reg: 0.3597  loss_mask: 0.1736  loss_rpn_cls: 0.09993  loss_rpn_loc: 0.2894  time: 0.1552  data_time: 0.0172  lr: 0.02  max_mem: 1823M
[32m[09/15 14:41:16 d2.utils.events]: [0m eta: 0:03:07  iter: 3779  total_loss: 1.065  loss_cls: 0.152  loss_box_reg: 0.3344  loss_mask: 0.1646  loss_rpn_cls: 0.1054  loss_rpn_loc: 0.2962  time: 0.1551  data_time: 0.0159  lr: 0.02  max_mem: 1823M
[32m[09/15 14:41:20 d2.utils.events]: [0m eta: 0:03:04  iter: 3799  total_loss: 1.048  loss_cls: 0.1534  loss_box_reg: 0.3522  loss_mask: 0.1635  loss_rpn_cls: 0.1218  loss_rpn_loc: 0.3008  time: 0.1552  data_time: 0.0148  lr: 0.02  max_mem: 1823M
[32m[09/15 14:41:23 d2.utils.events]: [0m eta: 0:03:01  iter: 3819  total_loss: 1.054  loss_cls: 0.1503  loss_box_reg: 0.3327  loss_mask: 0.1657  loss_rpn_cls: 0.106  loss_rpn_loc: 0.3032  time: 0.1552  data_time: 0.0161  lr: 0.02  max_mem: 1823M
[32m[09/15 14:41:26 d2.utils.events]: [0m eta: 0:02:58  iter: 3839  total_loss: 1.061  loss_cls: 0.1536  loss_box_reg: 0.3346  loss_mask: 0.1497  loss_rpn_cls: 0.1258  loss_rpn_loc: 0.287  time: 0.1551  data_time: 0.0163  lr: 0.02  max_mem: 1823M
[32m[09/15 14:41:29 d2.utils.events]: [0m eta: 0:02:55  iter: 3859  total_loss: 1.071  loss_cls: 0.1463  loss_box_reg: 0.3441  loss_mask: 0.1592  loss_rpn_cls: 0.09326  loss_rpn_loc: 0.2884  time: 0.1551  data_time: 0.0170  lr: 0.02  max_mem: 1823M
[32m[09/15 14:41:32 d2.utils.events]: [0m eta: 0:02:52  iter: 3879  total_loss: 1.059  loss_cls: 0.1434  loss_box_reg: 0.3541  loss_mask: 0.1699  loss_rpn_cls: 0.08885  loss_rpn_loc: 0.291  time: 0.1552  data_time: 0.0164  lr: 0.02  max_mem: 1823M
[32m[09/15 14:41:35 d2.utils.events]: [0m eta: 0:02:49  iter: 3899  total_loss: 1.064  loss_cls: 0.1485  loss_box_reg: 0.3338  loss_mask: 0.168  loss_rpn_cls: 0.108  loss_rpn_loc: 0.3039  time: 0.1551  data_time: 0.0166  lr: 0.02  max_mem: 1823M
[32m[09/15 14:41:38 d2.utils.events]: [0m eta: 0:02:46  iter: 3919  total_loss: 1.017  loss_cls: 0.1383  loss_box_reg: 0.3275  loss_mask: 0.1537  loss_rpn_cls: 0.09053  loss_rpn_loc: 0.2956  time: 0.1551  data_time: 0.0161  lr: 0.02  max_mem: 1823M
[32m[09/15 14:41:41 d2.utils.events]: [0m eta: 0:02:43  iter: 3939  total_loss: 1.049  loss_cls: 0.1645  loss_box_reg: 0.3355  loss_mask: 0.1662  loss_rpn_cls: 0.08696  loss_rpn_loc: 0.3048  time: 0.1551  data_time: 0.0172  lr: 0.02  max_mem: 1823M
[32m[09/15 14:41:44 d2.utils.events]: [0m eta: 0:02:40  iter: 3959  total_loss: 1.044  loss_cls: 0.1504  loss_box_reg: 0.3357  loss_mask: 0.1614  loss_rpn_cls: 0.08453  loss_rpn_loc: 0.2811  time: 0.1551  data_time: 0.0168  lr: 0.02  max_mem: 1823M
[32m[09/15 14:41:47 d2.utils.events]: [0m eta: 0:02:37  iter: 3979  total_loss: 1.019  loss_cls: 0.1504  loss_box_reg: 0.3303  loss_mask: 0.1656  loss_rpn_cls: 0.08898  loss_rpn_loc: 0.2969  time: 0.1551  data_time: 0.0156  lr: 0.02  max_mem: 1823M
[32m[09/15 14:41:52 d2.utils.events]: [0m eta: 0:02:34  iter: 3999  total_loss: 1.055  loss_cls: 0.1605  loss_box_reg: 0.3396  loss_mask: 0.1631  loss_rpn_cls: 0.07381  loss_rpn_loc: 0.2827  time: 0.1551  data_time: 0.0169  lr: 0.02  max_mem: 1823M
[32m[09/15 14:41:55 d2.utils.events]: [0m eta: 0:02:31  iter: 4019  total_loss: 1.027  loss_cls: 0.1627  loss_box_reg: 0.3441  loss_mask: 0.1614  loss_rpn_cls: 0.09782  loss_rpn_loc: 0.291  time: 0.1551  data_time: 0.0157  lr: 0.02  max_mem: 1823M
[32m[09/15 14:41:58 d2.utils.events]: [0m eta: 0:02:28  iter: 4039  total_loss: 1.007  loss_cls: 0.1453  loss_box_reg: 0.3366  loss_mask: 0.1544  loss_rpn_cls: 0.09654  loss_rpn_loc: 0.2832  time: 0.1552  data_time: 0.0163  lr: 0.02  max_mem: 1823M
[32m[09/15 14:42:01 d2.utils.events]: [0m eta: 0:02:25  iter: 4059  total_loss: 1.042  loss_cls: 0.1499  loss_box_reg: 0.3359  loss_mask: 0.1592  loss_rpn_cls: 0.1234  loss_rpn_loc: 0.2724  time: 0.1552  data_time: 0.0167  lr: 0.02  max_mem: 1823M
[32m[09/15 14:42:04 d2.utils.events]: [0m eta: 0:02:21  iter: 4079  total_loss: 1.074  loss_cls: 0.1567  loss_box_reg: 0.3257  loss_mask: 0.1655  loss_rpn_cls: 0.1136  loss_rpn_loc: 0.328  time: 0.1551  data_time: 0.0163  lr: 0.02  max_mem: 1823M
[32m[09/15 14:42:07 d2.utils.events]: [0m eta: 0:02:18  iter: 4099  total_loss: 1.095  loss_cls: 0.1517  loss_box_reg: 0.3277  loss_mask: 0.172  loss_rpn_cls: 0.09911  loss_rpn_loc: 0.313  time: 0.1552  data_time: 0.0157  lr: 0.02  max_mem: 1823M
[32m[09/15 14:42:10 d2.utils.events]: [0m eta: 0:02:15  iter: 4119  total_loss: 1.05  loss_cls: 0.1534  loss_box_reg: 0.3414  loss_mask: 0.1528  loss_rpn_cls: 0.1286  loss_rpn_loc: 0.2815  time: 0.1551  data_time: 0.0158  lr: 0.02  max_mem: 1823M
[32m[09/15 14:42:13 d2.utils.events]: [0m eta: 0:02:12  iter: 4139  total_loss: 1.054  loss_cls: 0.1661  loss_box_reg: 0.321  loss_mask: 0.1548  loss_rpn_cls: 0.0919  loss_rpn_loc: 0.3067  time: 0.1551  data_time: 0.0164  lr: 0.02  max_mem: 1823M
[32m[09/15 14:42:17 d2.utils.events]: [0m eta: 0:02:09  iter: 4159  total_loss: 1.022  loss_cls: 0.1551  loss_box_reg: 0.301  loss_mask: 0.1459  loss_rpn_cls: 0.09763  loss_rpn_loc: 0.2977  time: 0.1551  data_time: 0.0163  lr: 0.02  max_mem: 1823M
[32m[09/15 14:42:20 d2.utils.events]: [0m eta: 0:02:06  iter: 4179  total_loss: 1.004  loss_cls: 0.1452  loss_box_reg: 0.3164  loss_mask: 0.1452  loss_rpn_cls: 0.09745  loss_rpn_loc: 0.2745  time: 0.1552  data_time: 0.0160  lr: 0.02  max_mem: 1823M
[32m[09/15 14:42:23 d2.utils.events]: [0m eta: 0:02:03  iter: 4199  total_loss: 1.075  loss_cls: 0.1532  loss_box_reg: 0.3436  loss_mask: 0.1626  loss_rpn_cls: 0.1024  loss_rpn_loc: 0.303  time: 0.1552  data_time: 0.0154  lr: 0.02  max_mem: 1823M
[32m[09/15 14:42:26 d2.utils.events]: [0m eta: 0:02:00  iter: 4219  total_loss: 1.084  loss_cls: 0.176  loss_box_reg: 0.3576  loss_mask: 0.1608  loss_rpn_cls: 0.0862  loss_rpn_loc: 0.3035  time: 0.1552  data_time: 0.0154  lr: 0.02  max_mem: 1823M
[32m[09/15 14:42:29 d2.utils.events]: [0m eta: 0:01:57  iter: 4239  total_loss: 1.058  loss_cls: 0.1474  loss_box_reg: 0.3354  loss_mask: 0.1615  loss_rpn_cls: 0.08562  loss_rpn_loc: 0.3135  time: 0.1552  data_time: 0.0165  lr: 0.02  max_mem: 1823M
[32m[09/15 14:42:32 d2.utils.events]: [0m eta: 0:01:53  iter: 4259  total_loss: 0.9952  loss_cls: 0.1372  loss_box_reg: 0.3259  loss_mask: 0.1635  loss_rpn_cls: 0.07198  loss_rpn_loc: 0.2884  time: 0.1552  data_time: 0.0165  lr: 0.02  max_mem: 1823M
[32m[09/15 14:42:35 d2.utils.events]: [0m eta: 0:01:50  iter: 4279  total_loss: 1.024  loss_cls: 0.145  loss_box_reg: 0.3381  loss_mask: 0.1512  loss_rpn_cls: 0.09103  loss_rpn_loc: 0.2817  time: 0.1551  data_time: 0.0161  lr: 0.02  max_mem: 1823M
[32m[09/15 14:42:38 d2.utils.events]: [0m eta: 0:01:47  iter: 4299  total_loss: 1.062  loss_cls: 0.1587  loss_box_reg: 0.3451  loss_mask: 0.1611  loss_rpn_cls: 0.1172  loss_rpn_loc: 0.2909  time: 0.1551  data_time: 0.0162  lr: 0.02  max_mem: 1823M
[32m[09/15 14:42:41 d2.utils.events]: [0m eta: 0:01:44  iter: 4319  total_loss: 1.051  loss_cls: 0.1582  loss_box_reg: 0.3572  loss_mask: 0.1758  loss_rpn_cls: 0.0805  loss_rpn_loc: 0.2857  time: 0.1551  data_time: 0.0165  lr: 0.02  max_mem: 1823M
[32m[09/15 14:42:45 d2.utils.events]: [0m eta: 0:01:41  iter: 4339  total_loss: 1.045  loss_cls: 0.157  loss_box_reg: 0.3443  loss_mask: 0.1614  loss_rpn_cls: 0.09405  loss_rpn_loc: 0.2749  time: 0.1551  data_time: 0.0158  lr: 0.02  max_mem: 1823M
[32m[09/15 14:42:48 d2.utils.events]: [0m eta: 0:01:38  iter: 4359  total_loss: 1.032  loss_cls: 0.1595  loss_box_reg: 0.3424  loss_mask: 0.161  loss_rpn_cls: 0.1029  loss_rpn_loc: 0.2953  time: 0.1551  data_time: 0.0155  lr: 0.02  max_mem: 1823M
[32m[09/15 14:42:51 d2.utils.events]: [0m eta: 0:01:35  iter: 4379  total_loss: 1.06  loss_cls: 0.1594  loss_box_reg: 0.3434  loss_mask: 0.1664  loss_rpn_cls: 0.09298  loss_rpn_loc: 0.2866  time: 0.1551  data_time: 0.0164  lr: 0.02  max_mem: 1823M
[32m[09/15 14:42:54 d2.utils.events]: [0m eta: 0:01:32  iter: 4399  total_loss: 0.9812  loss_cls: 0.1468  loss_box_reg: 0.3396  loss_mask: 0.1523  loss_rpn_cls: 0.06898  loss_rpn_loc: 0.2821  time: 0.1551  data_time: 0.0155  lr: 0.02  max_mem: 1823M
[32m[09/15 14:42:57 d2.utils.events]: [0m eta: 0:01:29  iter: 4419  total_loss: 1.028  loss_cls: 0.1391  loss_box_reg: 0.3388  loss_mask: 0.1586  loss_rpn_cls: 0.09317  loss_rpn_loc: 0.2806  time: 0.1551  data_time: 0.0165  lr: 0.02  max_mem: 1823M
[32m[09/15 14:43:00 d2.utils.events]: [0m eta: 0:01:25  iter: 4439  total_loss: 0.9796  loss_cls: 0.1368  loss_box_reg: 0.3258  loss_mask: 0.1508  loss_rpn_cls: 0.08252  loss_rpn_loc: 0.2876  time: 0.1551  data_time: 0.0159  lr: 0.02  max_mem: 1823M
[32m[09/15 14:43:03 d2.utils.events]: [0m eta: 0:01:22  iter: 4459  total_loss: 1.022  loss_cls: 0.1384  loss_box_reg: 0.3281  loss_mask: 0.1768  loss_rpn_cls: 0.0867  loss_rpn_loc: 0.2772  time: 0.1551  data_time: 0.0157  lr: 0.02  max_mem: 1823M
[32m[09/15 14:43:06 d2.utils.events]: [0m eta: 0:01:19  iter: 4479  total_loss: 1.005  loss_cls: 0.1462  loss_box_reg: 0.3349  loss_mask: 0.1535  loss_rpn_cls: 0.09018  loss_rpn_loc: 0.2909  time: 0.1550  data_time: 0.0158  lr: 0.02  max_mem: 1823M
[32m[09/15 14:43:09 d2.utils.events]: [0m eta: 0:01:16  iter: 4499  total_loss: 0.9446  loss_cls: 0.125  loss_box_reg: 0.3116  loss_mask: 0.1394  loss_rpn_cls: 0.07195  loss_rpn_loc: 0.273  time: 0.1551  data_time: 0.0158  lr: 0.02  max_mem: 1823M
[32m[09/15 14:43:12 d2.utils.events]: [0m eta: 0:01:13  iter: 4519  total_loss: 1.029  loss_cls: 0.1483  loss_box_reg: 0.3405  loss_mask: 0.1474  loss_rpn_cls: 0.08605  loss_rpn_loc: 0.2809  time: 0.1550  data_time: 0.0153  lr: 0.02  max_mem: 1823M
[32m[09/15 14:43:15 d2.utils.events]: [0m eta: 0:01:10  iter: 4539  total_loss: 0.9929  loss_cls: 0.1343  loss_box_reg: 0.3102  loss_mask: 0.145  loss_rpn_cls: 0.08127  loss_rpn_loc: 0.2782  time: 0.1550  data_time: 0.0164  lr: 0.02  max_mem: 1823M
[32m[09/15 14:43:18 d2.utils.events]: [0m eta: 0:01:07  iter: 4559  total_loss: 1.024  loss_cls: 0.1554  loss_box_reg: 0.3341  loss_mask: 0.1498  loss_rpn_cls: 0.07823  loss_rpn_loc: 0.2643  time: 0.1550  data_time: 0.0156  lr: 0.02  max_mem: 1823M
[32m[09/15 14:43:21 d2.utils.events]: [0m eta: 0:01:04  iter: 4579  total_loss: 1.058  loss_cls: 0.1349  loss_box_reg: 0.3355  loss_mask: 0.1605  loss_rpn_cls: 0.09163  loss_rpn_loc: 0.2743  time: 0.1550  data_time: 0.0164  lr: 0.02  max_mem: 1823M
[32m[09/15 14:43:24 d2.utils.events]: [0m eta: 0:01:01  iter: 4599  total_loss: 0.9743  loss_cls: 0.1357  loss_box_reg: 0.3211  loss_mask: 0.1545  loss_rpn_cls: 0.09033  loss_rpn_loc: 0.2782  time: 0.1549  data_time: 0.0149  lr: 0.02  max_mem: 1823M
[32m[09/15 14:43:27 d2.utils.events]: [0m eta: 0:00:57  iter: 4619  total_loss: 0.9999  loss_cls: 0.1377  loss_box_reg: 0.3291  loss_mask: 0.157  loss_rpn_cls: 0.1019  loss_rpn_loc: 0.2862  time: 0.1549  data_time: 0.0157  lr: 0.02  max_mem: 1823M
[32m[09/15 14:43:30 d2.utils.events]: [0m eta: 0:00:54  iter: 4639  total_loss: 1.028  loss_cls: 0.1493  loss_box_reg: 0.3271  loss_mask: 0.1566  loss_rpn_cls: 0.08159  loss_rpn_loc: 0.2796  time: 0.1549  data_time: 0.0160  lr: 0.02  max_mem: 1823M
[32m[09/15 14:43:33 d2.utils.events]: [0m eta: 0:00:51  iter: 4659  total_loss: 1  loss_cls: 0.1527  loss_box_reg: 0.32  loss_mask: 0.1623  loss_rpn_cls: 0.08511  loss_rpn_loc: 0.2829  time: 0.1549  data_time: 0.0152  lr: 0.02  max_mem: 1823M
[32m[09/15 14:43:36 d2.utils.events]: [0m eta: 0:00:48  iter: 4679  total_loss: 0.9663  loss_cls: 0.1476  loss_box_reg: 0.3329  loss_mask: 0.1545  loss_rpn_cls: 0.09168  loss_rpn_loc: 0.2742  time: 0.1548  data_time: 0.0154  lr: 0.02  max_mem: 1823M
[32m[09/15 14:43:39 d2.utils.events]: [0m eta: 0:00:45  iter: 4699  total_loss: 0.9911  loss_cls: 0.1424  loss_box_reg: 0.3148  loss_mask: 0.1507  loss_rpn_cls: 0.09855  loss_rpn_loc: 0.2645  time: 0.1548  data_time: 0.0157  lr: 0.02  max_mem: 1823M
[32m[09/15 14:43:42 d2.utils.events]: [0m eta: 0:00:42  iter: 4719  total_loss: 0.9943  loss_cls: 0.1596  loss_box_reg: 0.337  loss_mask: 0.1616  loss_rpn_cls: 0.1018  loss_rpn_loc: 0.265  time: 0.1548  data_time: 0.0155  lr: 0.02  max_mem: 1823M
[32m[09/15 14:43:45 d2.utils.events]: [0m eta: 0:00:39  iter: 4739  total_loss: 0.9819  loss_cls: 0.1477  loss_box_reg: 0.3246  loss_mask: 0.1531  loss_rpn_cls: 0.07435  loss_rpn_loc: 0.2806  time: 0.1548  data_time: 0.0154  lr: 0.02  max_mem: 1823M
[32m[09/15 14:43:48 d2.utils.events]: [0m eta: 0:00:36  iter: 4759  total_loss: 0.9865  loss_cls: 0.1507  loss_box_reg: 0.3156  loss_mask: 0.1493  loss_rpn_cls: 0.08716  loss_rpn_loc: 0.2798  time: 0.1547  data_time: 0.0154  lr: 0.02  max_mem: 1823M
[32m[09/15 14:43:51 d2.utils.events]: [0m eta: 0:00:33  iter: 4779  total_loss: 0.9884  loss_cls: 0.1271  loss_box_reg: 0.3202  loss_mask: 0.1552  loss_rpn_cls: 0.1066  loss_rpn_loc: 0.2773  time: 0.1547  data_time: 0.0157  lr: 0.02  max_mem: 1823M
[32m[09/15 14:43:54 d2.utils.events]: [0m eta: 0:00:30  iter: 4799  total_loss: 0.9641  loss_cls: 0.1397  loss_box_reg: 0.3131  loss_mask: 0.1601  loss_rpn_cls: 0.09586  loss_rpn_loc: 0.2738  time: 0.1547  data_time: 0.0158  lr: 0.02  max_mem: 1823M
[32m[09/15 14:43:57 d2.utils.events]: [0m eta: 0:00:27  iter: 4819  total_loss: 0.9925  loss_cls: 0.1343  loss_box_reg: 0.331  loss_mask: 0.1536  loss_rpn_cls: 0.09085  loss_rpn_loc: 0.264  time: 0.1547  data_time: 0.0159  lr: 0.02  max_mem: 1823M
[32m[09/15 14:44:00 d2.utils.events]: [0m eta: 0:00:24  iter: 4839  total_loss: 0.9442  loss_cls: 0.1387  loss_box_reg: 0.3136  loss_mask: 0.1506  loss_rpn_cls: 0.08094  loss_rpn_loc: 0.2701  time: 0.1546  data_time: 0.0153  lr: 0.02  max_mem: 1823M
[32m[09/15 14:44:03 d2.utils.events]: [0m eta: 0:00:21  iter: 4859  total_loss: 0.952  loss_cls: 0.1388  loss_box_reg: 0.3127  loss_mask: 0.1442  loss_rpn_cls: 0.07836  loss_rpn_loc: 0.2752  time: 0.1546  data_time: 0.0148  lr: 0.02  max_mem: 1823M
[32m[09/15 14:44:06 d2.utils.events]: [0m eta: 0:00:18  iter: 4879  total_loss: 0.9618  loss_cls: 0.139  loss_box_reg: 0.3153  loss_mask: 0.1515  loss_rpn_cls: 0.0942  loss_rpn_loc: 0.2687  time: 0.1546  data_time: 0.0159  lr: 0.02  max_mem: 1823M
[32m[09/15 14:44:09 d2.utils.events]: [0m eta: 0:00:15  iter: 4899  total_loss: 0.922  loss_cls: 0.1303  loss_box_reg: 0.3175  loss_mask: 0.1513  loss_rpn_cls: 0.0806  loss_rpn_loc: 0.2699  time: 0.1546  data_time: 0.0154  lr: 0.02  max_mem: 1823M
[32m[09/15 14:44:12 d2.utils.events]: [0m eta: 0:00:12  iter: 4919  total_loss: 1.02  loss_cls: 0.1431  loss_box_reg: 0.3471  loss_mask: 0.1603  loss_rpn_cls: 0.09443  loss_rpn_loc: 0.2851  time: 0.1545  data_time: 0.0159  lr: 0.02  max_mem: 1823M
[32m[09/15 14:44:15 d2.utils.events]: [0m eta: 0:00:09  iter: 4939  total_loss: 0.9476  loss_cls: 0.1408  loss_box_reg: 0.3072  loss_mask: 0.14  loss_rpn_cls: 0.1035  loss_rpn_loc: 0.2836  time: 0.1545  data_time: 0.0150  lr: 0.02  max_mem: 1823M
[32m[09/15 14:44:18 d2.utils.events]: [0m eta: 0:00:06  iter: 4959  total_loss: 0.9857  loss_cls: 0.141  loss_box_reg: 0.3231  loss_mask: 0.1479  loss_rpn_cls: 0.06468  loss_rpn_loc: 0.2881  time: 0.1545  data_time: 0.0167  lr: 0.02  max_mem: 1823M
[32m[09/15 14:44:21 d2.utils.events]: [0m eta: 0:00:03  iter: 4979  total_loss: 1.03  loss_cls: 0.1507  loss_box_reg: 0.3307  loss_mask: 0.1556  loss_rpn_cls: 0.09751  loss_rpn_loc: 0.2758  time: 0.1545  data_time: 0.0149  lr: 0.02  max_mem: 1823M
[32m[09/15 14:44:26 d2.utils.events]: [0m eta: 0:00:00  iter: 4999  total_loss: 1.008  loss_cls: 0.1463  loss_box_reg: 0.3227  loss_mask: 0.1508  loss_rpn_cls: 0.08605  loss_rpn_loc: 0.2832  time: 0.1544  data_time: 0.0155  lr: 0.02  max_mem: 1823M
[32m[09/15 14:44:26 d2.engine.hooks]: [0mOverall training speed: 4998 iterations in 0:12:51 (0.1545 s / it)
[32m[09/15 14:44:26 d2.engine.hooks]: [0mTotal training time: 0:13:02 (0:00:10 on hooks)
[32m[09/15 14:44:26 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[32m[09/15 14:44:26 d2.data.common]: [0mSerializing 20 elements to byte tensors and concatenating them all ...
[32m[09/15 14:44:26 d2.data.common]: [0mSerialized dataset takes 0.46 MiB
[5m[31mWARNING[0m [32m[09/15 14:44:26 d2.engine.defaults]: [0mNo evaluator found. Use `DefaultTrainer.test(evaluators=)`, or implement its `build_evaluator` method.
[32m[09/15 14:44:26 d2.data.build]: [0mDistribution of instances among all 1 categories:
[36m|  category  | #instances   |
|:----------:|:-------------|
| satellite  | 445          |
|            |              |[0m
[32m[09/15 14:44:26 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[32m[09/15 14:44:26 d2.data.common]: [0mSerializing 6 elements to byte tensors and concatenating them all ...
[32m[09/15 14:44:26 d2.data.common]: [0mSerialized dataset takes 0.11 MiB
[5m[31mWARNING[0m [32m[09/15 14:44:26 d2.engine.defaults]: [0mNo evaluator found. Use `DefaultTrainer.test(evaluators=)`, or implement its `build_evaluator` method.
USING MODEL WEIGHT: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp1/model_0000999.pth
Dataset: satellite_Val
	File: ../../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S08_03_SE1_1000X03.png
ddict info:
	path: ../../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S08_03_SE1_1000X03.png
	num_instances: 220
	File: ../../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S06_01_SE1_500X67.png
ddict info:
	path: ../../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S06_01_SE1_500X67.png
	num_instances: 250
	File: ../../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S04_02_SE1_1000X50.png
ddict info:
	path: ../../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S04_02_SE1_1000X50.png
	num_instances: 165
	File: ../../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S03_03_SE1_1250X41.png
ddict info:
	path: ../../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S03_03_SE1_1250X41.png
	num_instances: 250
	File: ../../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S02_01_SE1_300X14.png
ddict info:
	path: ../../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/S02_01_SE1_300X14.png
	num_instances: 191
	File: ../../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/HP743_2S_250x.png
ddict info:
	path: ../../../../../../../../ocean/projects/dmr200021p/sprice/initial_paper_complete_set/HP743_2S_250x.png
	num_instances: 135
gt filename: S08_03_SE1_1000X03.png	 pred filename: S08_03_SE1_1000X03.png
gt filename: S06_01_SE1_500X67.png	 pred filename: S06_01_SE1_500X67.png
gt filename: S04_02_SE1_1000X50.png	 pred filename: S04_02_SE1_1000X50.png
gt filename: S03_03_SE1_1250X41.png	 pred filename: S03_03_SE1_1250X41.png
gt filename: S02_01_SE1_300X14.png	 pred filename: S02_01_SE1_300X14.png
gt filename: HP743_2S_250x.png	 pred filename: HP743_2S_250x.png
x:  [1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2]
y:  [0.29, 0.13, 0.19, 0.29, 0.32, 0.27, 0.72, 0.61, 0.71, 0.65, 0.63, 0.73]
Average Precision Score:  0.24859617113543817
Average Recall Score:     0.6756878167592454
Precision: 0.11382992246091267
Recall: 0.5804704139272154
---
Precision: 0.035073878300855434
Recall: 0.49361567134586404
---
Precision: 0.07358045774321088
Recall: 0.5517049408489909
---
Precision: 0.08939749370996561
Recall: 0.6114390223626237
---
Precision: 0.10375442465038008
Recall: 0.4340859431900947
---
Precision: 0.07007536915504511
Recall: 0.4511098275435267
---
USING MODEL WEIGHT: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp1/model_final.pth
Traceback (most recent call last):
  File "train_powder_single_SALAS_NT.py", line 129, in <module>
    predictor = DefaultPredictor(cfg)  # create predictor object
  File "/jet/home/sprice/.local/lib/python3.8/site-packages/detectron2/engine/defaults.py", line 222, in __init__
    checkpointer.load(cfg.MODEL.WEIGHTS)
  File "/jet/home/sprice/.local/lib/python3.8/site-packages/fvcore/common/checkpoint.py", line 141, in load
    assert os.path.isfile(path), "Checkpoint {} not found!".format(path)
AssertionError: Checkpoint ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp1/model_final.pth not found!
/var/spool/slurm/d/job3631174/slurm_script: line 9: ./gpua.out: No such file or directory
