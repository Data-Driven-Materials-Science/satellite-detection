[W Context.cpp:70] Warning: torch.use_deterministic_algorithms is in beta, and its design and functionality may change in the future. (function operator())
Attempt 1 at Setting Deterministic Nature for CNN Training
Registered Datasets: ['satellite_Train', 'satellite_Val']
ddict info:
	path: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/images/S04_01_SE1_1000X45.png
	num_instances: 41
ddict info:
	path: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/images/HP743_2S_500x.png
	num_instances: 47
ddict info:
	path: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/images/S04_03_SE1_1000X53.png
	num_instances: 40
ddict info:
	path: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/images/S08_03_SE1_1000X03.png
	num_instances: 88
ddict info:
	path: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/images/S06_01_SE1_500X67.png
	num_instances: 54
ddict info:
	path: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/images/S04_02_SE1_1000X50.png
	num_instances: 45
ddict info:
	path: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/images/S03_03_SE1_1250X41.png
	num_instances: 111
ddict info:
	path: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/images/S02_01_SE1_300X14.png
	num_instances: 98
ddict info:
	path: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/images/HP743_2S_250x.png
	num_instances: 49
Weights not found, weights will be downloaded from source: https://dl.fbaipublicfiles.com/detectron2/COCO-InstanceSegmentation/mask_rcnn_R_50_FPN_3x/137849600/model_final_f10217.pkl
[32m[10/30 17:19:43 d2.engine.defaults]: [0mModel:
GeneralizedRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv2): Conv2d(
            64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
          )
          (conv3): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 128, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv2): Conv2d(
            128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=128, eps=1e-05)
          )
          (conv3): Conv2d(
            128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 256, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): BottleneckBlock(
          (conv1): Conv2d(
            1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2): Conv2d(
            512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (objectness_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): StandardROIHeads(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): FastRCNNConvFCHead(
      (flatten): Flatten(start_dim=1, end_dim=-1)
      (fc1): Linear(in_features=12544, out_features=1024, bias=True)
      (fc_relu1): ReLU()
      (fc2): Linear(in_features=1024, out_features=1024, bias=True)
      (fc_relu2): ReLU()
    )
    (box_predictor): FastRCNNOutputLayers(
      (cls_score): Linear(in_features=1024, out_features=2, bias=True)
      (bbox_pred): Linear(in_features=1024, out_features=4, bias=True)
    )
    (mask_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(14, 14), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(14, 14), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (mask_head): MaskRCNNConvUpsampleHead(
      (mask_fcn1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn2): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn3): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (mask_fcn4): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
      (deconv_relu): ReLU()
      (predictor): Conv2d(256, 1, kernel_size=(1, 1), stride=(1, 1))
    )
  )
)
[32m[10/30 17:19:43 d2.data.build]: [0mRemoved 0 images with no usable annotations. 20 images left.
[32m[10/30 17:19:43 d2.data.build]: [0mDistribution of instances among all 1 categories:
[36m|  category  | #instances   |
|:----------:|:-------------|
| satellite  | 1412         |
|            |              |[0m
[32m[10/30 17:19:43 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(640, 672, 704, 736, 768, 800), max_size=1333, sample_style='choice')]
[32m[10/30 17:19:43 d2.data.build]: [0mUsing training sampler TrainingSampler
[32m[10/30 17:19:43 d2.data.common]: [0mSerializing 20 elements to byte tensors and concatenating them all ...
[32m[10/30 17:19:43 d2.data.common]: [0mSerialized dataset takes 0.46 MiB
[5m[31mWARNING[0m [32m[10/30 17:19:43 d2.solver.build]: [0mSOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[32m[10/30 17:19:44 d2.checkpoint.c2_model_loading]: [0mRenaming Caffe2 weights ......
[32m[10/30 17:19:44 d2.checkpoint.c2_model_loading]: [0mFollowing weights matched with submodule backbone.bottom_up:
| Names in Model    | Names in Checkpoint      | Shapes                                          |
|:------------------|:-------------------------|:------------------------------------------------|
| res2.0.conv1.*    | res2_0_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,1,1)             |
| res2.0.conv2.*    | res2_0_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.0.conv3.*    | res2_0_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.0.shortcut.* | res2_0_branch1_{bn_*,w}  | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.1.conv1.*    | res2_1_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,256,1,1)            |
| res2.1.conv2.*    | res2_1_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.1.conv3.*    | res2_1_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res2.2.conv1.*    | res2_2_branch2a_{bn_*,w} | (64,) (64,) (64,) (64,) (64,256,1,1)            |
| res2.2.conv2.*    | res2_2_branch2b_{bn_*,w} | (64,) (64,) (64,) (64,) (64,64,3,3)             |
| res2.2.conv3.*    | res2_2_branch2c_{bn_*,w} | (256,) (256,) (256,) (256,) (256,64,1,1)        |
| res3.0.conv1.*    | res3_0_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,256,1,1)       |
| res3.0.conv2.*    | res3_0_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.0.conv3.*    | res3_0_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.0.shortcut.* | res3_0_branch1_{bn_*,w}  | (512,) (512,) (512,) (512,) (512,256,1,1)       |
| res3.1.conv1.*    | res3_1_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.1.conv2.*    | res3_1_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.1.conv3.*    | res3_1_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.2.conv1.*    | res3_2_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.2.conv2.*    | res3_2_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.2.conv3.*    | res3_2_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res3.3.conv1.*    | res3_3_branch2a_{bn_*,w} | (128,) (128,) (128,) (128,) (128,512,1,1)       |
| res3.3.conv2.*    | res3_3_branch2b_{bn_*,w} | (128,) (128,) (128,) (128,) (128,128,3,3)       |
| res3.3.conv3.*    | res3_3_branch2c_{bn_*,w} | (512,) (512,) (512,) (512,) (512,128,1,1)       |
| res4.0.conv1.*    | res4_0_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,512,1,1)       |
| res4.0.conv2.*    | res4_0_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.0.conv3.*    | res4_0_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.0.shortcut.* | res4_0_branch1_{bn_*,w}  | (1024,) (1024,) (1024,) (1024,) (1024,512,1,1)  |
| res4.1.conv1.*    | res4_1_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.1.conv2.*    | res4_1_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.1.conv3.*    | res4_1_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.2.conv1.*    | res4_2_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.2.conv2.*    | res4_2_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.2.conv3.*    | res4_2_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.3.conv1.*    | res4_3_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.3.conv2.*    | res4_3_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.3.conv3.*    | res4_3_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.4.conv1.*    | res4_4_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.4.conv2.*    | res4_4_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.4.conv3.*    | res4_4_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res4.5.conv1.*    | res4_5_branch2a_{bn_*,w} | (256,) (256,) (256,) (256,) (256,1024,1,1)      |
| res4.5.conv2.*    | res4_5_branch2b_{bn_*,w} | (256,) (256,) (256,) (256,) (256,256,3,3)       |
| res4.5.conv3.*    | res4_5_branch2c_{bn_*,w} | (1024,) (1024,) (1024,) (1024,) (1024,256,1,1)  |
| res5.0.conv1.*    | res5_0_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,1024,1,1)      |
| res5.0.conv2.*    | res5_0_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.0.conv3.*    | res5_0_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| res5.0.shortcut.* | res5_0_branch1_{bn_*,w}  | (2048,) (2048,) (2048,) (2048,) (2048,1024,1,1) |
| res5.1.conv1.*    | res5_1_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,2048,1,1)      |
| res5.1.conv2.*    | res5_1_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.1.conv3.*    | res5_1_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| res5.2.conv1.*    | res5_2_branch2a_{bn_*,w} | (512,) (512,) (512,) (512,) (512,2048,1,1)      |
| res5.2.conv2.*    | res5_2_branch2b_{bn_*,w} | (512,) (512,) (512,) (512,) (512,512,3,3)       |
| res5.2.conv3.*    | res5_2_branch2c_{bn_*,w} | (2048,) (2048,) (2048,) (2048,) (2048,512,1,1)  |
| stem.conv1.norm.* | res_conv1_bn_*           | (64,) (64,) (64,) (64,)                         |
| stem.conv1.weight | conv1_w                  | (64, 3, 7, 7)                                   |
[32m[10/30 17:19:44 d2.engine.train_loop]: [0mStarting training from iteration 0
/jet/home/sprice/.local/lib/python3.8/site-packages/torch/utils/data/dataloader.py:474: UserWarning: This DataLoader will create 4 worker processes in total. Our suggested max number of worker in current system is 1, which is smaller than what this DataLoader is going to create. Please be aware that excessive worker creation might get DataLoader running slow or even freeze, lower the worker number to avoid potential slowness/freeze if necessary.
  warnings.warn(_create_warning_msg(
[32m[10/30 17:19:50 d2.utils.events]: [0m eta: 0:00:14  iter: 19  total_loss: 2.826  loss_cls: 0.5453  loss_box_reg: 0.04373  loss_mask: 0.6564  loss_rpn_cls: 0.6749  loss_rpn_loc: 1.056  time: 0.1839  data_time: 0.1042  lr: 0.00039962  max_mem: 1795M
[32m[10/30 17:19:53 d2.utils.events]: [0m eta: 0:00:10  iter: 39  total_loss: 2.196  loss_cls: 0.2331  loss_box_reg: 0.03322  loss_mask: 0.5926  loss_rpn_cls: 0.5902  loss_rpn_loc: 0.6532  time: 0.1845  data_time: 0.0117  lr: 0.00079922  max_mem: 1795M
[32m[10/30 17:19:58 d2.utils.events]: [0m eta: 0:00:07  iter: 59  total_loss: 2.109  loss_cls: 0.2357  loss_box_reg: 0.238  loss_mask: 0.5613  loss_rpn_cls: 0.5733  loss_rpn_loc: 0.5192  time: 0.1853  data_time: 0.0133  lr: 0.0011988  max_mem: 1795M
[32m[10/30 17:20:02 d2.utils.events]: [0m eta: 0:00:03  iter: 79  total_loss: 2.309  loss_cls: 0.3279  loss_box_reg: 0.4638  loss_mask: 0.5394  loss_rpn_cls: 0.4586  loss_rpn_loc: 0.499  time: 0.1880  data_time: 0.0144  lr: 0.0015984  max_mem: 1795M
[32m[10/30 17:20:06 d2.utils.events]: [0m eta: 0:00:00  iter: 99  total_loss: 2.07  loss_cls: 0.2725  loss_box_reg: 0.3737  loss_mask: 0.4906  loss_rpn_cls: 0.376  loss_rpn_loc: 0.5443  time: 0.1877  data_time: 0.0135  lr: 0.001998  max_mem: 1795M
[32m[10/30 17:20:06 d2.engine.hooks]: [0mOverall training speed: 98 iterations in 0:00:18 (0.1877 s / it)
[32m[10/30 17:20:06 d2.engine.hooks]: [0mTotal training time: 0:00:20 (0:00:01 on hooks)
[32m[10/30 17:20:07 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[32m[10/30 17:20:07 d2.data.common]: [0mSerializing 20 elements to byte tensors and concatenating them all ...
[32m[10/30 17:20:07 d2.data.common]: [0mSerialized dataset takes 0.46 MiB
[5m[31mWARNING[0m [32m[10/30 17:20:07 d2.engine.defaults]: [0mNo evaluator found. Use `DefaultTrainer.test(evaluators=)`, or implement its `build_evaluator` method.
[32m[10/30 17:20:07 d2.data.build]: [0mDistribution of instances among all 1 categories:
[36m|  category  | #instances   |
|:----------:|:-------------|
| satellite  | 445          |
|            |              |[0m
[32m[10/30 17:20:07 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(800, 800), max_size=1333, sample_style='choice')]
[32m[10/30 17:20:07 d2.data.common]: [0mSerializing 6 elements to byte tensors and concatenating them all ...
[32m[10/30 17:20:07 d2.data.common]: [0mSerialized dataset takes 0.11 MiB
[5m[31mWARNING[0m [32m[10/30 17:20:07 d2.engine.defaults]: [0mNo evaluator found. Use `DefaultTrainer.test(evaluators=)`, or implement its `build_evaluator` method.
USING MODEL WEIGHT: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp1/model_0000049.pth
Dataset: satellite_Val
	File: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/images/S08_03_SE1_1000X03.png
ddict info:
	path: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/images/S08_03_SE1_1000X03.png
	num_instances: 250
	File: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/images/S06_01_SE1_500X67.png
ddict info:
	path: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/images/S06_01_SE1_500X67.png
	num_instances: 250
	File: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/images/S04_02_SE1_1000X50.png
ddict info:
	path: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/images/S04_02_SE1_1000X50.png
	num_instances: 250
	File: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/images/S03_03_SE1_1250X41.png
ddict info:
	path: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/images/S03_03_SE1_1250X41.png
	num_instances: 250
	File: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/images/S02_01_SE1_300X14.png
ddict info:
	path: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/images/S02_01_SE1_300X14.png
	num_instances: 250
	File: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/images/HP743_2S_250x.png
ddict info:
	path: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/images/HP743_2S_250x.png
	num_instances: 120
gt filename: S08_03_SE1_1000X03.png	 pred filename: S08_03_SE1_1000X03.png
gt filename: S06_01_SE1_500X67.png	 pred filename: S06_01_SE1_500X67.png
gt filename: S04_02_SE1_1000X50.png	 pred filename: S04_02_SE1_1000X50.png
gt filename: S03_03_SE1_1250X41.png	 pred filename: S03_03_SE1_1250X41.png
gt filename: S02_01_SE1_300X14.png	 pred filename: S02_01_SE1_300X14.png
gt filename: HP743_2S_250x.png	 pred filename: HP743_2S_250x.png
x:  [1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2]
y:  [0.04, 0.01, 0.02, 0.05, 0.02, 0.02, 0.11, 0.06, 0.13, 0.11, 0.06, 0.06]
Average Precision Score:  0.028833333333333336
Average Recall Score:     0.08884705670419957
Precision: 0.0023368679715916525
Recall: 0.009662761021437156
---
Precision: 0.000665304294417941
Recall: 0.02456735229199322
---
Precision: 0.0007616765346835647
Recall: 0.002630283639943395
---
Precision: 0.004022576690450074
Recall: 0.00835287273240132
---
Precision: 0.0012491081513407371
Recall: 0.002316314879960501
---
Precision: 0.0017817557950563236
Recall: 0.002472068522649362
---
USING MODEL WEIGHT: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp1/model_final.pth
Dataset: satellite_Val
	File: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/images/S08_03_SE1_1000X03.png
ddict info:
	path: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/images/S08_03_SE1_1000X03.png
	num_instances: 250
	File: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/images/S06_01_SE1_500X67.png
ddict info:
	path: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/images/S06_01_SE1_500X67.png
	num_instances: 231
	File: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/images/S04_02_SE1_1000X50.png
ddict info:
	path: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/images/S04_02_SE1_1000X50.png
	num_instances: 250
	File: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/images/S03_03_SE1_1250X41.png
ddict info:
	path: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/images/S03_03_SE1_1250X41.png
	num_instances: 250
	File: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/images/S02_01_SE1_300X14.png
ddict info:
	path: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/images/S02_01_SE1_300X14.png
	num_instances: 250
	File: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/images/HP743_2S_250x.png
ddict info:
	path: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/images/HP743_2S_250x.png
	num_instances: 155
gt filename: S08_03_SE1_1000X03.png	 pred filename: S08_03_SE1_1000X03.png
gt filename: S06_01_SE1_500X67.png	 pred filename: S06_01_SE1_500X67.png
gt filename: S04_02_SE1_1000X50.png	 pred filename: S04_02_SE1_1000X50.png
gt filename: S03_03_SE1_1250X41.png	 pred filename: S03_03_SE1_1250X41.png
gt filename: S02_01_SE1_300X14.png	 pred filename: S02_01_SE1_300X14.png
gt filename: HP743_2S_250x.png	 pred filename: HP743_2S_250x.png
x:  [1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2]
y:  [0.03, 0.01, 0.02, 0.04, 0.04, 0.01, 0.08, 0.06, 0.13, 0.08, 0.09, 0.04]
Average Precision Score:  0.024981706465577434
Average Recall Score:     0.08036141428998572
Precision: 0.00028104554131499213
Recall: 0.0006259261742328792
---
Precision: 6.937902372830631e-05
Recall: 0.000322338025142366
---
Precision: 0.00011630824819694628
Recall: 0.0003504790989428433
---
Precision: 0.00026954767400807735
Recall: 0.0008444097229019221
---
Precision: 0.00017808046221773306
Recall: 0.00033478406427854036
---
Precision: 7.091140084544211e-05
Recall: 9.972937311995772e-05
---
Ignoring Final Model
USING MODEL WEIGHT: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp1/model_0000099.pth
Dataset: satellite_Val
	File: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/images/S08_03_SE1_1000X03.png
ddict info:
	path: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/images/S08_03_SE1_1000X03.png
	num_instances: 250
	File: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/images/S06_01_SE1_500X67.png
ddict info:
	path: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/images/S06_01_SE1_500X67.png
	num_instances: 231
	File: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/images/S04_02_SE1_1000X50.png
ddict info:
	path: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/images/S04_02_SE1_1000X50.png
	num_instances: 250
	File: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/images/S03_03_SE1_1250X41.png
ddict info:
	path: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/images/S03_03_SE1_1250X41.png
	num_instances: 250
	File: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/images/S02_01_SE1_300X14.png
ddict info:
	path: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/images/S02_01_SE1_300X14.png
	num_instances: 250
	File: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/images/HP743_2S_250x.png
ddict info:
	path: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/images/HP743_2S_250x.png
	num_instances: 155
gt filename: S08_03_SE1_1000X03.png	 pred filename: S08_03_SE1_1000X03.png
gt filename: S06_01_SE1_500X67.png	 pred filename: S06_01_SE1_500X67.png
gt filename: S04_02_SE1_1000X50.png	 pred filename: S04_02_SE1_1000X50.png
gt filename: S03_03_SE1_1250X41.png	 pred filename: S03_03_SE1_1250X41.png
gt filename: S02_01_SE1_300X14.png	 pred filename: S02_01_SE1_300X14.png
gt filename: HP743_2S_250x.png	 pred filename: HP743_2S_250x.png
x:  [1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2]
y:  [0.03, 0.01, 0.02, 0.04, 0.04, 0.01, 0.08, 0.06, 0.13, 0.08, 0.09, 0.04]
Average Precision Score:  0.024981706465577434
Average Recall Score:     0.08036141428998572
Precision: 0.00028104554131499213
Recall: 0.0006259261742328792
---
Precision: 6.937902372830631e-05
Recall: 0.000322338025142366
---
Precision: 0.00011630824819694628
Recall: 0.0003504790989428433
---
Precision: 0.00026954767400807735
Recall: 0.0008444097229019221
---
Precision: 0.00017808046221773306
Recall: 0.00033478406427854036
---
Precision: 7.091140084544211e-05
Recall: 9.972937311995772e-05
---
Deleting: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp1/model_0000049.pth
Deleting: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp1/model_final.pth
Deleting: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp1/model_0000099.pth
Deleting: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp1/results_checkpoint_0000049.pickle
Deleting: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp1/results_checkpoint_final.pickle
Deleting: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp1/results_checkpoint_0000099.pickle
Removing: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp1/metrics.json
Removing: ../../../../../../../ocean/projects/dmr200021p/sprice/tuning/weights/batch_temp1/last_checkpoint
/var/spool/slurm/d/job4831382/slurm_script: line 8: ./gpua.out: No such file or directory
